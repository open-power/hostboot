<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/ocmb/common/procedures/xml/attribute_info/pmic_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER HostBoot Project                                             -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2020,2024                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
    <attribute>
        <id>ATTR_MEM_PMIC_4U_N_MODE</id>
        <targetType>TARGET_TYPE_OCMB_CHIP</targetType>
        <description>
            For DDR4:
            States of N-Mode declaration for the PMICs on a 4U DIMM.
            The bit would be set high if GPIO or PMIC setup reported a
            failure relating to that part. If two PMICs in a redundant pair have declared
            N-Mode, then the DIMM can not be enabled.

            For DDR5:
            States of N-Mode declaration for the PMICs on a 4U DIMM.
            The bit would be set high if PMIC or DT setup reported a
            failure relating to that part. If two PMICs have declared
            N-Mode, then the DIMM can not be enabled.

            The bits are as follows: [PMIC0, PMIC1, PMIC2, PMIC3, 0, 0, 0, 0]
            Bit high = N-Mode declared, or PMIC was not identified as PRESENT
        </description>
        <initToZero></initToZero>
        <valueType>uint8</valueType>
        <writeable/>
        <mssAccessorName>pmic_n_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_MEM_PMIC_FORCE_N_MODE</id>
        <targetType>TARGET_TYPE_OCMB_CHIP</targetType>
        <description>
            Force one of 4 N-Mode configurations instead of N_PLUS_1 mode.
            The bits are as follows: [PMIC0, PMIC1, PMIC2, PMIC3, 0, 0, 0, 0]
            Set the bits high for the desired PMICs to run with.
            For DDR4 a valid configuration to boot with is at least a pair with one each of [0,2] and [1,3].
            FOr DDR5 a valid configuration to boot with is at least 3 PMICs
            This only applies to 4U DDIMMs.
        </description>
        <enum>
            N_PLUS_1 = 0xF0,
            PMIC01   = 0xC0,
            PMIC03   = 0x90,
            PMIC12   = 0x60,
            PMIC23   = 0x30,
            PMIC012  = 0xE0,
            PMIC013  = 0xD0,
            PMIC023  = 0xB0,
            PMIC123  = 0x70
        </enum>
        <default>N_PLUS_1</default>
        <valueType>uint8</valueType>
        <writeable/>
        <mssAccessorName>pmic_force_n_mode</mssAccessorName>
    </attribute>

    <attribute>
        <id>ATTR_I2C_FAIL_COUNT</id>
        <targetType>TARGET_TYPE_OCMB_CHIP</targetType>
        <description>
            In case of P systems, this attribute gets incremented 3 times if GI2C_FAIL encountered
            in health check HWP. After 3 increments, the attribute stays the same until the issue is fixed
            after which it gets reset.
        </description>
        <default>0</default>
        <valueType>uint8</valueType>
        <writeable/>
    </attribute>
</attributes>
