# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/errl/plugins/ebmc/b0100/errludattributeP_gen.py $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2023,2024
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG
# The content of this file, errludattributeP_gen.py, is automatically
# generated by src/usr/targeting/common/xmltohb/xmltohb.pl and output to
# obj/genfiles/errl/errludattributeP_gen.py.

# At this time, the generated file must be manually copied from the
# obj/genfiles/errl directory to the src/usr/errl/plugins/ebmc/b0100 directory and
# then manually checked in to be picked up by the Hostboot build.

# To pull the parser change into a BMC image, update the commit pointer in the
# openbmc project's meta-openpower/recipes-phosphor/logging/hostboot-pel-parsers_git.bb
# file to reference the Hostboot commit with the change.

import json
from udparsers.helpers.errludP_Helpers import intConcat, hexConcat

""" User Details Parser Attribute called by b0100.py

@param[in] ver: int value of subsection version
@param[in] data: memoryview object of data to be parsed
@returns: JSON string of parsed data
"""
def ErrlUserDetailsParserAttribute(ver, data):
    d = dict()
    subd = dict()
    i = 0

    while (i+4) <= len(data):
        #First 4 bytes is the attr enum
        attrEnum,i=intConcat(data, i, i+4)
        traceEntry = []
        label = ''

        if attrEnum == 0x00116c3:
            #simpleType:uint
            label = "PROC_FABRIC_LINK_ACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x001189a:
            #simpleType:uint
            label = "SYSTEM_PSTATE0_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x002156b:
            #simpleType:uint
            label = "SCRATCH_UINT32_2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0025f83:
            #simpleType:uint
            label = "EXPLR_ENABLE_US_TMPL_B"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0036125:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0041f25:
            #simpleType:uint
            label = "DLR_LINKS_ENABLED"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0056bc3:
            #simpleType:uint
            label = "SMF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x006e0bd:
            pass #complexType - skipping
        elif attrEnum == 0x00bf09b:
            #simpleType:uint
            label = "IPMI_SENSORS"
            traceEntry.append("[16][2]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x00ea92e:
            #simpleType:uint
            label = "MSS_OCMB_EXP_STRUCT_MMIO_WORD_SWAP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x010fb1f:
            #simpleType:uint
            label = "CLOCK_MUX3_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0166494:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_FLOOR_MHZ_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x017bc4f:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F1RC03"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x019e5ac:
            #simpleType:uint
            label = "TOD_ROLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x01a8fc7:
            #simpleType:uint
            label = "MEM_EFF_DDR5_VREFCA_SWEEP_MIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x01e31e8:
            #simpleType:uint
            label = "MAX_ALLOWED_DIMM_FREQ"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0202831:
            #simpleType:uint
            label = "CHTM_MODE_VGTARGET"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0202f28:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_SLEW_RATE_CSCID"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x020a135:
            #simpleType:uint
            label = "PAYLOAD_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x02190b7:
            #simpleType:uint
            label = "NEST_PLL_BUCKET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0220177:
            #simpleType:uint
            label = "RUNN_QUAD_CYCLE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x0241bf2:
            #simpleType:uint
            label = "PM_SPIPSS_CLOCK_POLARITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x025ae26:
            #simpleType:uint
            label = "DIMM_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x025b084:
            #simpleType:uint
            label = "PROC_PCIE_LANE_REVERSAL"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x025f142:
            #simpleType:uint
            label = "IS_IBM_SIMULATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x02878db:
            #simpleType:uint
            label = "PHYP_SYSTEM_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0294b5a:
            pass
        elif attrEnum == 0x02db547:
            #simpleType:uint
            label = "FREQ_MC_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x02fea82:
            #simpleType:uint
            label = "ATTN_CHK_ALL_PROCS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x030e8ef:
            #simpleType:uint
            label = "MSS_MCC_GROUP_32"
            traceEntry.append("[16][21]:")
            for x in range(336):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0310a49:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x033b23b:
            #simpleType:uint
            label = "RCW0F_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x03622b1:
            #simpleType:uint
            label = "AVSBUS_VRM_FAIL_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x03744de:
            #simpleType:uint
            label = "DIMM_POWER_UTIL_INTERMEDIATE_POINTS"
            traceEntry.append("[10]:")
            for x in range(10):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x037feec:
            #simpleType:uint
            label = "PROC_NX_RNG_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x03a7dcf:
            #simpleType:uint
            label = "SBE_BOOTLOADER_CODELEVEL"
            traceEntry.append("[64]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x03a8b72:
            #simpleType:uint
            label = "VPD_REC_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x03ec4a4:
            #simpleType:uint
            label = "PROC_FABRIC_A_INDIRECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0432b91:
            #simpleType:uint
            label = "PROC_FABRIC_TOPOLOGY_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x043e8e0:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_MFG_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x048d1a2:
            #simpleType:uint
            label = "MEM_SI_WINDAGE_RD_CTR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0x0496af4:
            #simpleType:uint
            label = "PROC_TMPL_0_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x04bf0c7:
            #simpleType:uint
            label = "ODY_RST_RXTRK_STATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x04e2520:
            #simpleType:uint
            label = "MEM_DDR5_DFE_GAIN_BIAS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x05012fa:
            #simpleType:enum
            label = "HUGE_PAGE_SIZE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("HUGE_PAGE_SIZE_PAGE_IS_16_GB")
        elif attrEnum == 0x0505dad:
            #simpleType:uint
            label = "MMIO_PHYS_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x05193dd:
            #simpleType:uint
            label = "EFF_DRAM_TWR"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0526f80:
            #simpleType:uint
            label = "LOGGED_FAIL_GETTING_OVERRIDE_WOF_TABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x055981e:
            #simpleType:uint
            label = "EXTERNAL_VRM_TRANSITION_RATE_DEC_UV_PER_US"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0577bb4:
            #simpleType:uint
            label = "RCW01_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x057bedc:
            #simpleType:uint
            label = "ODY_PHY_RX2D_TRAIN_OPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x05b494e:
            #simpleType:uint
            label = "DDS_DPLL_SLEW_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x05c88c6:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_RESET_COUNTER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x05cbd4d:
            #simpleType:uint
            label = "ODY_ENABLE_MALERT_ASYNC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x05d46e3:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_SRANK_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0602310:
            #simpleType:uint
            label = "PCI1_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x06065ab:
            #simpleType:uint
            label = "CLOCK_MUX12_OMI_LCPLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x061c783:
            #simpleType:uint
            label = "ISTEP_CALLOUT_INJECT_ACTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x06716dc:
            #simpleType:uint
            label = "PROC_INT_IC_BAR_PAGE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0691853:
            #simpleType:uint
            label = "EEPROM_PAGE_ARRAY"
            traceEntry.append("[4][16]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x06b6027:
            #simpleType:uint
            label = "COLLECT_SBE_SCRATCH_DATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x06d133f:
            #simpleType:uint
            label = "EFF_DRAM_BANK_BITS"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x06d3ba7:
            #simpleType:uint
            label = "IBSCOM_PROC_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x06e1416:
            #simpleType:uint
            label = "UNSECURE_HOMER_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x06e992f:
            #simpleType:uint
            label = "ALL_MCS_IN_INTERLEAVING_GROUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x070464c:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x071500e:
            #simpleType:uint
            label = "EXP_TOTAL_PWR_SLOPE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x07646f7:
            pass #not readable
        elif attrEnum == 0x078d31b:
            #simpleType:uint
            label = "PROC_TMPL_7_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x079d52d:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_DIFF_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x07a2758:
            #simpleType:uint
            label = "L2_CACHE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x07a9643:
            #simpleType:uint
            label = "EFF_DRAM_DENSITY"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x07bf802:
            #simpleType:uint
            label = "MSS_MRW_DIMM_POWER_CURVE_PERCENT_UPLIFT_IDLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x07ccc77:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC1X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x07e49ed:
            #simpleType:uint
            label = "WOF_IO_STEP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0869a14:
            #simpleType:uint
            label = "VLAN_SWITCHES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x08765f3:
            #simpleType:uint
            label = "MSS_EXP_FW_API_VERSION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x08a4518:
            #simpleType:uint
            label = "MEM_EFF_FREQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x08b7922:
            #simpleType:uint
            label = "PGPE_BOOT_COPIER_IVPR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x08f223c:
            #simpleType:uint
            label = "PGPE_PHANTOM_HALT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0942635:
            #simpleType:uint
            label = "DYNAMIC_INIT_FEATURE_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x094cab6:
            #simpleType:uint
            label = "HTMGT_SAFEMODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x098c48e:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0999272:
            #simpleType:uint
            label = "ODY_PHY_ENABLED_DQ_CHA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x09c451e:
            #simpleType:uint
            label = "KEY_CLEAR_REQUEST_HB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x09d1306:
            #simpleType:uint
            label = "MSS_OCMB_SPECATTN_OBJ_HANDLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x09d23f6:
            #simpleType:uint
            label = "SPCWKUP_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0a4e164:
            pass
        elif attrEnum == 0x0a708ad:
            #simpleType:uint
            label = "RCW47_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0a745be:
            #simpleType:uint
            label = "FILTER_PLL_BUCKET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0a8379a:
            #simpleType:enum
            label = "EEPROM_VPD_REDUNDANCY"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("EEPROM_VPD_REDUNDANCY_POSSIBLE")
            elif attr == 0x00000001:
                 traceEntry.append("EEPROM_VPD_REDUNDANCY_PRESENT")
            elif attr == 0x00000002:
                 traceEntry.append("EEPROM_VPD_REDUNDANCY_NOT_PRESENT")
        elif attrEnum == 0x0a96a60:
            #simpleType:uint
            label = "SYSTEM_FUSED_CORE_PAIRED_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0a9ad3f:
            #simpleType:uint
            label = "RCW40_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0aa0ab1:
            #simpleType:uint
            label = "HOSTSVC_PLID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0ad06df:
            #simpleType:uint
            label = "EXP_RUNTIME_MEM_THROTTLED_N_COMMANDS_PER_SLOT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0ad3826:
            #simpleType:uint
            label = "PDA_THREAD_REG_ENTRY_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0adf7aa:
            #simpleType:uint
            label = "MSS_EXP_OMI_CDR_OFFSET_LANE_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0b12e9e:
            #simpleType:uint
            label = "MEM_EFF_NUM_MASTER_RANKS_PER_DIMM"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0b14185:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_DIFF_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0b207b3:
            #simpleType:uint
            label = "MSS_CENT_AVDD_SLOPE_ACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0b347d3:
            #simpleType:uint
            label = "ODY_DFIPHYUPDRESP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0b4a2fc:
            #simpleType:uint
            label = "MEM_EFF_REGISTER_TYPE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0b9576e:
            #simpleType:uint
            label = "OPEN_POWER_PM_MODE_FREQ_PERCENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0bbbf7b:
            #simpleType:uint
            label = "ODY_DRAMINIT_RECOVERY_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0bce06b:
            #simpleType:uint
            label = "DCACHE_ASSOC_SETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0bf05d1:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_2_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0c075a9:
            pass
        elif attrEnum == 0x0c63607:
            #simpleType:uint
            label = "MSS_EXP_RESP_VREF_DQ_TRAIN_VALUE"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0c8b64a:
            #simpleType:uint
            label = "SW511706_CHECKSTOP_ON_GTE_LV1_HANG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x0ca664f:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0cbd3fd:
            #simpleType:uint
            label = "MSS_CENT_VCS_SLOPE_INACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0cf02b5:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0cf60f4:
            #simpleType:uint
            label = "MSS_EXP_RESP_SELF_REF_ABORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0d1a22c:
            #simpleType:uint
            label = "IO_O_CHANNEL_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0d33633:
            #simpleType:uint
            label = "EFF_DRAM_GEN"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0d40743:
            #simpleType:uint
            label = "PROC_FABRIC_X_ATTACHED_CHIP_CNFG"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0d7122c:
            #simpleType:uint
            label = "OCMB_GOLDEN_BOOT_ATTEMPTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0d8a911:
            #simpleType:uint
            label = "VDN_UPLIFT_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0db7587:
            #simpleType:uint
            label = "MIN_PROC_POWER_PER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0dc047f:
            #simpleType:uint
            label = "FORCE_SBE_SCRATCH_DATA_COLLECTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0dddcbc:
            #simpleType:uint
            label = "PROC_ENABLE_DL_TMPL_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0ddfd25:
            #simpleType:uint
            label = "STOP5_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0de7e70:
            #simpleType:uint
            label = "ODY_ENABLE_US_TMPL_9"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0df4605:
            pass #complexType - skipping
        elif attrEnum == 0x0dfd293:
            #simpleType:uint
            label = "SECURE_SETTINGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0e05a7c:
            #simpleType:uint
            label = "OCC_START_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0e57a47:
            #simpleType:uint
            label = "DDR5_VDN_UPLIFT_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x0ea4707:
            #simpleType:uint
            label = "HTM_QUEUES"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0ec17cd:
            #simpleType:uint
            label = "MEM_DIMM_TYPE_METADATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0ec8887:
            pass #not readable
        elif attrEnum == 0x0f1b8e1:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0f27151:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0f373ad:
            #simpleType:uint
            label = "SYSTEM_WOF_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0f4af00:
            #simpleType:uint
            label = "ODY_MRR_ODT_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0f7ac8a:
            #simpleType:uint
            label = "PROC_INT_NVC_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0f9d926:
            #simpleType:uint
            label = "MNFG_ABUS_MIN_EYE_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x0fb9e1f:
            #simpleType:uint
            label = "MSS_MRW_MEM_M_DRAM_CLOCKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0fc9882:
            #simpleType:uint
            label = "ADC_CHANNEL_GAINS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x0fd5c68:
            #simpleType:uint
            label = "EXPLR_TMPL_5_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x102dda7:
            #simpleType:uint
            label = "PCI_PLL_BUCKET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x103f0e0:
            #simpleType:uint
            label = "ODY_PHY_MSTRCTRLMODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1049d17:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_IMPES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x105b4c6:
            #simpleType:uint
            label = "PROC_DVFS_TEMP_DELTA_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x107988d:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC02"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10a5f6c:
            #simpleType:uint
            label = "FORCE_MFG_SPI_FLASH_CHECK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10ae5b3:
            #simpleType:uint
            label = "MNFG_TH_L2_DIR_CES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10c8327:
            #simpleType:uint
            label = "MEM_EFF_DDR5_PHY_VREF_RD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10cd9ed:
            #simpleType:uint
            label = "ODY_SENSOR_READ_FIRST_FAIL"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10d2a3d:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_SLOPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x10d5dbc:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_PHASE_COMB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x10e6b93:
            #simpleType:uint
            label = "ENABLE_ABIST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1166570:
            #simpleType:uint
            label = "MSS_VOLT_VPP_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x116670c:
            #simpleType:enum
            label = "FSI_MASTER_TYPE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("FSI_MASTER_TYPE_MFSI")
            elif attr == 0x00000001:
                 traceEntry.append("FSI_MASTER_TYPE_CMFSI")
            elif attr == 0x00000002:
                 traceEntry.append("FSI_MASTER_TYPE_NO_MASTER")
        elif attrEnum == 0x117c575:
            #simpleType:uint
            label = "NHTM_HTMSC_MODE_CONTENT_SEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1192453:
            #simpleType:uint
            label = "TIME_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x11a66f1:
            #simpleType:uint
            label = "HB_HRMOR_NODAL_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x11b28b1:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_RISE_CK"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x11db9be:
            #simpleType:uint
            label = "MEM_CS_ASSERT_IN_MPC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x11f5010:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x11f71fb:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC1_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1232b64:
            #simpleType:uint
            label = "SBE_COMM_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x12aa7fd:
            #simpleType:uint
            label = "MEM_EFF_SUPPORTED_RCD"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x12b0629:
            #simpleType:uint
            label = "RUNN_STOP_ON_XSTOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x12be307:
            #simpleType:uint
            label = "ODY_DRAMINIT_VERBOSITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x13326ac:
            #simpleType:uint
            label = "MSS_PHY_SEQ_REFRESH"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x133d3ca:
            #simpleType:uint
            label = "CLOCK_MUX13_OPT_133_SOURCE_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x134e3f0:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_SERDES_FREQUENCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x134fdb0:
            #simpleType:uint
            label = "TLB_INSTR_ASSOC_SETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x137d006:
            #simpleType:uint
            label = "MEM_WL_INTERNAL_CYCLE_ALIGNMENT"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x13cd0a9:
            #simpleType:uint
            label = "RUNN_CYCLE_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x140ddc8:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1419735:
            pass #not readable
        elif attrEnum == 0x1439e9f:
            #simpleType:uint
            label = "PROC_PCIE_LANE_MASK"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x14625e7:
            #simpleType:uint
            label = "PROC_OCC_SANDBOX_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x148c185:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x14fbc6a:
            pass
        elif attrEnum == 0x1578acf:
            #simpleType:uint
            label = "ASCII_VPD_LX_KEYWORD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x1587d89:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC0_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x158ad24:
            #simpleType:uint
            label = "MEM_EFF_EXTCALRESVAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x158bb98:
            #simpleType:uint
            label = "MEM_EFF_DDR5_VREFCS_SWEEP_MAX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x159dbfd:
            #simpleType:uint
            label = "DDR5_DRAM_RTT_WR"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x15c7694:
            #simpleType:uint
            label = "PBAX_BRDCST_ID_VECTOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x15da8c9:
            #simpleType:uint
            label = "I2C_INHIBIT_DIAGNOSTIC_RESET_ENGINE_B"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x15f7d77:
            #simpleType:uint
            label = "CORE_HASPOWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x164477a:
            #simpleType:uint
            label = "MEM_SI_MC_RCV_IMP_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x16824ac:
            #simpleType:uint
            label = "PM_SPIPSS_CLOCK_DIVIDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x169e135:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_RISE_AC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16a3e9f:
            #simpleType:uint
            label = "CHTM_CTRL_TRIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16ca47a:
            #simpleType:uint
            label = "IO_OMI_PRE2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16cbbfb:
            #simpleType:uint
            label = "MNFG_TH_L2_LINE_DELETES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16d0d5a:
            #simpleType:uint
            label = "MEM_EFF_DDR5_CHANNEL_BUS_WIDTH"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16e4587:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLON_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16ed83e:
            #simpleType:uint
            label = "MEM_DDR5_MIN_REF_RATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x16fbd51:
            pass #complexType - skipping
        elif attrEnum == 0x17228f8:
            #simpleType:uint
            label = "MSS_VDD_PROGRAM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x172d7c5:
            #simpleType:uint
            label = "HTMSC_TSIZEFILT_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1737151:
            #simpleType:uint
            label = "DDR5_EN_TX_DQ_PREAMBLE_PATTERN_U1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1739602:
            #simpleType:uint
            label = "PDA_THREAD_REG_STATE_ENTRY_FORMAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x174a2ca:
            #simpleType:uint
            label = "RCW05_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x177f39f:
            #simpleType:uint
            label = "I2C_DEV_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1788780:
            #simpleType:uint
            label = "MNFG_TH_L3_LINE_DELETES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x17ca2c5:
            #simpleType:uint
            label = "ODY_DQS_OSC_RUNTIME_SEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x17daf7d:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC0_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x17dbf79:
            #simpleType:uint
            label = "MEM_EXP_RCD_DIC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x17f1548:
            #simpleType:uint
            label = "PROC_FABRIC_IOHS_BUS_WIDTH"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x18128bb:
            #simpleType:uint
            label = "PROC_MIRROR_SIZES"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x1838631:
            #simpleType:uint
            label = "HOMER_VIRT_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x183c3a9:
            #simpleType:uint
            label = "MEM_SI_DRAM_RTT_PARK"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1848b5a:
            #simpleType:uint
            label = "IPS_ENTER_TIME_SECONDS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x18658a8:
            #simpleType:uint
            label = "CLOCK_MUX0A_RCS_PLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1865b64:
            #simpleType:uint
            label = "EXPLR_ENABLE_US_TMPL_5"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1871395:
            pass #not readable
        elif attrEnum == 0x18849c5:
            pass #not readable
        elif attrEnum == 0x18a11eb:
            #simpleType:uint
            label = "MSS_VOLT_VPP_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x18a17a2:
            #simpleType:uint
            label = "SCRATCH_UINT64_2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x18ba600:
            #simpleType:uint
            label = "PROC_INT_NVC_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x18bfacf:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x18d405f:
            #simpleType:uint
            label = "EFF_RANK_GROUP_OVERRIDE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x18d5136:
            #simpleType:uint
            label = "DDR5_DRAM_DQS_RTT_PARK_PER_DRAM"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x18dd068:
            #simpleType:uint
            label = "MSS_VPD_MT_MC_BIAS_TRIM"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x18dd55a:
            #simpleType:uint
            label = "IPMI_INSTANCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x18ee29e:
            #simpleType:uint
            label = "RCW44_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1902629:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x192b80e:
            #simpleType:uint
            label = "FAPINAME_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1949903:
            #simpleType:uint
            label = "MRW_VMEM_REGULATOR_MEMORY_POWER_LIMIT_PER_DIMM_DDR3"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1952ef4:
            #simpleType:uint
            label = "IO_OBUS_TX_FFE_POSTCURSOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1983e2d:
            #simpleType:uint
            label = "IBSCOM_MCS_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x198c24a:
            #simpleType:uint
            label = "EXP_MEM_THROTTLED_N_COMMANDS_PER_SLOT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x19a4504:
            #simpleType:uint
            label = "PIB_I2C_NEST_PLL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x19bf475:
            #simpleType:uint
            label = "EXPLR_TMPL_B_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x19c712c:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VDD_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x19d1b7e:
            pass #complexType - skipping
        elif attrEnum == 0x19f4158:
            #simpleType:uint
            label = "NV_OPS_TIMEOUT_MSEC"
            traceEntry.append("[6]:")
            for x in range(6):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1a091ba:
            #simpleType:uint
            label = "EXTERNAL_VRM_STEPSIZE"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1a17aae:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_SECOND_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1a4dca3:
            #simpleType:uint
            label = "WOV_OVERV_STEP_INCR_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1a946e7:
            pass #complexType - skipping
        elif attrEnum == 0x1a9b1f1:
            #simpleType:uint
            label = "MSS_OCMB_HALF_DIMM_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1b14ba7:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC3_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1b37f43:
            #simpleType:uint
            label = "OCMB_PLL_BUCKET_SIM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1b4bb3a:
            pass
        elif attrEnum == 0x1b589a0:
            #simpleType:uint
            label = "RECONFIGURE_LOOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1b5a205:
            #simpleType:uint
            label = "INDEX_N_PLUS_ONE_BULK_POWER_LIMIT_WATTS"
            traceEntry.append("[24]:")
            for x in range(24):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x1bbffe8:
            #simpleType:uint
            label = "DDR5_MC_DRAM_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1bc94b8:
            #simpleType:uint
            label = "SYSTEM_RESCLK_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1c05310:
            #simpleType:uint
            label = "PROC_PCIE_LANE_EQUALIZATION_GEN5"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x1c0d755:
            #simpleType:uint
            label = "MEM_MIRROR_PLACEMENT_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1c28c5e:
            #simpleType:uint
            label = "EFF_DRAM_ROW_BITS"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1c5c585:
            #simpleType:uint
            label = "HWAS_STATE_CHANGED_FLAG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x1ca5b41:
            #simpleType:uint
            label = "SYSTEM_RESCLK_ISTEP4_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1ca612d:
            #simpleType:uint
            label = "IO_O_MFG_STRESS_PR_OFFSET_ODD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1cc65c9:
            #simpleType:uint
            label = "TPM_MODEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1cfc587:
            pass #complexType - skipping
        elif attrEnum == 0x1cffbc3:
            #simpleType:uint
            label = "MEMCTRL_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1d2e7e8:
            #simpleType:uint
            label = "EXPLR_SHRT_BACKOFF_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1d3aaf3:
            #simpleType:uint
            label = "HUGE_PAGE_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x1d3faf3:
            #simpleType:uint
            label = "HTMSC_FILT_SCOPE_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1d55f3f:
            #simpleType:uint
            label = "PEC_PCIE_IOP_SWAP_BIFURCATED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1d74d8f:
            pass #complexType - skipping
        elif attrEnum == 0x1dabb0c:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC04"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1dbe9ca:
            #simpleType:uint
            label = "MEM_EFF_TSV_8H_SUPPORT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1dc43a0:
            #simpleType:uint
            label = "SBE_COMPROMISED_EID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1e1c64d:
            pass #complexType - skipping
        elif attrEnum == 0x1e33fa9:
            #simpleType:uint
            label = "RCW41_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1e5007b:
            #simpleType:uint
            label = "CHTM_MODE_LLAT_PAUSE_ON_PURGE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1e51d61:
            #simpleType:uint
            label = "N_PLUS_ONE_MEM_POWER"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1e8208b:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_IPL_SOFT_CE_TH_ALGO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1e96f94:
            #simpleType:uint
            label = "OMI_RX_LTEG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1ea2968:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1edce66:
            #simpleType:uint
            label = "EXP_DATABUS_UTIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x1ef2a04:
            #simpleType:uint
            label = "PROC_SBE_MCS_SETUP_REG_STATES"
            traceEntry.append("[9]:")
            for x in range(9):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x1f2c617:
            #simpleType:uint
            label = "PROC_FABRIC_X_ADDR_DIS"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1f50813:
            #simpleType:uint
            label = "MSS_EXP_RESP_GEARDOWN_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1f722ba:
            #simpleType:uint
            label = "DDR5_DRAM_CS_ODT_PER_DRAM"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x1fa93ae:
            pass #not readable
        elif attrEnum == 0x1fbf757:
            pass #complexType - skipping
        elif attrEnum == 0x1fddb6b:
            #simpleType:uint
            label = "MSS_MRW_PERIODIC_ZQCAL_MODE_OPTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x1fe3e53:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC3_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1fe9602:
            #simpleType:uint
            label = "FORCE_ODY_SB_CHK_IN_MFG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x1ffe3ce:
            #simpleType:uint
            label = "LPC_BUS_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x203d77f:
            #simpleType:uint
            label = "MSS_OCMB_CHECKSTOP_OBJ_HANDLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x2044655:
            #simpleType:uint
            label = "PLDM_BIOS_ERROR_INFORMATIONAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x206be4b:
            #simpleType:uint
            label = "PROC_PSI_BRIDGE_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x208270e:
            #simpleType:uint
            label = "SLCA_INDEX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x208baa7:
            #simpleType:uint
            label = "EFF_PACKAGE_RANK_MAP"
            traceEntry.append("[2][2][18]:")
            for x in range(72):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x20ee8fd:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SEQUENCE_CFG1_R41"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21049e0:
            #simpleType:uint
            label = "PROC_EPS_READ_CYCLES_T0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x210fee7:
            #simpleType:uint
            label = "ODY_PHY_CALINTERVAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x211648c:
            #simpleType:uint
            label = "CORE_THROTTLE_ASSERT_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x21371e3:
            #simpleType:uint
            label = "RCW42_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x213ac30:
            #simpleType:uint
            label = "IO_X_MFG_CHK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x214b9d8:
            #simpleType:uint
            label = "PRD_DD1_OMI_DEGRADE_PREDICTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2165e1d:
            #simpleType:uint
            label = "USE_11S_SPD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21889e5:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x218e65f:
            #simpleType:uint
            label = "DYNAMIC_INIT_MODE_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x219028e:
            #simpleType:uint
            label = "VDN_VOLTAGE_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x219583a:
            #simpleType:uint
            label = "SYSTEM_MMA_POWERON_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x219cef7:
            #simpleType:uint
            label = "BACKING_CACHES_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21a3945:
            pass #complexType - skipping
        elif attrEnum == 0x21c70fd:
            #simpleType:uint
            label = "FSI_SLAVE_CASCADE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21d1a50:
            #simpleType:uint
            label = "FORCE_TPM_NOT_PRESENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21d59a2:
            #simpleType:uint
            label = "NV_STATUS_FLAG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x21f48a8:
            #simpleType:uint
            label = "DDR5_MC_DRAM_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x221fcbe:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_CEILING_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2239266:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRFC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x22428b6:
            #simpleType:uint
            label = "I2C_INHIBIT_DIAGNOSTIC_RESET_ENGINE_D"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x227fe0f:
            #simpleType:uint
            label = "APSS_GPIO_PORT_MODES"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2280840:
            #simpleType:uint
            label = "MSS_VPP_PROGRAM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x22941b3:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_DQ_DQS_PULL_UP"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x22d9035:
            #simpleType:uint
            label = "VENDOR_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x22ecfb0:
            #simpleType:uint
            label = "ODY_DISABLE_PMU_ECC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x231c430:
            #simpleType:uint
            label = "MEM_REF_INTERVAL_RATE_INDIC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x232c72e:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_RBT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2354c19:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x23ad20f:
            #simpleType:uint
            label = "PROC_FABRIC_A_AGGREGATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x23b10ad:
            #simpleType:enum
            label = "SW_VER"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000001:
                 traceEntry.append("SW_VER_FSP_SW_VER")
            elif attr == 0x00000002:
                 traceEntry.append("SW_VER_BMC_SW_VER")
        elif attrEnum == 0x23b1510:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x23c87d8:
            #simpleType:uint
            label = "PROC_EPS_TABLE_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x23d66fa:
            #simpleType:uint
            label = "MSS_MRW_SUPPORTED_FREQ"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x23e3fd9:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2412cf9:
            #simpleType:uint
            label = "DDS_FMIN_OVERRIDE_KHZ"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2412f59:
            #simpleType:uint
            label = "DDS_DROOP_EXTREME_OVERRIDE"
            traceEntry.append("[9]:")
            for x in range(9):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x241918a:
            #simpleType:uint
            label = "MC_SYNC_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2435b41:
            #simpleType:uint
            label = "OT_MIN_N_PER_SLOT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x244f3e1:
            #simpleType:uint
            label = "WOV_UNDERV_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x24a0f92:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x24bd83c:
            pass #not readable
        elif attrEnum == 0x24dbd79:
            #simpleType:uint
            label = "RCW0D_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2543532:
            #simpleType:uint
            label = "ODY_SETUP_SAFEMODE_THROTTLES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x25683a0:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_RTT_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2596df8:
            #simpleType:uint
            label = "ODY_PHY_DISABLED_DBYTE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x25b0084:
            #nativeType:EntityPath
            label = "FSI_MASTER_CHIP"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0x25ef505:
            #simpleType:uint
            label = "CHTM_MODE_LLAT_IMBEDDED_TS"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2601b9e:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x26068b8:
            #simpleType:uint
            label = "HBRT_EID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x260fed1:
            #simpleType:uint
            label = "SBE_BOOTLOADER_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x263ef7e:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLON_RD_NT"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2641d60:
            #simpleType:uint
            label = "SBE_SECURE_BOOT_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x268a991:
            #simpleType:uint
            label = "MEM_EFF_DRAM_CL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x26a0f2c:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_MFG_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x26a1129:
            #simpleType:uint
            label = "MSS_EXP_RESP_WRITE_DBI"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x26ecfec:
            #simpleType:uint
            label = "EXTENDED_FREQ_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2716b4f:
            #simpleType:uint
            label = "DLR_PLSF_OVERRIDE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x273447d:
            #simpleType:uint
            label = "HB_SBE_SEEPROM_VERSION_MISMATCH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2751df0:
            #simpleType:uint
            label = "RCW0F_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2754e20:
            #simpleType:uint
            label = "HTMSC_FILT_OCC_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2773a86:
            #simpleType:uint
            label = "DDR5_DIMM_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x278bc56:
            #simpleType:uint
            label = "FRU_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x278cfeb:
            pass #not readable
        elif attrEnum == 0x27a866f:
            #simpleType:uint
            label = "DDR5_DRAM_CA_ODT_PER_DRAM"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x27bb801:
            #simpleType:uint
            label = "MEM_EXP_RCD_VOLTAGE_CTRL"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2806d71:
            #simpleType:uint
            label = "MMIO_VM_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x280b074:
            #simpleType:uint
            label = "CLOCK_MUX_PCI_LCPLL_INPUT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x284334b:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2851ca1:
            #simpleType:uint
            label = "MSS_OCMB_EXP_STRUCT_MMIO_ENDIAN_CTRL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x285a024:
            #simpleType:uint
            label = "ODY_PHY_CONFIG_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x28f86dd:
            #simpleType:uint
            label = "MEM_MPSM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x29009e8:
            pass #not readable
        elif attrEnum == 0x29081fa:
            #simpleType:uint
            label = "PROC_EPS_GB_PERCENTAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2914dff:
            #simpleType:uint
            label = "AVSBUS_BUSNUM"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2925ef3:
            #simpleType:uint
            label = "DDR5_TX_DM_PREAMBLE_PATTERN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x295e3af:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLOFF_WR_NT"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x298abc7:
            #simpleType:uint
            label = "MC_DRAM_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2996256:
            #simpleType:uint
            label = "SYSTEM_IVRM_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2997eae:
            #simpleType:uint
            label = "MSS_MRW_DRAM_2N_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x29bcc00:
            #simpleType:uint
            label = "NUM_KEY_ADDR_PAIR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x29bf0cb:
            #simpleType:uint
            label = "OMI_CHANNEL_LENGTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x29d3a9f:
            #simpleType:uint
            label = "HB_HRMOR_BYTES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x29e9ba8:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2a8e9d5:
            #simpleType:uint
            label = "CLEAR_DIMM_SPD_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2a9cfd3:
            #simpleType:uint
            label = "VDD_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2ab46d8:
            #simpleType:uint
            label = "EXP_RUNTIME_MEM_M_DRAM_CLOCKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2ab5b69:
            #simpleType:uint
            label = "PLDM_HB_PDR_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2af1514:
            #simpleType:uint
            label = "RCW45_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2afc21f:
            #simpleType:uint
            label = "ZERO_CORE_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2b00bff:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VPP_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2b044eb:
            #simpleType:uint
            label = "ATTN_AREA_1_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x2b1e162:
            #simpleType:uint
            label = "ODY_DIS_PTRINITCLR_TXTRACKING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2b21694:
            #simpleType:uint
            label = "MSS_MNFG_EDPL_THRESHOLD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2b23c7c:
            #simpleType:uint
            label = "SBE_UPDATE_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2b5f6b7:
            #simpleType:uint
            label = "MSS_MRW_SAFEMODE_DRAM_DATABUS_UTIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2b732f9:
            pass
        elif attrEnum == 0x2b742a3:
            #simpleType:uint
            label = "MSS_MRW_THERMAL_SENSOR_POLLING_PERIOD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2b8523d:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TCCD_L"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2b8d151:
            #simpleType:uint
            label = "PROC_DCM_INSTALLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2bf8757:
            #simpleType:uint
            label = "EX_INSIDE_SPECIAL_WAKEUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2bfa1f9:
            #simpleType:uint
            label = "CME_CHTM_TRACE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2c13580:
            #simpleType:uint
            label = "ICACHE_BLOCK_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2c34124:
            #simpleType:uint
            label = "MRW_FREQ_SYSTEM_CORE_FLOOR_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2c3dd0b:
            #simpleType:uint
            label = "HTMSC_FILT_SOURCE_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2cb2b25:
            #simpleType:uint
            label = "ODY_PHY_USE_BROADCAST_MR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2cf6852:
            #simpleType:uint
            label = "ISTEP_PAUSE_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x2d07bed:
            #simpleType:uint
            label = "MEM_EFF_DRAM_MODULE_HEIGHT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d207b6:
            #simpleType:uint
            label = "FABRIC_TO_PHYSICAL_NODE_MAP"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d47f25:
            #simpleType:uint
            label = "MFG_SCREEN_OMI_EDPL_ALLOWED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2d5e154:
            #simpleType:uint
            label = "IO_IOHS_XTALK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d603ab:
            #simpleType:uint
            label = "NEST_DPLL_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d6153f:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_SLEW_RATE_CLK"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d75ccd:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRCD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2d9433b:
            #simpleType:uint
            label = "OBUS_BRICK_LANE_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2da9fc2:
            #simpleType:uint
            label = "ODY_PHY_CA_TRAIN_OPTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2dae314:
            #simpleType:uint
            label = "HTMSC_FILT_PORT1_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2dc6337:
            #simpleType:uint
            label = "SBE_MEASUREMENT_SEEPROM_VERSION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2dc6458:
            #simpleType:uint
            label = "SYSTEM_PDV_TDP_CURRENT_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2dd7524:
            #simpleType:uint
            label = "EXP_SAFEMODE_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2df5e4a:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_OUTPUT_BUFFER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e0dedf:
            #simpleType:uint
            label = "CHTM_MODE_CORE_CAPTURE_TRACE_FULL_ON_ERROR"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e199fe:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_CNTL"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e226ad:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e3af06:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e48910:
            #simpleType:uint
            label = "MEM_EFF_DDP_COMPATIBILITY"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e5f49c:
            #simpleType:uint
            label = "CHIPLET_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e92774:
            #simpleType:uint
            label = "SYSTEM_PDV_TDP_CURRENT_LAB_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2e988c0:
            #simpleType:uint
            label = "ODY_RUNTIME_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2e9bbeb:
            #simpleType:uint
            label = "MSS_MRW_OCMB_SAFEMODE_UTIL_ARRAY"
            traceEntry.append("[50]:")
            for x in range(50):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x2eccc49:
            #simpleType:uint
            label = "PROC_FABRIC_DLR_PSAVE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2eda5ab:
            #simpleType:uint
            label = "NO_XSCOM_ENFORCEMENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2ef58ce:
            #simpleType:uint
            label = "WOF_OMI_FORCE_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2efe391:
            #simpleType:uint
            label = "SYSTEM_OCS_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2f0f359:
            #simpleType:uint
            label = "MFG_FLAGS"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2f2f11c:
            #simpleType:uint
            label = "EFF_DRAM_COLUMN_BITS"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2f4ac23:
            #simpleType:uint
            label = "SYSTEM_DDS_FREQ_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2fae486:
            #simpleType:uint
            label = "MSS_EXP_RESP_MPR_RD_FORMAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2fc08c0:
            #simpleType:uint
            label = "OCS_WITH_DDS_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2fcf5a5:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_FREEZE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x2fd4ceb:
            #simpleType:uint
            label = "MSL_FIELD_SUPPORTED"
            traceEntry.append("[12]:")
            for x in range(12):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x2fd62ba:
            #simpleType:uint
            label = "XGPE_BOOT_COPIER_IVPR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x2ff4978:
            #simpleType:uint
            label = "RCW49_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x301ecfd:
            #simpleType:uint
            label = "N_PLUS_ONE_BULK_POWER_LIMIT_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x309917b:
            #simpleType:uint
            label = "SYS_ENABLE_MC_HW520600_X4CTR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x30c07c8:
            #simpleType:uint
            label = "PNOR_FLASH_WORKAROUNDS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x30c46b3:
            #simpleType:uint
            label = "REL_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x30cbc29:
            #simpleType:uint
            label = "TEST_NEGATIVE_FCN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x310948f:
            #simpleType:uint
            label = "MSS_EXP_RESP_RD_PREAMBLE_TRAIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3126bb2:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_REDUNDANCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x313a22a:
            #simpleType:uint
            label = "DDR5_DRAM_RD_PREAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x314253a:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC5X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x317b69f:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VDDR_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x31a8e4b:
            #simpleType:uint
            label = "SKEWADJ_CACHE_PDLY_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x31ac5c6:
            #simpleType:uint
            label = "VRM_VDD_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x325ae61:
            #simpleType:uint
            label = "DIMM_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x326c7fd:
            #simpleType:uint
            label = "ODY_ENABLE_US_TMPL_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x326e0e2:
            #simpleType:uint
            label = "MSS_OCMB_ENTERPRISE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x32adc69:
            pass #complexType - skipping
        elif attrEnum == 0x32c01e3:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC0F"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x32cec3d:
            #simpleType:uint
            label = "SAVED_DLP_FIR_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x32d623a:
            #simpleType:uint
            label = "MSS_VOLT_VCS_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x32d84bd:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VCS_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x32d9a77:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC2_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x32f9c30:
            #simpleType:uint
            label = "CONTAINED_LOAD_PATH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x32ff12d:
            #simpleType:uint
            label = "MSS_EXP_FW_VERSION_B"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x330c475:
            #simpleType:uint
            label = "IPMI_MAX_BUFFER_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3310305:
            #simpleType:uint
            label = "DDS_TRIP_INTERPOLATION_CONTROL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3317838:
            #simpleType:uint
            label = "MSS_VOLT_VDDR_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3322938:
            #simpleType:uint
            label = "PEC_PCIE_IOP_REVERSAL_BIFURCATED"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3322c7e:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_FALL_CK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x33234bf:
            #simpleType:uint
            label = "ADC_CHANNEL_GNDS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3332949:
            #simpleType:uint
            label = "OMI_BIST_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3342c24:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SEQUENCE_CFG1_R41"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3351ea6:
            #simpleType:uint
            label = "PROC_PAU_MMIO_BAR_BASE_ADDR_OFFSET"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x335e006:
            #simpleType:uint
            label = "SECURE_VERSION_LOCKIN_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3371dc2:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_SLEW_RATE_CMD_ADDR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x33a20f8:
            #simpleType:uint
            label = "DDS_DPLL_FMAX_FAST_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x33afdd0:
            pass #complexType - skipping
        elif attrEnum == 0x343de3b:
            #simpleType:uint
            label = "PROC_INT_NVPG_BAR_RANGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x346c2dc:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SEQUENCE_CFG2_R42"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x347b055:
            #simpleType:uint
            label = "PROC_TMPL_1_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x347eff6:
            #simpleType:uint
            label = "HOSTBOOT_HRMOR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x34c35e2:
            #simpleType:uint
            label = "MEM_EFF_DIMM_RAW_CARD_REFERENCE_DESIGN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x34e5f5b:
            #simpleType:uint
            label = "RCW09_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x34eeb58:
            #simpleType:uint
            label = "FABRIC_CHIP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3519971:
            #simpleType:uint
            label = "WOF_VRATIO_VCS_10THPCT"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x355e81c:
            #simpleType:uint
            label = "OMI_TX_PRE2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3565220:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x359f511:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x35d5e3f:
            #simpleType:uint
            label = "OCMB_REL_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x35e1cdc:
            #simpleType:uint
            label = "HTMGT_INTERNAL_FLAGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x36519d8:
            #simpleType:uint
            label = "MSS_EXP_RESP_RD_PREAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x365d06b:
            #simpleType:uint
            label = "MEM_EFF_PSTATES"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36ac7a5:
            #simpleType:uint
            label = "PROC_SELECT_SEEPROM_IMAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36b1670:
            #simpleType:uint
            label = "PDW_TRACE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36b5355:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_EVENT_SELECT"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36cb5ff:
            #simpleType:uint
            label = "ISTEP_CALLOUT_INJECT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36db145:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36e454b:
            #simpleType:uint
            label = "PROC_FABRIC_A_ATTACHED_LINK_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36ea053:
            #simpleType:uint
            label = "SYSTEM_VDM_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36ebdf0:
            #simpleType:uint
            label = "PBAO_LFIRMASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x36f124b:
            #simpleType:uint
            label = "MSS_EXP_RESP_CRC_WR_LATENCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x36f90c5:
            #simpleType:uint
            label = "BOOT_PAU_DPLL_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3712d9f:
            #simpleType:uint
            label = "ODY_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3761a65:
            #simpleType:uint
            label = "SYNC_BETWEEN_STEPS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x37796c6:
            #simpleType:uint
            label = "SAFE_MODE_THROTTLE_IDX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3785784:
            #simpleType:uint
            label = "OVERSUB_N_PER_SLOT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x37e48f5:
            #simpleType:uint
            label = "MSS_EXP_RESP_CA_PARITY_ERROR_STATUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x38313b7:
            #simpleType:uint
            label = "EFF_REGISTER_TYPE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3849826:
            #simpleType:uint
            label = "PROC_MEM_BASES"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x3883186:
            #simpleType:uint
            label = "PROC_FABRIC_PRESENT_GROUPS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3884378:
            #simpleType:uint
            label = "MRW_DEFAULT_RISK_LEVEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x38a35a1:
            #simpleType:uint
            label = "FREQ_X_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x38a7b13:
            #simpleType:uint
            label = "PRD_HWP_PLID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x38a9ed0:
            #simpleType:uint
            label = "MSS_EXP_FW_VERSION_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x38d7407:
            #simpleType:uint
            label = "EARLY_TESTCASES_ISTEP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x38da24e:
            #simpleType:uint
            label = "OMI_DL_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x38feb73:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3917523:
            #simpleType:uint
            label = "WOF_DCCR_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x392c87c:
            #simpleType:uint
            label = "RCW44_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3952eeb:
            #simpleType:uint
            label = "PHY_GET_MAIL_TIMEOUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x39691ca:
            #simpleType:uint
            label = "SAFE_MODE_FREQUENCY_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3982c85:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_PHASE_COMB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x399d463:
            #simpleType:uint
            label = "DDR5_DRAM_WR_VREFDQ"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x39e6bbf:
            #simpleType:uint
            label = "ENABLE_FIR_UNMASKING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3a1816c:
            pass #complexType - skipping
        elif attrEnum == 0x3a53581:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_RTT_NOM"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3a9b8a6:
            #simpleType:uint
            label = "SYSTEM_COMPAT_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3aa234f:
            #simpleType:uint
            label = "MSS_VOLT_VPP_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3ad5ca0:
            #simpleType:uint
            label = "NHTM_HTMSC_MODE_SYNC_STAMP_FORCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3aecc94:
            pass #not readable
        elif attrEnum == 0x3b00047:
            #simpleType:uint
            label = "MEM_SI_DRAM_PREAMBLE"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3b0296f:
            #simpleType:uint
            label = "HYP_INHIBIT_RUNTIME_BMC_RESET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3b039dc:
            pass #complexType - skipping
        elif attrEnum == 0x3b1ed0d:
            #simpleType:uint
            label = "WOV_OVERV_VMAX_SETPOINT_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3b6e39f:
            pass #complexType - skipping
        elif attrEnum == 0x3b80bcf:
            #simpleType:uint
            label = "QME_HCODE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3b8b4a9:
            #simpleType:uint
            label = "MEM_EFF_MRAM_SUPPORT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3b98454:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3baf9ca:
            pass
        elif attrEnum == 0x3bb3b7a:
            #simpleType:uint
            label = "ODY_LP2_PWRSAVINGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3be1427:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_RC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3c26b28:
            #simpleType:uint
            label = "MSS_IS_APOLLO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3ca6acc:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_DLL_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3cedd73:
            #simpleType:uint
            label = "MSS_EXP_I2C_FW_LOG_DUMP_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3cf621f:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_FALL_DQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d086ed:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_PS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3d1a60f:
            #simpleType:uint
            label = "RCD_PARITY_RECONFIG_LOOPS_ALLOWED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d3e8d5:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC05"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d6c66d:
            #simpleType:uint
            label = "ODY_TMPL_0_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d7757a:
            #simpleType:uint
            label = "ALTFSI_MASTER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d77935:
            #simpleType:uint
            label = "MSS_MRW_OVERRIDE_THERM_SENSOR_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3d84c2e:
            #simpleType:uint
            label = "HTMSC_MODE_SINGLE_TSTAMP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3da9467:
            #simpleType:uint
            label = "CORE_LPAR_MODE_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3dbc21a:
            #simpleType:uint
            label = "VDDR_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3ddbd96:
            #simpleType:uint
            label = "OCMB_BOOT_FLAGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3df05de:
            #simpleType:uint
            label = "SPI_BUS_DIV_REF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3df34de:
            pass #complexType - skipping
        elif attrEnum == 0x3e06229:
            #simpleType:uint
            label = "RCW48_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3e06dcd:
            #simpleType:uint
            label = "MSS_MRW_MAX_NUMBER_DIMMS_POSSIBLE_PER_VMEM_REGULATOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3e10c4b:
            #simpleType:uint
            label = "RCW0F_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3e2ad88:
            #simpleType:uint
            label = "TPM_UNUSABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3e336e0:
            #simpleType:uint
            label = "PM_SPIPSS_INTER_FRAME_DELAY_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3e38294:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_FLOOR_MHZ_ORIGINAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3e748cd:
            #simpleType:uint
            label = "CURRENT_MEM_POWER_MIN_THROTTLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3e7ad0d:
            #simpleType:uint
            label = "MSS_CENT_VDD_SLOPE_INACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3e8c6de:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_SECOND_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3eb05bb:
            #simpleType:uint
            label = "IOHS_MNFG_BAD_LANE_DURATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3eda036:
            #simpleType:uint
            label = "MSS_EXP_RESP_MAX_POWERDOWN_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3ee1c97:
            #simpleType:uint
            label = "DDR5_MC_DRAM_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3f2ddb0:
            #simpleType:uint
            label = "EXP_DIMM_THERMAL_LIMIT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x3f4dd16:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC03"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3f6b102:
            #simpleType:uint
            label = "MEM_3DS_HEIGHT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x3f7b7e7:
            #simpleType:uint
            label = "ODY_EN_RXDQS_TRACKING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3fa5781:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3fd6b69:
            #simpleType:uint
            label = "EC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x3fe9f90:
            #simpleType:uint
            label = "PROC_XSCOM_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x40202e1:
            #simpleType:uint
            label = "MEM_DDR5_REF_TUF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4028ad3:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_SECOND_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4028d5e:
            #simpleType:uint
            label = "SYSTEM_RING_DBG_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x404b923:
            #simpleType:uint
            label = "ODY_D5MISC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x405595b:
            #simpleType:uint
            label = "INDEX_MIN_POWER_CAP_WATTS"
            traceEntry.append("[24]:")
            for x in range(24):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x4068890:
            #simpleType:uint
            label = "SKIP_RD_VREF_VREFSENSE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x40aa7b9:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x40bfda4:
            #simpleType:uint
            label = "MSS_MRW_ALLOW_UNSUPPORTED_RCW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x40c76ee:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x413ef1d:
            #simpleType:uint
            label = "MSS_EXP_REORDER_QUEUE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x41415b6:
            #simpleType:uint
            label = "MEM_EFF_DRAM_WIDTH"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x414575c:
            #simpleType:uint
            label = "APSS_GPIO_PORT_PINS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x414abdc:
            #simpleType:uint
            label = "MRW_VMEM_REGULATOR_MEMORY_POWER_LIMIT_PER_DIMM_DDR4"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4185ea4:
            pass #complexType - skipping
        elif attrEnum == 0x4194918:
            #simpleType:uint
            label = "TCE_START_TOKEN_FOR_HDAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x41ed7c4:
            #simpleType:uint
            label = "MSS_INTERLEAVE_GRANULARITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x420d32d:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_SLOPE_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x420ee16:
            #simpleType:uint
            label = "MEM_EFF_DRAM_COLUMN_BITS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x421ef26:
            #simpleType:uint
            label = "PROC_FABRIC_ASYNC_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4221eb9:
            #simpleType:uint
            label = "DUMP_STOP_INFO_ENABLE_ERRORLOG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4222d51:
            #simpleType:uint
            label = "RUNN_MASTER_SEED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x423512e:
            #simpleType:uint
            label = "MSS_OCMB_PHY_INIT_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x424be69:
            #simpleType:uint
            label = "MSS_MRW_NVDIMM_PLUG_RULES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4269836:
            pass #complexType - skipping
        elif attrEnum == 0x428de15:
            pass #complexType - skipping
        elif attrEnum == 0x428e6a8:
            pass
        elif attrEnum == 0x42964ef:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC1_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x42aac82:
            #simpleType:uint
            label = "RCW46_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x42af08e:
            #simpleType:uint
            label = "OMI_DL_PREIPL_PRBS_TIME"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x42b4fae:
            #simpleType:uint
            label = "MSS_CENT_VCS_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x42d226a:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x42f81c1:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC7X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4313fe7:
            #simpleType:uint
            label = "CLOCK_MUX2B_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x433cfe9:
            #simpleType:uint
            label = "CORE_WEIGHT_TENTHS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4354d61:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_CSCID"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4362604:
            #simpleType:uint
            label = "SECURITY_LEVEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4367508:
            #simpleType:uint
            label = "IS_SIMULATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x436dd94:
            #simpleType:uint
            label = "TLB_INSTR_ENTRIES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x43a0d7e:
            #simpleType:uint
            label = "EFF_RCD_MFG_ID"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x43ba247:
            #simpleType:uint
            label = "PEC_PCIE_HX_KEYWORD_DATA"
            traceEntry.append("[9]:")
            for x in range(9):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x43c995a:
            #simpleType:uint
            label = "OPEN_POWER_PM_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x43cb904:
            #simpleType:uint
            label = "EFF_HYBRID"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x43f2ca9:
            #simpleType:uint
            label = "HTMGT_PMCOMPLEX_RESET_COUNT_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x440bec8:
            #simpleType:uint
            label = "EFF_DRAM_TWTR_S"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x442b881:
            pass #complexType - skipping
        elif attrEnum == 0x44451f9:
            #simpleType:uint
            label = "RCW00_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4447a44:
            #simpleType:uint
            label = "DDR5_DRAM_CS_ODT"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x446e9d5:
            #simpleType:uint
            label = "RCW45_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4479a4c:
            #simpleType:uint
            label = "PROC_CHTM_BAR_SIZES"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x448c629:
            #simpleType:uint
            label = "MSS_OCMB_APPINTR_OBJ_HANDLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x44a66ec:
            #simpleType:uint
            label = "WOF_IO_POWER_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x44d4c9e:
            #simpleType:uint
            label = "IS_MPIPL_SUPPORTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x44eae3a:
            #simpleType:enum
            label = "OCMB_FW_STATE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("OCMB_FW_STATE_UNKNOWN")
            elif attr == 0x00000001:
                 traceEntry.append("OCMB_FW_STATE_UP_TO_DATE")
            elif attr == 0x00000002:
                 traceEntry.append("OCMB_FW_STATE_OUT_OF_DATE")
        elif attrEnum == 0x44f4167:
            pass #complexType - skipping
        elif attrEnum == 0x44fac3b:
            #simpleType:uint
            label = "PROC_ERROR_TEMP_DELTA_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x45149fa:
            #simpleType:uint
            label = "LPC_CONSOLE_CNFG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4523b41:
            #simpleType:uint
            label = "OMI_RX_LTEZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x452cbf0:
            #simpleType:uint
            label = "MSS_MRW_DDR5_DRAM_READ_CRC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x45764b5:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_DL_LAYER_BOOT_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x45769cb:
            #simpleType:uint
            label = "DDR5_EN_TX_DQ_PREAMBLE_PATTERN_U0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x45a548d:
            #simpleType:uint
            label = "MEM_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x45b1c68:
            #simpleType:enum
            label = "RISK_LEVEL_ORIGIN"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("RISK_LEVEL_ORIGIN_USER")
            elif attr == 0x00000001:
                 traceEntry.append("RISK_LEVEL_ORIGIN_MRW")
        elif attrEnum == 0x45c45e3:
            #simpleType:uint
            label = "FORCE_SBE_UPDATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x45f1d0e:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SEQUENCE_CFG0_R40"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4611411:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC2_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x461601a:
            #simpleType:uint
            label = "IO_IOHS_PRE2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x46189b8:
            #simpleType:uint
            label = "CONTAINED_IPL_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x46304b2:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x464339e:
            #simpleType:uint
            label = "MSS_MRW_OCMB_RESET_GROUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x464bfaf:
            #simpleType:uint
            label = "NHTM_HTMSC_MODE_CAPTURE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x465e7ca:
            #simpleType:uint
            label = "MEM_DDR5_GLOBAL_DFE_TAP4"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x467a7c6:
            #simpleType:uint
            label = "AUX_FUNC_INVOCATION_TIME_MS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x469e5f6:
            #simpleType:uint
            label = "VRM_VDD_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x46a1caf:
            #simpleType:uint
            label = "HTMSC_MODE_VGTARGET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x46af527:
            #simpleType:uint
            label = "ODY_MEM_THROTTLED_N_COMMANDS_PER_SLOT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x46ede59:
            #simpleType:uint
            label = "PHYS_PRES_REIPL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4706e9e:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_INTERCEPT_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4724ab2:
            pass
        elif attrEnum == 0x472b4fc:
            #simpleType:uint
            label = "HTMSC_CTRL_XSTOP_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x474550f:
            pass #not readable
        elif attrEnum == 0x47688d7:
            #simpleType:uint
            label = "EXPLR_METADATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x47770b9:
            #simpleType:uint
            label = "RCW0A_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x47b7017:
            #simpleType:uint
            label = "FREQ_DPLL_REFCLOCK_KHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x47d766c:
            #simpleType:uint
            label = "MEM_EFF_DRAM_SOFT_PPR"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x47de4ea:
            #simpleType:uint
            label = "HTMSC_TTAGFILT_INVERT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x47f127d:
            pass
        elif attrEnum == 0x4820f8b:
            #simpleType:uint
            label = "SYSTEM_PDV_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x482b817:
            #simpleType:uint
            label = "PROC_FABRIC_EFF_TOPOLOGY_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x483910a:
            #simpleType:uint
            label = "DDR5_TX_DQ_PREAMBLE_PATTERN_U1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x484fa88:
            #simpleType:uint
            label = "RUNN_THREAD_SEEDS"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4851132:
            #simpleType:uint
            label = "PM_FIRINIT_DONE_ONCE_FLAG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x486d205:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_EQ_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x486f50e:
            #simpleType:uint
            label = "MEM_EFF_DIMM_RANKS_CONFIGED"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4871927:
            #simpleType:uint
            label = "SYSTEM_DDS_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x48a8902:
            #simpleType:uint
            label = "PROC_PCIE_IOVALID_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x48b4eb2:
            #simpleType:enum
            label = "FOUND_PRESENT_BY_SP"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("FOUND_PRESENT_BY_SP_NO_ATTEMPT")
            elif attr == 0x00000001:
                 traceEntry.append("FOUND_PRESENT_BY_SP_FOUND")
            elif attr == 0x00000002:
                 traceEntry.append("FOUND_PRESENT_BY_SP_MISSING")
            elif attr == 0x00000003:
                 traceEntry.append("FOUND_PRESENT_BY_SP_SKIP")
        elif attrEnum == 0x48c79e0:
            #simpleType:uint
            label = "WOF_FLMR_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x48dfadb:
            #simpleType:uint
            label = "ODY_ALERT_RECOV_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x48e4bf5:
            #simpleType:uint
            label = "OMI_TX_PRE1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4916096:
            #simpleType:uint
            label = "ECO_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4934fda:
            #simpleType:uint
            label = "EFF_PRIM_STACK_TYPE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4950959:
            #simpleType:uint
            label = "IOHS_CONFIG_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4971d0d:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x49b1d2e:
            #simpleType:uint
            label = "FREQ_CORE_FLOOR_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x49b21cc:
            #simpleType:uint
            label = "IVRM_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x49eb22a:
            #simpleType:uint
            label = "IOHS_MNFG_BAD_LANE_MAX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x49f38fe:
            #simpleType:uint
            label = "PG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4a3e94f:
            #simpleType:uint
            label = "EECACHE_DISABLE_AUTO_RESET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4a69bbd:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_FW_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4a70af5:
            #simpleType:uint
            label = "HTMSC_CTRL_CHIP1_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4a72e5b:
            #simpleType:uint
            label = "MEM_IGNORE_PLUG_RULES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4a76d45:
            #simpleType:uint
            label = "HWAS_STATE_CHANGED_SUBSCRIPTION_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4aa1c38:
            #simpleType:uint
            label = "MSS_ODY_PHY_IMAGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4ac8a0d:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4af8455:
            #simpleType:uint
            label = "HB_TPM_LOG_MGR_PTR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4aff9ad:
            #simpleType:uint
            label = "SBE_SUPPORTS_HALT_STATUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4b12a86:
            pass
        elif attrEnum == 0x4b21c2c:
            #simpleType:uint
            label = "CLOCK_MUX_IOHS_LCPLL_INPUT"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4b2ea2d:
            #simpleType:uint
            label = "SYS0_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4b65c7e:
            #simpleType:uint
            label = "RCW01_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4b839c0:
            #simpleType:uint
            label = "PROC_PCIE_LANE_EQUALIZATION_GEN3"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x4b8ed0c:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4b92797:
            pass #not readable
        elif attrEnum == 0x4b9cd11:
            #simpleType:uint
            label = "INDEX_N_BULK_POWER_LIMIT_WATTS"
            traceEntry.append("[24]:")
            for x in range(24):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x4baf80d:
            #simpleType:uint
            label = "WOF_POWER_LIMIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4bbfd53:
            #simpleType:uint
            label = "EFF_DRAM_MFG_ID"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x4bf64b9:
            #simpleType:uint
            label = "PROC_EPS_READ_CYCLES_T1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4c1219d:
            #simpleType:uint
            label = "PM_SPWUP_IGNORE_XSTOP_FLAG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c334cb:
            #simpleType:uint
            label = "IOHS_PHY_TO_PAU_MAPPING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c3b83c:
            #simpleType:uint
            label = "RCW08_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c3ccba:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_OPENCAPI_LOOPBACK_TEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c3dbf1:
            #simpleType:uint
            label = "MSS_MRW_TEMP_REFRESH_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c3e08d:
            #simpleType:uint
            label = "MEM_DDR5_GLOBAL_DFE_TAP1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c42b9b:
            #simpleType:uint
            label = "PROC_SBE_MASTER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4c51a2e:
            #simpleType:uint
            label = "PROC_R_DISTLOSS_UOHM"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4c7382b:
            #simpleType:uint
            label = "MAX_VDD_CURRENT_READING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x4cb206d:
            #simpleType:uint
            label = "RCW0C_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4cb9215:
            #simpleType:enum
            label = "EEPROM_CONTENT_TYPE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("EEPROM_CONTENT_TYPE_RAW")
            elif attr == 0x00000001:
                 traceEntry.append("EEPROM_CONTENT_TYPE_ISDIMM")
            elif attr == 0x00000002:
                 traceEntry.append("EEPROM_CONTENT_TYPE_IBM_FRUVPD")
            elif attr == 0x00000003:
                 traceEntry.append("EEPROM_CONTENT_TYPE_IBM_MVPD")
            elif attr == 0x00000004:
                 traceEntry.append("EEPROM_CONTENT_TYPE_DDIMM")
            elif attr == 0x00000005:
                 traceEntry.append("EEPROM_CONTENT_TYPE_SBE_BOOT_CODE")
            elif attr == 0x00000006:
                 traceEntry.append("EEPROM_CONTENT_TYPE_SBE_MEASUREMENT_CODE")
            elif attr == 0x00000007:
                 traceEntry.append("EEPROM_CONTENT_TYPE_WOF_DATA")
            elif attr == 0x00000008:
                 traceEntry.append("EEPROM_CONTENT_TYPE_KEYSTORE")
            elif attr == 0x00000009:
                 traceEntry.append("EEPROM_CONTENT_TYPE_PLANAR_OCMB_SPD")
        elif attrEnum == 0x4d26ea7:
            #simpleType:uint
            label = "ODY_RECOVERY_STATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4d2d908:
            #simpleType:uint
            label = "MSS_MRW_ALLOW_DDR5"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4d787f5:
            #simpleType:uint
            label = "PROC_MIRROR_SIZES_ACK"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4d84e76:
            #simpleType:uint
            label = "MSS_OCMB_NONENTERPRISE_MODE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4d911fa:
            #simpleType:uint
            label = "SYSTEM_WOV_UNDERV_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4da870d:
            #simpleType:uint
            label = "PCI0_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4e0385e:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4e64812:
            #simpleType:uint
            label = "PSI_HB_ESB_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x4e64981:
            #simpleType:uint
            label = "NOMINAL_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4ea37f9:
            #simpleType:uint
            label = "MEM_EFF_DIMM_SERIAL_NUMBER"
            traceEntry.append("[26]:")
            for x in range(26):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4eb8996:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC0B"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4ebab49:
            #simpleType:uint
            label = "SADDLEBACK_VRM_ROLLOVER_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4ebecae:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4ec2278:
            #simpleType:uint
            label = "BOOT_VOLTAGE_BIAS_0P5PCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4eee267:
            #simpleType:uint
            label = "ODY_WL_ADJ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4f0f469:
            #simpleType:uint
            label = "MSS_VOLT_AVDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x4f42b20:
            #simpleType:uint
            label = "IS_SLAVE_DRAWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4f60a5e:
            #simpleType:uint
            label = "MSS_MRW_RESET_DELAY_BEFORE_CAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x4fe6548:
            #simpleType:uint
            label = "RECONFIG_LOOP_TESTS"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x501dc5e:
            #simpleType:uint
            label = "MSS_EXP_OMI_CDR_BW_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5047752:
            #simpleType:uint
            label = "PMIC_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x506af1e:
            #simpleType:uint
            label = "BUS_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x507f5b5:
            #simpleType:uint
            label = "CURRENT_N_BULK_POWER_LIMIT_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x50892df:
            #simpleType:uint
            label = "EXPLR_ENABLE_US_TMPL_9"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5097420:
            #simpleType:uint
            label = "PMIC_HEALTH_CHECK_DDR5_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x509d68e:
            #simpleType:uint
            label = "OCC_CONTROL_DATA"
            traceEntry.append("[256]:")
            for x in range(256):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x50ba16b:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC05"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x510e938:
            #simpleType:uint
            label = "SBE_ARCH_DUMP_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x5121315:
            #simpleType:uint
            label = "IO_O_MFG_STRESS_PR_OFFSET_EVEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x51289c7:
            #simpleType:uint
            label = "MSS_VDDR_PROGRAM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5153405:
            #simpleType:uint
            label = "PDA_CAPTURED_THREAD_REG_ARRAY_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x515fe7b:
            #simpleType:uint
            label = "EXPLR_PASID_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5164d0c:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5171c01:
            #simpleType:uint
            label = "ISTEP_PAUSE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5176174:
            #simpleType:uint
            label = "MEM_EFF_PRIM_BUS_WIDTH"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x51a0c49:
            #simpleType:uint
            label = "MAX_HSL_OPTICONNECT_CONNECTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x51cc341:
            #simpleType:uint
            label = "SLOT_INDEX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x51dd309:
            #simpleType:uint
            label = "HTMSC_MEM_PRIORITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5207f78:
            #simpleType:uint
            label = "MBA_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5223195:
            #simpleType:uint
            label = "CHTM_MODE_DIS_TSTAMP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x522a158:
            #simpleType:uint
            label = "ECID"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x529511a:
            pass #not readable
        elif attrEnum == 0x5297c70:
            #simpleType:uint
            label = "ODY_SIM_TCASL_ADD"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x52aba1a:
            #simpleType:uint
            label = "RCW0C_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x52b38f3:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F1RC00"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x52de0d7:
            #simpleType:uint
            label = "ODY_PHY_TX2D_DFE_MISC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x52f654c:
            #simpleType:uint
            label = "DDR5_DRAM_RD_POSTAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5390d2b:
            #simpleType:uint
            label = "HTMSC_MODE_WRAP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x53b8bd1:
            #simpleType:uint
            label = "MSS_EFF_WR_CRC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x53beb18:
            #simpleType:uint
            label = "WOF_THROTTLE_CONTROL_KI"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x53e9209:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC00"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5401234:
            #simpleType:uint
            label = "IOHS_FABRIC_TOD_CROSS_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x540d100:
            pass
        elif attrEnum == 0x5437d12:
            #simpleType:uint
            label = "L3_HASPOWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5450c2f:
            #simpleType:uint
            label = "RCW0D_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5464e01:
            #simpleType:uint
            label = "HTMSC_CTRL_DBG0_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x54d128f:
            #simpleType:uint
            label = "ISTEP_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x54fd267:
            #simpleType:uint
            label = "MSS_INTERLEAVE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x552f904:
            #simpleType:uint
            label = "MEM_VPD_DQ_MAP"
            traceEntry.append("[80]:")
            for x in range(80):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5534fbf:
            #simpleType:uint
            label = "EFF_DRAM_SOFT_PPR"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5543740:
            #simpleType:uint
            label = "DYNAMIC_I2C_DEVICE_ADDRESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x55a8aba:
            #simpleType:uint
            label = "MEM_SI_MC_RCV_IMP_ALERT_N"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x55bf804:
            #simpleType:uint
            label = "PMCR_MOST_RECENT_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x55cb385:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_MFG_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x55ddfeb:
            #simpleType:uint
            label = "PROC_FAVOR_AGGRESSIVE_PREFETCH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x55f05dc:
            #simpleType:uint
            label = "CLOCK_MUX0B_RCS_PLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x55fe8eb:
            #simpleType:uint
            label = "EFF_DRAM_RANK_MIX"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x565ee7d:
            #simpleType:uint
            label = "OCMB_CODE_UPDATED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5665717:
            #simpleType:uint
            label = "PROC_DSTLCFG_MMIO_ADDRBIT_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x56b3514:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x56be955:
            #simpleType:uint
            label = "PROC_FABRIC_X_ATTACHED_LINK_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x56cd34f:
            #simpleType:uint
            label = "SBE_MASTER_HRMOR_ADDRESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x56ef574:
            #simpleType:uint
            label = "IS_INTER_ENCLOSURE_BUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x56efb21:
            #simpleType:uint
            label = "SYSTEM_WOF_DISABLE_DIMENSION"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x56ff0f8:
            #simpleType:uint
            label = "PROC_FABRIC_R_INDIRECT_EN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x570ac35:
            #simpleType:uint
            label = "PROC_INT_NVC_BAR_RANGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x571be23:
            #simpleType:uint
            label = "MSS_EXP_RESP_INTERNAL_VREF_MONITOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x577af13:
            #simpleType:uint
            label = "SRAM_WRITE_ASSIST_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x579faa0:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x57ab3c7:
            #simpleType:uint
            label = "PROC_LPC_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x57acb4d:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x57cb1d1:
            pass #complexType - skipping
        elif attrEnum == 0x57f72b2:
            #simpleType:uint
            label = "DYNAMIC_INIT_MODE_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x582dc2d:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5834bdd:
            #simpleType:uint
            label = "ODY_DRAMINIT_FW_DATA_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x588aed6:
            #simpleType:uint
            label = "SPIPSS_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5893c69:
            #simpleType:uint
            label = "MEM_EFF_NIBBLE_ENABLES"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x58a1971:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_COUNT_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x58a7917:
            #simpleType:uint
            label = "WOF_ENABLE_VRATIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x58d355a:
            #simpleType:uint
            label = "WOV_MAX_DROOP_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x58e0f72:
            #simpleType:uint
            label = "DDR5_DRAM_WR_PREAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x58e2a3d:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x58f9cb3:
            #simpleType:uint
            label = "SMF_MEM_AMT_REQUESTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x5910d31:
            #simpleType:uint
            label = "ODY_ACTAG_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5921342:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC04"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59253de:
            #simpleType:uint
            label = "DECONFIG_GARDABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x596417a:
            #simpleType:uint
            label = "MSL_MFG_ALLOW"
            traceEntry.append("[12]:")
            for x in range(12):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x597acd8:
            #simpleType:uint
            label = "CLOCK_MUX0D_RCS_PLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59a4fc1:
            #simpleType:uint
            label = "FREQ_O_MHZ"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x59b35d5:
            #simpleType:uint
            label = "POUNDV_BUCKET_NUM_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59bb2b4:
            #simpleType:uint
            label = "CUMULATIVE_PMCOMPLEX_RESET_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59c3ee2:
            #simpleType:uint
            label = "ALLOW_EEPROM_WRITES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59c4587:
            #simpleType:uint
            label = "MC_DRAM_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59d033d:
            #simpleType:uint
            label = "PROC_INT_TM_BAR_PAGE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59d7ace:
            #simpleType:uint
            label = "OCMB_ISTEP_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x59daf6e:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5a2ffe9:
            #simpleType:uint
            label = "MEM_EXP_INIT_PHY_VREF"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5a32695:
            #simpleType:uint
            label = "HB_RSV_MEM_NEXT_SECTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5a56a24:
            #simpleType:uint
            label = "MSS_OCMB_HALF_DIMM_MODE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ab3bbc:
            #simpleType:uint
            label = "CP_PLLTODFLT_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ab71e7:
            #simpleType:uint
            label = "EFF_DRAM_TRRD_L"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5acf81a:
            pass #not readable
        elif attrEnum == 0x5add085:
            #simpleType:uint
            label = "HTMSC_CTRL_DBG1_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5b0aae0:
            #simpleType:uint
            label = "MSS_EXP_RESP_TEMP_READOUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5b0d3bc:
            #simpleType:uint
            label = "RCD_PARITY_RECONFIG_LOOP_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5b6809b:
            #simpleType:uint
            label = "HB_FALLBACK_CORES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5b7c99d:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_ONE_EVENT"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5bec079:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC3_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5c0af49:
            #simpleType:uint
            label = "MSS_MRW_OCMB_PWR_INTERCEPT"
            traceEntry.append("[50]:")
            for x in range(50):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x5c34507:
            #simpleType:uint
            label = "VDD_CURRENT_OVERFLOW_WORKAROUND_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5c3de20:
            #simpleType:uint
            label = "FAPINAME_NODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5c4a180:
            #simpleType:uint
            label = "IO_O_MFG_CHK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5c5498f:
            #simpleType:uint
            label = "BOOT_VOLTAGE"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5c61990:
            pass #complexType - skipping
        elif attrEnum == 0x5c63b38:
            pass #complexType - skipping
        elif attrEnum == 0x5c75b22:
            #simpleType:uint
            label = "I2C_BUS_SPEED_ARRAY"
            traceEntry.append("[4][16]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x5cdae1e:
            #simpleType:uint
            label = "MEM_DRAM_ADDRESS_MIRRORING"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ced586:
            #simpleType:uint
            label = "RCW40_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5cf8e48:
            #simpleType:uint
            label = "MRW_SAFEMODE_MEM_THROTTLE_NUMERATOR_PER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5cf9d4a:
            #simpleType:uint
            label = "DDR5_TX_DQ_PREAMBLE_PATTERN_U0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d2467e:
            #simpleType:uint
            label = "RCW46_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d36cba:
            #simpleType:uint
            label = "I2C_INHIBIT_DIAGNOSTIC_RESET_ENGINE_E"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d3796a:
            #simpleType:uint
            label = "PROC_PCIE_PHB_ACTIVE_BASE"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d56393:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_SLOPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5d59877:
            #simpleType:uint
            label = "PROC_LCO_MODE_SETUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d7eb9f:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5d966f9:
            #simpleType:uint
            label = "MSS_POST_MEMDIAGS_READ_SUBTEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5da8533:
            #simpleType:uint
            label = "MRW_P1PF_MIN_CONFIDENCE_3"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5dd7e45:
            #simpleType:uint
            label = "SYSTEM_POUNDV_VALIDITY_HALT_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5e0f70a:
            #simpleType:uint
            label = "MEM_EFF_VOLT_VDDQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5e154c1:
            #simpleType:uint
            label = "RVRM_DEADZONE_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5e6c304:
            #simpleType:uint
            label = "WOF_THROTTLE_CONTROL_LOOP_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5e7cb0a:
            #simpleType:uint
            label = "MEM_EFF_DDR5_RTT_PARK_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5e8a19d:
            #simpleType:uint
            label = "LAST_PROGRESS_CODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x5eb10a7:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_X4_WRITES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ed4258:
            #simpleType:uint
            label = "MSS_POST_MEMDIAGS_READ_SUBTEST_FAIL_BEHAVIOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ee2cf9:
            #simpleType:uint
            label = "ODY_MSG_MISC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5ef37d7:
            #simpleType:uint
            label = "SLOT_NAME"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5f1a686:
            #simpleType:uint
            label = "CURRENT_SCALING_FACTOR"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5f4f64d:
            #simpleType:uint
            label = "ODY_THERMAL_SENSOR_0_PREVIOUS_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0x5f877fa:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_COUNT_SINCE_LAST_RECAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x5f943d0:
            #simpleType:uint
            label = "PROC_FABRIC_A_ATTACHED_CHIP_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5f9ce72:
            #simpleType:uint
            label = "PROC_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5fa7892:
            #simpleType:uint
            label = "HTMSC_MODE_MARKERS_ONLY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x5fd9713:
            #simpleType:uint
            label = "MSS_MRW_SAFEMODE_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x603ef87:
            #simpleType:uint
            label = "MEM_EFF_RCD_MFG_ID"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x6040956:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x608cdfd:
            #simpleType:uint
            label = "PDR_ENTITY_INSTANCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x60af368:
            #simpleType:uint
            label = "CHTM_MODE_LLAT_CAPTURE_FAIL_DISP_DIS"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x60f38f8:
            #simpleType:uint
            label = "L3_WEIGHT_TENTHS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6129fe7:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_INTERCEPT_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x612f998:
            #simpleType:enum
            label = "ROLE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000001:
                 traceEntry.append("ROLE_PRIMARY")
            elif attr == 0x00000000:
                 traceEntry.append("ROLE_BACKUP")
        elif attrEnum == 0x6134e50:
            #simpleType:uint
            label = "EXECUTION_PLATFORM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x61356e1:
            #simpleType:uint
            label = "NEST_VDN_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x615ada9:
            #simpleType:uint
            label = "MEM_EXP_DRAM_ADDRESS_MIRRORING"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6167a77:
            #simpleType:uint
            label = "CORE_THROTTLE_DEASSERT_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x617e775:
            #simpleType:uint
            label = "PROC_INT_NVPG_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x61d3421:
            #simpleType:uint
            label = "MSS_MRW_MAX_DRAM_DATABUS_UTIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x61d7f4f:
            #simpleType:uint
            label = "PROC_MEM_SIZES"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x61f8882:
            #simpleType:uint
            label = "BOOT_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x62195c1:
            #simpleType:uint
            label = "SLOW_MEM_POOL_TEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6234fc5:
            #simpleType:uint
            label = "PROC_NX_RNG_FAILED_INT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6237f69:
            #simpleType:uint
            label = "PROC_LCO_MODE_SETUP_ADAPTIVE_N"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6266c59:
            #simpleType:uint
            label = "ODY_IS_HIGHVDD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x628f4c8:
            #simpleType:uint
            label = "IOHS_SMP9_INTERCONNECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x629ce4f:
            pass #complexType - skipping
        elif attrEnum == 0x62ad824:
            #simpleType:uint
            label = "UCD_MFR_REVISION_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x62c7ef8:
            pass #not readable
        elif attrEnum == 0x62e05e5:
            #simpleType:uint
            label = "MEM_BURST_LENGTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x62e9ef2:
            #simpleType:uint
            label = "PROC_ENABLE_DL_TMPL_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x62f3c57:
            #simpleType:uint
            label = "N_PLUS_ONE_N_PER_PORT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x63546d5:
            #simpleType:uint
            label = "DLR_SAMPLE_TIME_MS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x637e6da:
            #simpleType:uint
            label = "PROC_PCIE_MMIO_BAR1_BASE_ADDR_OFFSET"
            traceEntry.append("[6]:")
            for x in range(6):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x6381afd:
            #simpleType:uint
            label = "SKIP_WAKEUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x639dd88:
            #simpleType:uint
            label = "MRU_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x63a4fd4:
            #simpleType:uint
            label = "SBE_FIFO_CAPABILITIES"
            traceEntry.append("[40]:")
            for x in range(40):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x63c5ad2:
            #simpleType:uint
            label = "WOF_IO_START"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x63d094c:
            #simpleType:uint
            label = "RCW49_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x63e1613:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRRD_L"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x641d0e3:
            #simpleType:uint
            label = "MEM_DRAM_CWL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x646bfc6:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_SLOPE_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x647869e:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_REDUNDANCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x647f6d0:
            #simpleType:uint
            label = "MSS_MEM_IPL_COMPLETE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6485e5d:
            #simpleType:uint
            label = "RCW43_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x649a489:
            #simpleType:uint
            label = "LPC_CONSOLE_INITIALIZED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x64b6d86:
            #simpleType:uint
            label = "PAYLOAD_ENTRY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x64e7e70:
            #simpleType:uint
            label = "PCI_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x64f3058:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SEQUENCE_CFG3_R43"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6508321:
            #simpleType:uint
            label = "PSI_BRIDGE_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x650fda1:
            #simpleType:uint
            label = "MFG_SCREEN_OMI_CRC_ALLOWED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x65289c9:
            #simpleType:uint
            label = "DDR5_MEMCTRL_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x655aa2b:
            #simpleType:uint
            label = "SYSTEM_CORECACHE_SKEWADJ_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x65a01d5:
            #simpleType:uint
            label = "ODY_EN_TDQS2DQ_TRACKING"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x65a19cd:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x65a6fb3:
            #simpleType:uint
            label = "PEC_PCIE_LANE_MASK_NON_BIFURCATED"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x65c5d90:
            #simpleType:uint
            label = "CURRENT_N_PLUS_ONE_BULK_POWER_LIMIT_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x65c995d:
            #simpleType:uint
            label = "NHTM_CTRL_TRIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x666457d:
            #simpleType:uint
            label = "MSS_VOLT_VDDR_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x666532f:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SEQUENCE_CFG3_R43"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x667433c:
            #simpleType:uint
            label = "EFF_DRAM_BANK_GROUP_BITS"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x667e81e:
            #simpleType:uint
            label = "WOF_TDP_ALTITUDE_REFERENCE_M"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x668db70:
            #simpleType:uint
            label = "WOV_UNDERV_MAX_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x66919bb:
            #simpleType:uint
            label = "BACKING_CACHES_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x669e8d5:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRFC_DLR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x66c4d30:
            #simpleType:uint
            label = "CHTM_MODE_LLAT_CAPTURE_STORE_DIS"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x66df8b2:
            #simpleType:uint
            label = "MEM_DDR5_WR_CRC_AUTODISABLE_STATUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6704d48:
            #simpleType:uint
            label = "PROC_FABRIC_X_LINKS_CNFG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x671128a:
            #simpleType:uint
            label = "RCW43_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x67a7cf4:
            #simpleType:uint
            label = "DDR5_MC_EXT_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x67bf05e:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x67fa3f7:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x680213b:
            #simpleType:uint
            label = "DDR5_PMIC_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6809efd:
            #simpleType:uint
            label = "ROW_REPAIR_SUPPORTED_MRW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x683ae9e:
            #simpleType:uint
            label = "RCW42_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68400ca:
            #simpleType:uint
            label = "MEM_EFF_DRAM_MDS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68495bc:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_DLL_RESET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68b9d58:
            #simpleType:uint
            label = "RVRM_VID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68c895f:
            #simpleType:uint
            label = "RCW42_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68ccec0:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TWTR_L"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68dd522:
            #simpleType:uint
            label = "FREQ_CORE_BOOT_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x68de0ff:
            #simpleType:uint
            label = "SYS_CLK_NE_TERMINATION_STRENGTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x68e1db7:
            #simpleType:uint
            label = "PROC_MASTER_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x69014fc:
            #simpleType:uint
            label = "CLOCK_MUX2A_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6902c81:
            #simpleType:uint
            label = "OMI_RX_HORIZ_DATA_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x69153a8:
            #simpleType:uint
            label = "MEM_PMIC_4U_N_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6937db7:
            #simpleType:uint
            label = "RCW0E_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6942ee4:
            #simpleType:uint
            label = "ODY_SIM_TPDM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x69653af:
            #simpleType:uint
            label = "PROC_PCIE_IS_SLOT"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6992256:
            #simpleType:uint
            label = "OMI_X4_DEGRADE_ACTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x69b9e21:
            #simpleType:uint
            label = "MRW_DDR4_VDDR_MAX_LIMIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x69ce066:
            #simpleType:uint
            label = "EXPLR_TMPL_0_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x69e5db1:
            #simpleType:uint
            label = "FREQ_PB_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x69f97d1:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC03"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x69fbe43:
            #simpleType:uint
            label = "EXPLR_TMPL_9_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a00c9c:
            #simpleType:uint
            label = "HDDW_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a08b4b:
            #simpleType:uint
            label = "ODY_PHY_CFG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a22222:
            #simpleType:uint
            label = "NEST_VDDR_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x6a258b6:
            #simpleType:uint
            label = "MIRROR_BASE_ADDRESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x6a37320:
            #simpleType:uint
            label = "PROC_PCIE_BAR_SIZE"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x6a39eb6:
            #simpleType:uint
            label = "DO_SBE_READBACK_VERIFICATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a47337:
            #simpleType:uint
            label = "SYSTEM_IPL_PHASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a4f7bc:
            #simpleType:uint
            label = "MSS_MNFG_EDPL_TIME"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a61fce:
            #simpleType:uint
            label = "MEM_EFF_FOUR_RANK_MODE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a6a83d:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SEQUENCE_CFG2_R42"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a83eea:
            #simpleType:uint
            label = "MEM_REORDER_QUEUE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6a84e01:
            #simpleType:uint
            label = "ODY_PHY_TX2D_TRAIN_OPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6ac0905:
            #simpleType:uint
            label = "MRW_DDR3_VDDR_MAX_LIMIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6adbf88:
            #simpleType:uint
            label = "HIDDEN_ERRLOGS_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6b341e3:
            #simpleType:uint
            label = "MEM_PORT_POS_OF_FAIL_THROTTLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x6b5b079:
            #simpleType:uint
            label = "DUMMY_RW"
            traceEntry.append("[1][3][5]:")
            for x in range(15):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6b81dab:
            pass #not readable
        elif attrEnum == 0x6b981a7:
            #simpleType:uint
            label = "ODY_SIM_TDQSCK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x6ba66f8:
            #simpleType:uint
            label = "PROC_INT_TM_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6c0c2a9:
            #simpleType:uint
            label = "OMI_CRC_DEBUG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6c26bcb:
            #simpleType:uint
            label = "PROC_SBE_MCS_SETUP_SELECTED_MC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6c5ec9f:
            pass
        elif attrEnum == 0x6c81641:
            #simpleType:uint
            label = "DDS_DELAY_ADJUST"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0x6c8bf3d:
            #simpleType:uint
            label = "OCMB_COUNTER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6cb15ee:
            #simpleType:uint
            label = "EFF_REGISTER_REV"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6cba771:
            #simpleType:uint
            label = "MSS_MRW_DDR5_MAX_DRAM_DATABUS_UTIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6cd7f34:
            #simpleType:uint
            label = "ODY_THERMAL_SENSOR_2_PREVIOUS_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0x6cd872a:
            #simpleType:uint
            label = "MEM_EFF_HYBRID"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6d05234:
            #simpleType:uint
            label = "MSS_MRW_POWER_CONTROL_REQUESTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6d3696b:
            #simpleType:uint
            label = "CHIP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6d5784c:
            pass
        elif attrEnum == 0x6d64df3:
            #simpleType:uint
            label = "SB_SIGNING_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6d93d2e:
            #simpleType:uint
            label = "CURRENT_MIN_POWER_CAP_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x6dbd352:
            #simpleType:uint
            label = "PHYS_PRES_FAKE_ASSERT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6de3ae5:
            #simpleType:uint
            label = "MEM_SI_ODT_RD"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6e2352a:
            #simpleType:uint
            label = "CHTM_HTMSC_MODE_CORE_INSTR_STALL"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6e3d1bf:
            #simpleType:uint
            label = "MEM_EFF_NIBBLE_MAP"
            traceEntry.append("[2][20]:")
            for x in range(40):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6e979d7:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_READ_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6ed9642:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_CLK"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6efcd46:
            #simpleType:uint
            label = "WOF_TDP_IO_INDEX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6f08f4b:
            #simpleType:uint
            label = "MIN_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6f09c49:
            #simpleType:uint
            label = "MSS_VOLT_AVDD_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6f11c24:
            #simpleType:uint
            label = "CDM_POLICIES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6f26f00:
            #simpleType:uint
            label = "SYS_DISABLE_MCU_TIMEOUTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6f2adc3:
            #simpleType:uint
            label = "FREQ_PAU_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x6f76a92:
            pass
        elif attrEnum == 0x6f82a91:
            #simpleType:uint
            label = "FORCE_ECC_UPDATE_ON_VALIDATION_ERROR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6f9ce2e:
            pass
        elif attrEnum == 0x6fb6b11:
            #simpleType:uint
            label = "ODY_PHY_CA_DFE_TRAIN_OPTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6fccada:
            #simpleType:uint
            label = "ODY_POWERDOWN_ANIBS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x6fd010f:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SEQUENCE_CFG3_R43"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x6fd2aa7:
            pass
        elif attrEnum == 0x70406e6:
            #simpleType:uint
            label = "PEC_PCIE_IOP_SWAP_NON_BIFURCATED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x706e27b:
            #simpleType:uint
            label = "REDUNDANT_CLOCKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x70d1f95:
            #simpleType:uint
            label = "DRAM_PD_DRV_IMP"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x70d4d6d:
            #simpleType:uint
            label = "MEM_EXP_SPD_CL_SUPPORTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x70d8395:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x70e6a22:
            #simpleType:uint
            label = "MNFG_TH_L3_CACHE_CES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x712e3fe:
            #simpleType:uint
            label = "HTMSC_FILT_TTAG_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7130751:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_3_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7135301:
            #simpleType:uint
            label = "OT_MEM_POWER"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x71527f3:
            #simpleType:uint
            label = "RUNN_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7172b53:
            #simpleType:uint
            label = "SYS1_REFCLOCK_RCVR_TERM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x71a31ad:
            #simpleType:uint
            label = "MEM_SI_ODT_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x71d7b85:
            #simpleType:enum
            label = "PROC_COMPATIBILITY_REQ"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("PROC_COMPATIBILITY_REQ_ALLOW_COMPATIBILITY")
            elif attr == 0x00000001:
                 traceEntry.append("PROC_COMPATIBILITY_REQ_FORCED_COMPATIBILITY")
            elif attr == 0x00000002:
                 traceEntry.append("PROC_COMPATIBILITY_REQ_FORCED_NATIVE")
        elif attrEnum == 0x7238ffd:
            #simpleType:uint
            label = "DDR5_PMIC_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x723f825:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_IUES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7249ab4:
            #simpleType:uint
            label = "RCW05_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x724bc5c:
            #simpleType:uint
            label = "DDS_TRIP_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x724e782:
            #simpleType:uint
            label = "PLL_BUCKET_BUILD_INDEX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x725d3a6:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_LANE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x726c74f:
            #simpleType:uint
            label = "DDR5_MEMCTRL_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x726e42c:
            #simpleType:uint
            label = "ODY_SIM_TCASL_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x729602f:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72b7486:
            #simpleType:uint
            label = "MNFG_DMI_MIN_EYE_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72c194d:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72e61a8:
            #simpleType:uint
            label = "MSS_MRW_SUPPORTED_DRAM_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72f340b:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72f4865:
            #simpleType:uint
            label = "WOF_THROTTLE_CONTROL_LOOP_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x72f49a4:
            #simpleType:uint
            label = "MSS_VOLT_VPP_SLOPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7329dbe:
            pass #not readable
        elif attrEnum == 0x732fad3:
            #simpleType:uint
            label = "EFF_DRAM_TCCD_L"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x73786d2:
            #simpleType:uint
            label = "IPS_EXIT_UTILIZATION_PERCENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x738ed86:
            #simpleType:uint
            label = "IS_SP_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x73ade63:
            #simpleType:uint
            label = "MSS_EXP_SERIAL_NUMBER"
            traceEntry.append("[26]:")
            for x in range(26):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x73b59bc:
            #simpleType:uint
            label = "MASTER_MBOX_SCRATCH"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x73cc90f:
            #simpleType:uint
            label = "EXPLR_ENABLE_US_TMPL_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x73da768:
            #simpleType:uint
            label = "CP_PLLNESTFLT_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7405667:
            #simpleType:uint
            label = "XGPE_PHANTOM_HALT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7461177:
            #simpleType:uint
            label = "EFF_DRAM_TRC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7469e45:
            #simpleType:uint
            label = "FIELD_TH_L2_LINE_DELETES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x747f7a5:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_TDQS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x748298e:
            #simpleType:uint
            label = "CHTM_MODE_DIS_GROUP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7515d41:
            #simpleType:uint
            label = "ENABLE_LBIST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7532644:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7547b77:
            pass #not readable
        elif attrEnum == 0x75576dc:
            #simpleType:uint
            label = "SYSTEM_SUSPEND_OCC_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7584c35:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_IC_TAP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x75b3b6d:
            #simpleType:uint
            label = "OMI_RX_LANES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x75ef2a9:
            #simpleType:uint
            label = "WOF_DCM_TRACKING_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x75f1df4:
            #simpleType:uint
            label = "PART_NUMBER"
            traceEntry.append("[48]:")
            for x in range(48):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7606944:
            #simpleType:uint
            label = "EXP_PORT_MAXPOWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x76238c4:
            #simpleType:uint
            label = "DDR5_DIMM_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7628329:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F1RC02"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x762c08b:
            #simpleType:uint
            label = "RCW00_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7631332:
            #simpleType:uint
            label = "MEM_EFF_DIMM_SPARE"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7636a22:
            #simpleType:uint
            label = "NUM_PLDM_STATE_QUERY_RECORDS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x763e8c5:
            #simpleType:uint
            label = "PROC_PCIE_PHB_ACTIVE"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7663ec5:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x76918c6:
            #simpleType:uint
            label = "BMC_MAX_ERROR_LOG_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x76d2e17:
            #simpleType:uint
            label = "PROC_FABRIC_A_ATTACHED_TOPOLOGY_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x76d448e:
            #simpleType:uint
            label = "IO_OMI_PRE1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x771b18e:
            #simpleType:uint
            label = "MSS_MBA_CACHELINE_INTERLEAVE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x775e116:
            #simpleType:uint
            label = "MSS_RUN_DCD_CALIBRATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x776a736:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x777f418:
            #simpleType:uint
            label = "SYSTEM_THROTTLE_PSTATE_NUMBER_LIMIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x778bcbb:
            #simpleType:uint
            label = "RUN_MAX_MEM_PATTERNS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x77ae7b1:
            #simpleType:uint
            label = "RCW46_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x77c5cd3:
            #simpleType:uint
            label = "I2C_SUB_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x77da343:
            #simpleType:uint
            label = "NPU_MMIO_BAR_SIZE"
            traceEntry.append("[4][2]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x77f6219:
            #simpleType:uint
            label = "N_BULK_POWER_LIMIT_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7803464:
            #simpleType:uint
            label = "XSCOM_BASE_ADDRESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x780a573:
            #simpleType:uint
            label = "VCS_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x782c053:
            #simpleType:uint
            label = "SCRATCH_UINT32_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x785ff65:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_SUSPENDED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x787d424:
            #simpleType:uint
            label = "NEST_LEAKAGE_PERCENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x789ba7e:
            #simpleType:uint
            label = "ODY_DRAMINIT_FIR_CHECK_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x78c64c6:
            #simpleType:uint
            label = "NEST_PLL_FREQ_I2CDIV_LIST"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x78e2006:
            #simpleType:uint
            label = "PLDM_BMC_PDR_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7913dc5:
            #simpleType:uint
            label = "MEM_PMIC_FORCE_N_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7955514:
            #simpleType:uint
            label = "DDR5_PMIC_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7959bae:
            #simpleType:uint
            label = "POUND_V_STATIC_DATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x79c2dd2:
            #simpleType:uint
            label = "WOF_VRATIO_VDD_10THPCT"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7a03bac:
            #simpleType:enum
            label = "MODEL"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("MODEL_NA")
            elif attr == 0x00000010:
                 traceEntry.append("MODEL_RESERVED")
            elif attr == 0x00000011:
                 traceEntry.append("MODEL_VENICE")
            elif attr == 0x00000012:
                 traceEntry.append("MODEL_MURANO")
            elif attr == 0x00000013:
                 traceEntry.append("MODEL_NAPLES")
            elif attr == 0x00000014:
                 traceEntry.append("MODEL_NIMBUS")
            elif attr == 0x00000015:
                 traceEntry.append("MODEL_CUMULUS")
            elif attr == 0x00000016:
                 traceEntry.append("MODEL_AXONE")
            elif attr == 0x00000030:
                 traceEntry.append("MODEL_CENTAUR")
            elif attr == 0x00000031:
                 traceEntry.append("MODEL_OCMB")
            elif attr == 0x00000050:
                 traceEntry.append("MODEL_JEDEC")
            elif attr == 0x00000051:
                 traceEntry.append("MODEL_CDIMM")
            elif attr == 0x00000070:
                 traceEntry.append("MODEL_POWER8")
            elif attr == 0x00000090:
                 traceEntry.append("MODEL_POWER9")
            elif attr == 0x00000091:
                 traceEntry.append("MODEL_POWER10")
            elif attr == 0x00000092:
                 traceEntry.append("MODEL_CECTPM")
            elif attr == 0x00000093:
                 traceEntry.append("MODEL_BMC")
            elif attr == 0x00000094:
                 traceEntry.append("MODEL_AST2500")
            elif attr == 0x00000095:
                 traceEntry.append("MODEL_AST2600")
            elif attr == 0x00000096:
                 traceEntry.append("MODEL_PCA9847")
            elif attr == 0x00000097:
                 traceEntry.append("MODEL_UCD9090")
            elif attr == 0x00000098:
                 traceEntry.append("MODEL_UCD90120A")
            elif attr == 0x00000099:
                 traceEntry.append("MODEL_UCD90320")
        elif attrEnum == 0x7a1246a:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_RISE_DQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7a4868d:
            #simpleType:uint
            label = "ACTIVE_CORES_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7aabf03:
            #simpleType:uint
            label = "DDS_FREQ_JUMP_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7ac0e9a:
            #simpleType:uint
            label = "MEM_EFF_CHANNELS_PER_DIMM"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7ad8e43:
            #simpleType:uint
            label = "IPC_NODE_BUFFER_GLOBAL_ADDRESS"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x7adbf9e:
            #simpleType:uint
            label = "ODY_TMPL_9_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7b28a16:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLOFF_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7b36ccf:
            #simpleType:uint
            label = "DCADJ_TARGET_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7b5c147:
            #simpleType:uint
            label = "MRW_DDR4_VDDR_MAX_LIMIT_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7b5c8b8:
            #simpleType:uint
            label = "RCW0C_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7b7fc78:
            #simpleType:uint
            label = "MSS_MRW_DRAM_WRITE_CRC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7b92047:
            #simpleType:uint
            label = "HDAT_I2C_DEVICE_TYPE"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7bbb645:
            #simpleType:uint
            label = "SYS_DISABLE_HWFM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7bc6bec:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_MFG_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7c07477:
            #simpleType:uint
            label = "ODY_PHY_CALONCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7c84367:
            #simpleType:uint
            label = "EXP_MEM_PORT_POS_OF_FAIL_THROTTLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x7c9a836:
            #simpleType:uint
            label = "IPS_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7cc5a7f:
            pass
        elif attrEnum == 0x7ce5ba8:
            #simpleType:uint
            label = "WOFBASE_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7ce66ef:
            #simpleType:uint
            label = "MSS_RDVREF_CAL_ENABLE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7cfd099:
            #simpleType:uint
            label = "SYSTEM_AUXILLARY_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7d275f0:
            #simpleType:uint
            label = "ICACHE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7d95979:
            #simpleType:uint
            label = "CP_PLLIOSSFLT_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7e1fa3b:
            #simpleType:uint
            label = "PCIE_64BIT_DMA_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7e23d04:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_ADAPTATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7e3a34b:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SEQUENCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7e6967a:
            #simpleType:uint
            label = "ODY_AFU_ACTAG_LEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x7ec5eb9:
            #simpleType:uint
            label = "CHTM_MODE_MARKERS_ONLY"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f0a438:
            #simpleType:uint
            label = "RCW0F_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f199a1:
            #simpleType:uint
            label = "PBAX_CHIPID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f51090:
            #simpleType:uint
            label = "MSS_MRW_IDLE_POWER_CONTROL_REQUESTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f829da:
            #simpleType:uint
            label = "PCIE_CAPABILITES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f95302:
            #simpleType:uint
            label = "DUMMY_RO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7f9e3fe:
            #simpleType:uint
            label = "HDAT_I2C_SLAVE_PORT"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7fc67fc:
            #simpleType:uint
            label = "HYPERVISOR_IPL_DESTINATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x7fe3065:
            #simpleType:uint
            label = "DDR5_DRAM_CA_ODT"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x7fffb1b:
            #simpleType:uint
            label = "RCW0E_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x80161a9:
            #simpleType:uint
            label = "MEM_AVDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8032442:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x803a0ef:
            #simpleType:uint
            label = "MSS_EXP_RESP_MPR_PAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8046daf:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_LPASR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8063772:
            #simpleType:uint
            label = "EXPLR_ENABLE_US_TMPL_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8067067:
            #simpleType:uint
            label = "BOOT_PROGRESS_STATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x806e2cd:
            #simpleType:uint
            label = "SBE_HW_KEY_HASH_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x8072646:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_2_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x80817dc:
            #simpleType:uint
            label = "FAPI_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x80964fa:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SEQUENCE_CFG2_R42"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x80b9cd7:
            #simpleType:uint
            label = "MBA_DIMM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x80e877c:
            #simpleType:uint
            label = "PLDM_CONNECTOR_PDRS_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8105e72:
            #simpleType:uint
            label = "MAX_COMPUTE_NODES_PER_SYSTEM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x812d582:
            #simpleType:uint
            label = "MEM_EFF_DDR5_WL_ADJ_START"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x8135b05:
            #simpleType:enum
            label = "KEY_TRANSITION_STATE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("KEY_TRANSITION_STATE_KEY_TRANSITION_NOT_REQUESTED")
            elif attr == 0x00000001:
                 traceEntry.append("KEY_TRANSITION_STATE_KEY_TRANSITION_STARTED")
            elif attr == 0x00000002:
                 traceEntry.append("KEY_TRANSITION_STATE_KEY_TRANSITION_FAILED")
            elif attr == 0x00000003:
                 traceEntry.append("KEY_TRANSITION_STATE_KEY_TRANSITION_SUCCEEDED")
        elif attrEnum == 0x815fdfc:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8188de0:
            #simpleType:uint
            label = "PROC_PAU_MMIO_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8196e7d:
            #simpleType:uint
            label = "EFF_DRAM_TMAW"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x81d308e:
            #simpleType:uint
            label = "RCW44_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x81e7c0c:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWA_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8218c38:
            #simpleType:uint
            label = "MRW_MEM_THROTTLE_DENOMINATOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x829c075:
            #simpleType:uint
            label = "OCMB_RESET_DELAY_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x829cc6b:
            #simpleType:uint
            label = "DISABLE_PLD_WAIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x829fde2:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_INTERCEPT_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x82b807e:
            #simpleType:uint
            label = "PM_SPIPSS_CLOCK_PHASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x82b8963:
            #simpleType:uint
            label = "MEM_EFF_DDR5_CHB_ACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x82cf1be:
            #simpleType:uint
            label = "MSS_OCMB_ENTERPRISE_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x82f2d14:
            #simpleType:uint
            label = "WOF_THROTTLE_CONTROL_DISABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x82f58e6:
            #simpleType:uint
            label = "FREQ_PCIE_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x832a26f:
            #simpleType:uint
            label = "RUNN_SRESET_THREADS_BVEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x833d2c7:
            #simpleType:uint
            label = "HTMSC_IMA_PDBAR_ADDR"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x836d048:
            #simpleType:uint
            label = "ORIG_FIR_SETTINGS_ACTION0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x837b78a:
            #simpleType:uint
            label = "HOT_PLUG_POWER_CONTROLLER_INFO"
            traceEntry.append("[8][8]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x837c29b:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x837f7ab:
            #simpleType:uint
            label = "EC_GARD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x83a8012:
            #simpleType:uint
            label = "ODY_PASID_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x83cc1e9:
            #simpleType:enum
            label = "PROC_MODULE_TYPE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000050:
                 traceEntry.append("PROC_MODULE_TYPE_GODEL")
            elif attr == 0x00000051:
                 traceEntry.append("PROC_MODULE_TYPE_BLAISE")
        elif attrEnum == 0x83d7d98:
            #simpleType:uint
            label = "SOFT_MIN_POWER_CAP_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x83fe364:
            #simpleType:uint
            label = "REQUIRED_SYNCH_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x841f53b:
            #simpleType:uint
            label = "SPPE_I2C_ENGINE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8442c0a:
            #simpleType:uint
            label = "IPS_EXIT_TIME_SECONDS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x8455d8c:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x84844ff:
            #simpleType:uint
            label = "PROC_CHIP_IPL_PHASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x84a4edb:
            pass
        elif attrEnum == 0x84b3cfb:
            #simpleType:uint
            label = "SKEWADJ_CORE_PDLY_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x84b5044:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_SLOPE_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x84bd9ba:
            #simpleType:uint
            label = "PROC_PCIE_FW_VERSION_0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x84f709a:
            #simpleType:uint
            label = "DDR5_DRAM_TEST_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8516c9c:
            #simpleType:uint
            label = "IBSCOM_VIRTUAL_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x852b409:
            #simpleType:uint
            label = "CHIP_CONTAINED_ACTIVE_CORES_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x854877b:
            #simpleType:enum
            label = "SYS_CLOCK_DECONFIG_STATE_INITIAL"
        elif attrEnum == 0x854b79b:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8560487:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC04"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x856b2c4:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_3_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x856b84d:
            #simpleType:uint
            label = "MEM_DRAM_GEN_METADATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x859437f:
            #simpleType:uint
            label = "XIVE_CONTROLLER_BAR_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x85a4a4b:
            #simpleType:uint
            label = "SECURE_VERSION_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x85b98d6:
            #simpleType:uint
            label = "MEM_2N_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x85c31e5:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_THRESHOLD_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x85ef6e9:
            #simpleType:uint
            label = "INT_CQ_TM_BAR_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x85fcda1:
            #simpleType:uint
            label = "NHTM_TRACE_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86599be:
            #simpleType:uint
            label = "CREATE_DEF_PARTITION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x866211d:
            #simpleType:uint
            label = "VRM_VDD_DVFS_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86695d0:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_EVENT_VTID"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86917a6:
            #simpleType:uint
            label = "MEM_DDR5_WR_CRC_AUTODISABLE_WINDOW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86bad95:
            #simpleType:uint
            label = "MSS_MRW_FORCE_BCMODE_OFF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86e21ac:
            #simpleType:uint
            label = "MAX_MCS_PER_SYSTEM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x86feede:
            #simpleType:uint
            label = "EFF_NIBBLE_MAP"
            traceEntry.append("[2][2][18]:")
            for x in range(72):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x878bcaf:
            #simpleType:uint
            label = "EFF_DRAM_TRFC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x87bdfb9:
            #simpleType:uint
            label = "MSS_MRW_FINE_REFRESH_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x87e3ed0:
            #simpleType:uint
            label = "RUNN_STAGGER_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x87ff43a:
            #simpleType:uint
            label = "PROC_FABRIC_A_LINKS_CNFG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8804d03:
            #simpleType:uint
            label = "SPPE_BOOT_SIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x882b99c:
            #simpleType:uint
            label = "MNFG_TH_L2_CACHE_CES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8830142:
            #simpleType:uint
            label = "MRW_DDR3_VDDR_MAX_LIMIT_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8845c5b:
            #simpleType:uint
            label = "L2_CACHE_ASSOC_SETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8883a11:
            #simpleType:uint
            label = "PROC_PSI_BRIDGE_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x888c903:
            #simpleType:uint
            label = "MEM_EFF_PRIM_STACK_TYPE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x88ba0c5:
            #simpleType:uint
            label = "EFF_NUM_RANKS_PER_DIMM"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x891d6d1:
            #simpleType:uint
            label = "HBRT_HYP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x89224bc:
            #simpleType:uint
            label = "NEST_VDD_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x892eeb6:
            #simpleType:uint
            label = "MEM_SI_SIGNATURE_HASH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8944726:
            #simpleType:uint
            label = "TCE_START_TOKEN_FOR_PAYLOAD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8949e92:
            #simpleType:uint
            label = "SOCKET_POWER_TURBO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8990bb0:
            #simpleType:uint
            label = "MSS_OMI_EDPL_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x89937ca:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8997fc6:
            #simpleType:uint
            label = "SYSTEM_IQ_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x89af58e:
            #simpleType:uint
            label = "OMI_CHANNEL_FAIL_ACTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x89b8414:
            #simpleType:uint
            label = "PROC_MEM_BASES_ACK"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x89b9a48:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x89bd966:
            #simpleType:uint
            label = "HDAT_I2C_DEVICE_PURPOSE"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8a5e99e:
            #simpleType:uint
            label = "ODY_PHY_MSTRMAXREQTOACK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8a7db83:
            #simpleType:uint
            label = "SYSTEM_PSTATES_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8a9711e:
            #simpleType:uint
            label = "DCADJ_DCC_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x8ab374a:
            #simpleType:uint
            label = "IO_IOHS_PRE1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ad2e2a:
            #simpleType:uint
            label = "NDL_MESHCTRL_SETUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ae42e8:
            pass
        elif attrEnum == 0x8b159e0:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b1986a:
            #simpleType:uint
            label = "MEM_EFF_DDR5_RTT_PARK_RD"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b29691:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC0F"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b58e8c:
            #simpleType:uint
            label = "MEM_RDIMM_BUFFER_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b5ae6e:
            #simpleType:uint
            label = "HTMSC_TTYPEFILT_INVERT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b6b012:
            #simpleType:uint
            label = "PM_MALF_CYCLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8b78d35:
            #simpleType:uint
            label = "EFF_DRAM_TRP"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8bbbd3c:
            #simpleType:uint
            label = "OVERRIDES_ATTEMPTED_FLAG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8be06f8:
            #simpleType:uint
            label = "WOV_OVERV_MAX_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8c22154:
            #simpleType:uint
            label = "SLCA_RID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8c5fb5a:
            #simpleType:uint
            label = "PAYLOAD_IN_MIRROR_MEM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8cc8333:
            #simpleType:uint
            label = "PROC_INT_IC_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ccc316:
            #simpleType:uint
            label = "MSS_EXP_RESP_WR_PREAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8cd1455:
            #simpleType:uint
            label = "EFF_DRAM_TWTR_L"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ce790d:
            #simpleType:uint
            label = "THREAD_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8d11dd8:
            #simpleType:uint
            label = "MEM_EFF_ATXDLY_B"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8d2dc76:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8d614de:
            #simpleType:uint
            label = "OCC_LFIRMASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x8d7f254:
            #simpleType:uint
            label = "POUNDV_BUCKET_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8dc56b6:
            #simpleType:uint
            label = "ODY_RX2D_DFE_MISC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8dc78ef:
            #simpleType:uint
            label = "MAX_PROC_CHIPS_PER_NODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8dc9d7c:
            #simpleType:uint
            label = "DDR5_DRAM_RTT_NOM_WR"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8dfa6d6:
            #simpleType:uint
            label = "START_MEM_ADDRESS_FOR_PAYLOAD_TCE_TOKEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x8dfd2fd:
            #simpleType:uint
            label = "DDR5_DRAM_WR_POSTAMBLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e10b37:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e2a2e3:
            #simpleType:uint
            label = "MEM_EFF_SPD_CONTENT_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e2c3d7:
            #simpleType:uint
            label = "CP_REFCLOCK_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e5a6f8:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e6a027:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8e94b95:
            #simpleType:uint
            label = "NO_APSS_PROC_POWER_VCS_VIO_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x8ec531c:
            #simpleType:uint
            label = "MEM_IGNORE_PLUG_RULES_DIMM_SIZE_MIX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ecc32e:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC02"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ed8bbf:
            #simpleType:uint
            label = "DIMM_SPD_BYTE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8eda99e:
            #simpleType:uint
            label = "FUSED_CORE_PAIRED_MODE_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ee2d89:
            #simpleType:uint
            label = "MSS_MBA_ADDR_INTERLEAVE_BIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ee5f82:
            #simpleType:uint
            label = "ACTIVE_CORES_NUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f00dcd:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f1af9c:
            #simpleType:uint
            label = "PROC_FSP_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f2a29b:
            #simpleType:uint
            label = "ODY_TMPL_5_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f2bd1d:
            #simpleType:uint
            label = "PAU_DPLL_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f2e0ff:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_UT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x8f31306:
            #simpleType:uint
            label = "PLDM_STATE_QUERY_RECORDS"
            traceEntry.append("[12288]:")
            for x in range(12288):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8f3871f:
            pass
        elif attrEnum == 0x8f50763:
            #simpleType:uint
            label = "PROC_LCO_MODE_SETUP_ADAPTIVE_D"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x8f5a12c:
            #simpleType:uint
            label = "DISABLE_TOD_SYNC_SPREAD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8fc28b1:
            #simpleType:uint
            label = "SBE_ADDR_KEY_STASH_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x8fe48a2:
            #simpleType:uint
            label = "MEM_MRW_IS_PLANAR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8fe7d97:
            #simpleType:uint
            label = "AW_STATIC_DATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8fec09a:
            #simpleType:uint
            label = "SPPE_I2C_MAX_RETRY_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ff8d9c:
            #simpleType:uint
            label = "EFFECTIVE_EC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x8ffa8f1:
            #simpleType:uint
            label = "DDR5_DRAM_VREFCS"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x90059b3:
            #simpleType:uint
            label = "HTMSC_MODE_DIS_TSTAMP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9008e43:
            #nativeType:EntityPath
            label = "ALTFSI_MASTER_CHIP"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0x900fdc4:
            #simpleType:uint
            label = "OMI_BIST_ESD_TEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x905ce7f:
            #simpleType:uint
            label = "MSS_EXP_RESP_PER_DRAM_ACCESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x90885f2:
            #simpleType:uint
            label = "SYSTEM_MMA_POWEROFF_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x90b16d2:
            #simpleType:uint
            label = "RCW40_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x90b4ba7:
            #simpleType:uint
            label = "POSITION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x90ddd8e:
            #simpleType:uint
            label = "MAX_MBAS_PER_MEMBUF_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x90e81d5:
            #simpleType:uint
            label = "PCIE_NVME_PHB_CONFIG"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x9130cb8:
            #simpleType:uint
            label = "MAX_DIMMS_PER_MBA_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9133f91:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_SP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9135ce2:
            #simpleType:enum
            label = "KEY_CLEAR_REQUEST"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("KEY_CLEAR_REQUEST_NONE")
            elif attr == 0x00008000:
                 traceEntry.append("KEY_CLEAR_REQUEST_ALL")
            elif attr == 0x00004000:
                 traceEntry.append("KEY_CLEAR_REQUEST_OS_KEYS")
            elif attr == 0x00001000:
                 traceEntry.append("KEY_CLEAR_REQUEST_POWERVM_SYSKEY")
            elif attr == 0x00002C00:
                 traceEntry.append("KEY_CLEAR_REQUEST_RESERVED_1")
            elif attr == 0x00000200:
                 traceEntry.append("KEY_CLEAR_REQUEST_MFG_ALL")
            elif attr == 0x00000100:
                 traceEntry.append("KEY_CLEAR_REQUEST_MFG")
            elif attr == 0x000000FF:
                 traceEntry.append("KEY_CLEAR_REQUEST_RESERVED_2")
        elif attrEnum == 0x913e3f3:
            #simpleType:uint
            label = "RCW00_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x91498cd:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9166bde:
            #simpleType:uint
            label = "VIO_RAILS_NOT_POWERED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9184d62:
            #simpleType:uint
            label = "DUMMY_HEAP_ZERO_DEFAULT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x91b6902:
            #simpleType:uint
            label = "PROC_FABRIC_SL_DOMAIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x91dcae8:
            #simpleType:uint
            label = "SKEWADJ_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9209ebe:
            #simpleType:uint
            label = "QME_LFIRMASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x920e9b8:
            #simpleType:uint
            label = "EXTERNAL_VRM_TRANSITION_STABILIZATION_TIME_NS"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x920fc84:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x922a9c2:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SEQUENCE_CFG2_R42"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9238d54:
            #simpleType:uint
            label = "MEM_SI_DRAM_RTT_NOM"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9243579:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_WR_LVL_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x926d37e:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x928d6c3:
            #simpleType:uint
            label = "PROC_NX_RNG_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x92913ca:
            #simpleType:uint
            label = "SECURITY_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x929775e:
            #simpleType:uint
            label = "MEM_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x92fced8:
            #simpleType:uint
            label = "MEM_CS_CMD_LATENCY"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x92ff37a:
            #simpleType:uint
            label = "HTMSC_FILT_OCC_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x931031c:
            #simpleType:uint
            label = "WOV_OVERV_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9330425:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x934de01:
            #simpleType:uint
            label = "ICACHE_LINE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x935d008:
            #simpleType:uint
            label = "MAX_POWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x939f9be:
            #simpleType:uint
            label = "MSS_MRW_DIMM_SLOT_AIRFLOW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x93af940:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC00"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x93b353c:
            #simpleType:uint
            label = "ODY_TMPL_B_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x93b8597:
            #simpleType:uint
            label = "WOF_VRATIO_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x93e688d:
            #simpleType:uint
            label = "SAVED_PB_PTL_FIR_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x93f2355:
            #simpleType:uint
            label = "MSS_EXP_RESP_ODT_INPUT_BUFF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x93f3408:
            #simpleType:uint
            label = "BUS_RAIL_LOCATION_MAP"
            traceEntry.append("[208]:")
            for x in range(208):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x944866d:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_SLEW_RATE_CNTL"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x948370e:
            #simpleType:uint
            label = "PROC_EPS_WRITE_CYCLES_T1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9484951:
            #simpleType:enum
            label = "TYPE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("TYPE_NA")
            elif attr == 0x00000001:
                 traceEntry.append("TYPE_SYS")
            elif attr == 0x00000002:
                 traceEntry.append("TYPE_NODE")
            elif attr == 0x00000003:
                 traceEntry.append("TYPE_DIMM")
            elif attr == 0x00000004:
                 traceEntry.append("TYPE_MEMBUF")
            elif attr == 0x00000005:
                 traceEntry.append("TYPE_PROC")
            elif attr == 0x00000006:
                 traceEntry.append("TYPE_EX")
            elif attr == 0x00000007:
                 traceEntry.append("TYPE_CORE")
            elif attr == 0x00000008:
                 traceEntry.append("TYPE_L2")
            elif attr == 0x00000009:
                 traceEntry.append("TYPE_L3")
            elif attr == 0x0000000A:
                 traceEntry.append("TYPE_L4")
            elif attr == 0x0000000B:
                 traceEntry.append("TYPE_MCS")
            elif attr == 0x0000000D:
                 traceEntry.append("TYPE_MBA")
            elif attr == 0x0000000E:
                 traceEntry.append("TYPE_XBUS")
            elif attr == 0x0000000F:
                 traceEntry.append("TYPE_ABUS")
            elif attr == 0x00000010:
                 traceEntry.append("TYPE_PCI")
            elif attr == 0x00000011:
                 traceEntry.append("TYPE_DPSS")
            elif attr == 0x00000012:
                 traceEntry.append("TYPE_APSS")
            elif attr == 0x00000013:
                 traceEntry.append("TYPE_OCC")
            elif attr == 0x00000014:
                 traceEntry.append("TYPE_PSI")
            elif attr == 0x00000015:
                 traceEntry.append("TYPE_FSP")
            elif attr == 0x00000016:
                 traceEntry.append("TYPE_PNOR")
            elif attr == 0x00000017:
                 traceEntry.append("TYPE_OSC")
            elif attr == 0x00000018:
                 traceEntry.append("TYPE_TODCLK")
            elif attr == 0x00000019:
                 traceEntry.append("TYPE_CONTROL_NODE")
            elif attr == 0x0000001A:
                 traceEntry.append("TYPE_OSCREFCLK")
            elif attr == 0x0000001B:
                 traceEntry.append("TYPE_OSCPCICLK")
            elif attr == 0x0000001C:
                 traceEntry.append("TYPE_REFCLKENDPT")
            elif attr == 0x0000001D:
                 traceEntry.append("TYPE_PCICLKENDPT")
            elif attr == 0x0000001E:
                 traceEntry.append("TYPE_NX")
            elif attr == 0x0000001F:
                 traceEntry.append("TYPE_PORE")
            elif attr == 0x00000020:
                 traceEntry.append("TYPE_PCIESWITCH")
            elif attr == 0x00000021:
                 traceEntry.append("TYPE_CAPP")
            elif attr == 0x00000022:
                 traceEntry.append("TYPE_FSI")
            elif attr == 0x00000023:
                 traceEntry.append("TYPE_EQ")
            elif attr == 0x00000024:
                 traceEntry.append("TYPE_MCA")
            elif attr == 0x00000025:
                 traceEntry.append("TYPE_MCBIST")
            elif attr == 0x00000026:
                 traceEntry.append("TYPE_MI")
            elif attr == 0x00000027:
                 traceEntry.append("TYPE_DMI")
            elif attr == 0x00000028:
                 traceEntry.append("TYPE_OBUS")
            elif attr == 0x0000002A:
                 traceEntry.append("TYPE_SBE")
            elif attr == 0x0000002B:
                 traceEntry.append("TYPE_PPE")
            elif attr == 0x0000002C:
                 traceEntry.append("TYPE_PERV")
            elif attr == 0x0000002D:
                 traceEntry.append("TYPE_PEC")
            elif attr == 0x0000002E:
                 traceEntry.append("TYPE_PHB")
            elif attr == 0x0000002F:
                 traceEntry.append("TYPE_SYSREFCLKENDPT")
            elif attr == 0x00000030:
                 traceEntry.append("TYPE_MFREFCLKENDPT")
            elif attr == 0x00000031:
                 traceEntry.append("TYPE_TPM")
            elif attr == 0x00000032:
                 traceEntry.append("TYPE_SP")
            elif attr == 0x00000033:
                 traceEntry.append("TYPE_UART")
            elif attr == 0x00000034:
                 traceEntry.append("TYPE_PS")
            elif attr == 0x00000035:
                 traceEntry.append("TYPE_FAN")
            elif attr == 0x00000036:
                 traceEntry.append("TYPE_VRM")
            elif attr == 0x00000037:
                 traceEntry.append("TYPE_USB")
            elif attr == 0x00000038:
                 traceEntry.append("TYPE_ETH")
            elif attr == 0x00000039:
                 traceEntry.append("TYPE_PANEL")
            elif attr == 0x0000003A:
                 traceEntry.append("TYPE_BMC")
            elif attr == 0x0000003B:
                 traceEntry.append("TYPE_FLASH")
            elif attr == 0x0000003C:
                 traceEntry.append("TYPE_SEEPROM")
            elif attr == 0x0000003D:
                 traceEntry.append("TYPE_TMP")
            elif attr == 0x0000003E:
                 traceEntry.append("TYPE_GPIO_EXPANDER")
            elif attr == 0x0000003F:
                 traceEntry.append("TYPE_POWER_SEQUENCER")
            elif attr == 0x00000040:
                 traceEntry.append("TYPE_RTC")
            elif attr == 0x00000041:
                 traceEntry.append("TYPE_FANCTLR")
            elif attr == 0x00000042:
                 traceEntry.append("TYPE_OBUS_BRICK")
            elif attr == 0x00000043:
                 traceEntry.append("TYPE_NPU")
            elif attr == 0x00000044:
                 traceEntry.append("TYPE_MC")
            elif attr == 0x00000045:
                 traceEntry.append("TYPE_TEST_FAIL")
            elif attr == 0x00000046:
                 traceEntry.append("TYPE_MFREFCLK")
            elif attr == 0x00000047:
                 traceEntry.append("TYPE_SMPGROUP")
            elif attr == 0x00000048:
                 traceEntry.append("TYPE_OMI")
            elif attr == 0x00000049:
                 traceEntry.append("TYPE_MCC")
            elif attr == 0x0000004A:
                 traceEntry.append("TYPE_OMIC")
            elif attr == 0x0000004B:
                 traceEntry.append("TYPE_OCMB_CHIP")
            elif attr == 0x0000004C:
                 traceEntry.append("TYPE_MEM_PORT")
            elif attr == 0x0000004D:
                 traceEntry.append("TYPE_I2C_MUX")
            elif attr == 0x0000004E:
                 traceEntry.append("TYPE_PMIC")
            elif attr == 0x0000004F:
                 traceEntry.append("TYPE_NMMU")
            elif attr == 0x00000050:
                 traceEntry.append("TYPE_PAU")
            elif attr == 0x00000051:
                 traceEntry.append("TYPE_IOHS")
            elif attr == 0x00000052:
                 traceEntry.append("TYPE_PAUC")
            elif attr == 0x00000053:
                 traceEntry.append("TYPE_FC")
            elif attr == 0x00000054:
                 traceEntry.append("TYPE_LPCREFCLKENDPT")
            elif attr == 0x00000055:
                 traceEntry.append("TYPE_GENERIC_I2C_DEVICE")
            elif attr == 0x00000056:
                 traceEntry.append("TYPE_MDS_CTLR")
            elif attr == 0x00000057:
                 traceEntry.append("TYPE_DCM")
            elif attr == 0x00000066:
                 traceEntry.append("TYPE_POWER_IC")
            elif attr == 0x00000067:
                 traceEntry.append("TYPE_TEMP_SENSOR")
            elif attr == 0x00000068:
                 traceEntry.append("TYPE_LAST_IN_RANGE")
        elif attrEnum == 0x948775e:
            #simpleType:uint
            label = "ODY_MSG_BLOCK_DATA_SOURCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9487ddb:
            #simpleType:uint
            label = "PCIE_64BIT_MMIO_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x948b8b8:
            #simpleType:uint
            label = "MSS_MRW_OCMB_THERMAL_MEMORY_POWER_LIMIT"
            traceEntry.append("[25]:")
            for x in range(25):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x94901ad:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9493ec3:
            #simpleType:uint
            label = "SPIPSS_FREQUENCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x949ac11:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLON_WR_NT"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x94c8d08:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWD_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x94d33d8:
            #simpleType:uint
            label = "MEM_EFF_DDR5_VREFCS_SWEEP_MIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x94f0f3c:
            #simpleType:uint
            label = "IOHS_LINK_TRAIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x950f081:
            #simpleType:uint
            label = "HDAT_I2C_ELEMENTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x955e6b7:
            #simpleType:uint
            label = "PBAX_GROUPID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x956902a:
            #simpleType:uint
            label = "MEM_EFF_DRAM_DENSITY"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x957176b:
            #simpleType:uint
            label = "CENTAUR_ECID_FRU_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x957b9c0:
            pass #complexType - skipping
        elif attrEnum == 0x95a5499:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x95c569b:
            #simpleType:uint
            label = "WOV_UNDERV_STEP_INCR_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x95c6778:
            #simpleType:uint
            label = "OVERSUB_N_PER_PORT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x95ec877:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TREFI"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9604985:
            #simpleType:uint
            label = "MSS_EXP_FW_PARTITION_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x96069bd:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_RCD_PARITY_ERRORS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x96086e6:
            #simpleType:uint
            label = "HDAT_I2C_ADDR"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9615865:
            #simpleType:uint
            label = "CHIP_UNIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9640d61:
            #simpleType:uint
            label = "IOHS_FABRIC_LANE_REVERSAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9641a9b:
            #simpleType:uint
            label = "MEM_SI_GEARDOWN_MODE"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x96494e2:
            #simpleType:uint
            label = "EFF_DRAM_PPR"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9653ac9:
            #simpleType:uint
            label = "ORIG_FIR_SETTINGS_ACTION1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x9688fe1:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_DQ_DQS_PULL_DOWN"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x96b7c4b:
            #simpleType:uint
            label = "MSS_OCMB_ECID"
            traceEntry.append("[14]:")
            for x in range(14):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x96ed273:
            #simpleType:uint
            label = "SBE_SELECT_EX_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x96f8bd3:
            #simpleType:uint
            label = "SECUREBOOT_PROTECT_DECONFIGURED_TPM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x970ff46:
            #simpleType:uint
            label = "CHTM_CTRL_MARK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9711cca:
            #simpleType:uint
            label = "RCW47_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9717572:
            pass #complexType - skipping
        elif attrEnum == 0x9761e43:
            #simpleType:uint
            label = "SECTOR_BUFFER_STRENGTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x977494c:
            #simpleType:uint
            label = "SYSTEM_PDV_LAB_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x978723d:
            #simpleType:uint
            label = "IOHS_MFG_BAD_LANE_VEC_VALID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x97999e4:
            #simpleType:uint
            label = "ODYSSEY_PRIORITY_CODE_UPDATE_RULE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x97bb3e7:
            #simpleType:uint
            label = "MEM_INTERNAL_WR_TIMING_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x97c0210:
            #simpleType:uint
            label = "MAX_SBE_SEEPROM_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x97d43be:
            #simpleType:uint
            label = "RECONFIG_LOOP_TESTS_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x97d528f:
            #simpleType:uint
            label = "EXP_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x97e0876:
            #simpleType:uint
            label = "PEC_PCIE_IOP_REVERSAL"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x98551c7:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_IMP_CMD_ADDR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x986b127:
            #simpleType:uint
            label = "SKIP_PG_ENFORCEMENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x987618b:
            #simpleType:uint
            label = "MEM_EFF_REDUNDANT_CS_EN"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x987bc15:
            #simpleType:uint
            label = "DDS_FMAX_OVERRIDE_KHZ"
            traceEntry.append("[9]:")
            for x in range(9):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x987d38a:
            #simpleType:uint
            label = "QUAD_WEIGHT_TENTHS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x98a084e:
            #simpleType:uint
            label = "MEM_REF_WIDE_RANGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x98fab6d:
            #simpleType:uint
            label = "VOLTAGE_EXT_BIAS"
            traceEntry.append("[2][8]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x990b7c8:
            #simpleType:uint
            label = "FRU_CCIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x990d5ea:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SEQUENCE_CFG0_R40"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x997e20e:
            #simpleType:uint
            label = "HDAT_RSV_MEM_NUM_SECTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x99841b6:
            pass #not readable
        elif attrEnum == 0x998757c:
            #simpleType:uint
            label = "PROC_PCIE_MMIO_BAR0_BASE_ADDR_OFFSET"
            traceEntry.append("[6]:")
            for x in range(6):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x999e613:
            #simpleType:uint
            label = "RCW08_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x99b51a5:
            #simpleType:uint
            label = "LAST_IPLTIME_EID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x99f7795:
            #simpleType:uint
            label = "MSS_MRW_TEMP_REFRESH_RANGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x99f8f42:
            #simpleType:uint
            label = "ATTN_CHK_OCMBS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9a0cac6:
            #simpleType:uint
            label = "DRAM_PU_DRV_IMP"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9a1b903:
            #simpleType:uint
            label = "SYSTEM_THERMAL_RESISTANCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9a283f7:
            #simpleType:uint
            label = "EXPLR_ACTAG_BASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9a3213c:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F1RC05"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9a3b18e:
            #simpleType:uint
            label = "MSS_VOLT_VDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9a8a800:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SEQUENCE_CFG1_R41"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9ad35b5:
            #simpleType:uint
            label = "DDS_THRESHOLD_PSTATE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9aef30c:
            #simpleType:uint
            label = "MSS_CENT_VDD_SLOPE_ACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9b073da:
            #simpleType:uint
            label = "RUNN_CORE_CYCLE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9b23c48:
            #simpleType:uint
            label = "USB_SECURITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9b2f9cf:
            #simpleType:uint
            label = "RCW41_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9b7099c:
            #simpleType:uint
            label = "NEST_PLL_FREQ_LIST"
            traceEntry.append("[5]:")
            for x in range(5):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9b947e9:
            #simpleType:uint
            label = "XSCOM_VIRTUAL_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x9bb1f90:
            #simpleType:uint
            label = "PM_RESET_FFDC_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9bd8339:
            #simpleType:uint
            label = "MISC_POWER_PER_SYSTEM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9c05f84:
            #simpleType:uint
            label = "DDR5_DRAM_RTT_PARK"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9c16ebb:
            #simpleType:uint
            label = "MEM_EFF_BYTE_ENABLES"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9c3a3d6:
            #simpleType:uint
            label = "MSS_MRW_PERIODIC_MEMCAL_MODE_OPTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9c878db:
            #simpleType:uint
            label = "OMI_FFE_POST_CURSOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9c89449:
            #simpleType:uint
            label = "MSS_VOLT_VPP_SLOPE_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9cb426e:
            #simpleType:uint
            label = "PROC_R_LOADLINE_UOHM"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9cb467b:
            #simpleType:uint
            label = "DCACHE_LINE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9cc78b8:
            #simpleType:uint
            label = "MEM_SI_VREF_MC_RD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9ce2145:
            #simpleType:uint
            label = "RCW43_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9cedf5f:
            #simpleType:uint
            label = "CHTM_MODE_LLAT_CAPTURE_PBL3_HIT_DIS"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9cf4fc4:
            #simpleType:uint
            label = "MEM_EFF_DRAM_GEN"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9d0a4a8:
            #simpleType:uint
            label = "TPM_SPI_BUS_DIV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9d169d9:
            #simpleType:uint
            label = "FORCE_SERIAL_ISTEPS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9d9692e:
            #simpleType:uint
            label = "DDR5_MC_EXT_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9db3e24:
            #simpleType:uint
            label = "PROC_FABRIC_A_ATTACHED_CHIP_CNFG"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9dc1f05:
            #simpleType:uint
            label = "MEM_EFF_DDR5_WL_ADJ_END"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9dc28f2:
            pass
        elif attrEnum == 0x9dcade3:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TWR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9dd54f3:
            #simpleType:uint
            label = "RCW42_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9ddd63b:
            #simpleType:uint
            label = "THROTTLE_TABLE_OVERRIDE"
            traceEntry.append("[64]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9df5889:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9dfa8e3:
            #simpleType:uint
            label = "EXTERNAL_VRM_TRANSITION_RATE_INC_UV_PER_US"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9e2f6b7:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9e4aac2:
            pass #complexType - skipping
        elif attrEnum == 0x9e4ee59:
            #simpleType:uint
            label = "SPPE_RUNTIME_MEASUREMENT_HASH"
            traceEntry.append("[64]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9e66e24:
            #simpleType:uint
            label = "PROC_FABRIC_TSNOOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0x9ebf155:
            #simpleType:uint
            label = "MEM_EFF_DRAM_BANK_BITS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9ed1ea7:
            #simpleType:uint
            label = "PROC_MHZ_PER_WATT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9eda982:
            pass #complexType - skipping
        elif attrEnum == 0x9ef1783:
            #simpleType:uint
            label = "IO_O_DEBUG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9f10191:
            #simpleType:uint
            label = "HDAT_EC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9f3cbef:
            #simpleType:uint
            label = "PROC_OCC_SANDBOX_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0x9f5b11a:
            #simpleType:uint
            label = "MSS_MRW_DIMM_HEIGHT_MIXING_POLICY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9f670db:
            #simpleType:uint
            label = "FUSED_CORE_OPTION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9f7bd88:
            #simpleType:uint
            label = "MEM_EFF_HOST_TO_DDR_SPEED_RATIO"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0x9f8f049:
            #simpleType:uint
            label = "ODY_SIM_TSTAOFF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9fae533:
            #simpleType:uint
            label = "ODY_SIM_TDQS2DQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0x9fc8b45:
            #simpleType:uint
            label = "VOLTAGE_EXT_VDN_BIAS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa007572:
            #simpleType:enum
            label = "HW_VER"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000002:
                 traceEntry.append("HW_VER_FSP_HW_VER")
            elif attr == 0x00000003:
                 traceEntry.append("HW_VER_BMC_HW_VER")
        elif attrEnum == 0xa030cff:
            #simpleType:uint
            label = "CME_CHTM_TRACE_MEMORY_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa0ad007:
            #simpleType:uint
            label = "MC_EXT_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa0bf6f9:
            #simpleType:uint
            label = "PROC_HW_TOPOLOGY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa0dd16a:
            #simpleType:uint
            label = "MNFG_TH_L3_DIR_CES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa10bfc8:
            #simpleType:uint
            label = "PROC_PCIE_PCS_RX_LOFF_CONTROL"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa12ad5c:
            #simpleType:uint
            label = "ODY_ADV_TRAIN_OPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa140a0e:
            #simpleType:uint
            label = "DRAMINIT_TRAINING_TIMEOUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa147b1c:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRAS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa15fc01:
            #simpleType:uint
            label = "MSS_MRW_VCS_OFFSET_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa186078:
            #simpleType:uint
            label = "ODY_SEQUENCE_CTRL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa1ab2a1:
            #simpleType:uint
            label = "DVFS_ADJUSTMENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa1bd115:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TCCD_L_WR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa1e433c:
            #simpleType:uint
            label = "CHTM_TRACE_TYPE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa1f54ec:
            #simpleType:uint
            label = "DDS_COARSE_THROTTLE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa20e490:
            #simpleType:uint
            label = "HYPERVISOR_IPL_SIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa22aac4:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_DIS_WRAP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa232f81:
            #simpleType:uint
            label = "MEM_DDR5_WR_CRC_ERR_STATUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa235b8b:
            #simpleType:uint
            label = "HTMSC_FILT_PORT1_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa24c56a:
            #simpleType:uint
            label = "POUND_W_STATIC_DATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa258a52:
            #simpleType:uint
            label = "PEC_PCIE_LANE_MASK_BIFURCATED"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa26f1f9:
            #simpleType:uint
            label = "CLOCKSTOP_ON_XSTOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa2ab303:
            #simpleType:uint
            label = "PREHEAT_PERCENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa2c9bd2:
            #simpleType:uint
            label = "PROC_FABRIC_GROUP_MASTER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa2f9494:
            #simpleType:uint
            label = "MSS_DATABUS_UTIL_PER_MBA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa31ec38:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_DFE_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa31ee72:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa35f85d:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa3a1b06:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa3a4736:
            #simpleType:uint
            label = "PSTATES_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa3a830c:
            #simpleType:uint
            label = "PM_MALF_ALERT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa3b2a2e:
            pass #not readable
        elif attrEnum == 0xa3c9808:
            #simpleType:uint
            label = "DDR5_N_PLUS_ONE_MAX_MEM_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa3d359e:
            pass #not readable
        elif attrEnum == 0xa3dc291:
            #simpleType:uint
            label = "FREQ_CORE_CEILING_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa40efa1:
            pass
        elif attrEnum == 0xa411747:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC1X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa41ce38:
            #simpleType:uint
            label = "SYS_VFRT_STATIC_DATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa42690f:
            #simpleType:uint
            label = "DDR5_DRAM_RTT_NOM_RD"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa432982:
            #simpleType:uint
            label = "MSS_OCMB_RECOV_OBJ_HANDLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa450ad9:
            #simpleType:uint
            label = "HW543384_WAR_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa45db0f:
            #simpleType:uint
            label = "CLOCK_MUX10_PAU_DPLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa4d2083:
            #simpleType:enum
            label = "PAYLOAD_KIND"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("PAYLOAD_KIND_UNKNOWN")
            elif attr == 0x00000001:
                 traceEntry.append("PAYLOAD_KIND_PHYP")
            elif attr == 0x00000002:
                 traceEntry.append("PAYLOAD_KIND_SAPPHIRE")
            elif attr == 0x00000003:
                 traceEntry.append("PAYLOAD_KIND_NONE")
        elif attrEnum == 0xa4d2323:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_EN_I_PRE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa5113fc:
            #simpleType:uint
            label = "OCMB_BOOT_SIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa543693:
            #simpleType:uint
            label = "PROC_INT_TM_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa5447c0:
            #simpleType:uint
            label = "DDS_TRIP_OFFSET_ADJUST"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa56649e:
            #simpleType:uint
            label = "PROC_LCO_TARGETS_MIN"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa56dc61:
            #simpleType:uint
            label = "MIN_POWER_CAP_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa59a4fa:
            #simpleType:uint
            label = "MAX_EXS_PER_PROC_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa59d641:
            #simpleType:uint
            label = "OMI_DL_GROUP_POS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa5a748f:
            #simpleType:uint
            label = "PROC_FABRIC_BROADCAST_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa5c1fbe:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa5ccc9a:
            #simpleType:uint
            label = "VPP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa607f58:
            #simpleType:uint
            label = "IO_XBUS_CHAN_EQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa608b2e:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa611583:
            #simpleType:uint
            label = "MEM_SI_PHY_DRV_IMP_DQ_DQS_PULL_UP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa6645a7:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VPP_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa6a5da4:
            #simpleType:uint
            label = "SAFE_MODE_NODDS_UPLIFT_0P5PCT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa6c0769:
            #simpleType:uint
            label = "FREQ_OMI_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa6c89f0:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TMAW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa71ccac:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa71dd22:
            #simpleType:uint
            label = "EFF_HYBRID_MEMORY_TYPE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa71e033:
            #simpleType:uint
            label = "MAX_DMI_PER_PROC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa74c8da:
            #simpleType:uint
            label = "TPM_POISONED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa78e807:
            #simpleType:uint
            label = "PROC_EPS_READ_CYCLES_T2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa78eaae:
            #simpleType:uint
            label = "WOV_UNDERV_VMIN_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa799fe9:
            #simpleType:uint
            label = "RCW48_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa7a6601:
            #simpleType:uint
            label = "WOF_ENABLE_FRATIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa7e62d3:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa7fc90e:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_3_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa813135:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa82e8ff:
            pass #complexType - skipping
        elif attrEnum == 0xa85a352:
            #simpleType:uint
            label = "WOV_OVERV_STEP_DECR_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa8672bd:
            #simpleType:uint
            label = "PROC_SMF_BAR_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa8b10e1:
            #simpleType:uint
            label = "PIB_I2C_REFCLOCK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xa8c5e49:
            #simpleType:uint
            label = "MEM_EFF_DIMM_RAW_CARD_DESIGN_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa8e207c:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC1_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa8ec5ac:
            #simpleType:uint
            label = "ODY_PSRO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xa90a6fa:
            pass #complexType - skipping
        elif attrEnum == 0xa914ec9:
            pass #complexType - skipping
        elif attrEnum == 0xa95efea:
            #simpleType:uint
            label = "WOF_INDEX_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa96afb3:
            #simpleType:uint
            label = "PROC_FABRIC_X_ATTACHED_CHIP_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa970ba4:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRTP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa982f98:
            #simpleType:uint
            label = "EFF_DRAM_TRAS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa99637f:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_DIFF_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa99b6ba:
            #simpleType:uint
            label = "ASSUME_SBE_QUIESCED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa9a7c39:
            #simpleType:uint
            label = "PROC_FABRIC_A_ADDR_DIS"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xa9d881f:
            #simpleType:enum
            label = "ENGINE_TYPE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("ENGINE_TYPE_NA")
            elif attr == 0x00000001:
                 traceEntry.append("ENGINE_TYPE_ENGINE_IIC")
            elif attr == 0x00000002:
                 traceEntry.append("ENGINE_TYPE_ENGINE_SCOM")
        elif attrEnum == 0xa9da15c:
            #simpleType:uint
            label = "GPU_SENSORS"
            traceEntry.append("[3][7]:")
            for x in range(21):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xa9e7355:
            #simpleType:uint
            label = "CHTM_HTMSC_IMA_EVENT_MASK_EN_D_PRE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa04632:
            #simpleType:uint
            label = "IOHS_LINK_SPLIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa1d410:
            #simpleType:uint
            label = "FREQ_PB_MHZ_POUNDV_FALLBACK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xaa2e048:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_2_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa3176d:
            #simpleType:uint
            label = "SBE_HBBL_EXCEPTION_INSTRUCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xaa3902b:
            #simpleType:uint
            label = "IO_OBUS_DCCAL_FLAGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa4803f:
            #simpleType:uint
            label = "OMI_FFE_PRE_CURSOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xaa54450:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_AL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa68a22:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC3X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa74969:
            #simpleType:uint
            label = "PROC_FORCE_MC_PLL_BANDSEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa89323:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_WB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xaa8cfef:
            #simpleType:uint
            label = "RCW0D_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaa9080d:
            #simpleType:uint
            label = "RESCLK_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaac24d5:
            #simpleType:uint
            label = "FREQ_PROC_REFCLOCK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xaadf350:
            #simpleType:uint
            label = "ODY_THERMAL_SENSOR_3_PREVIOUS_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0xab1f0d1:
            #simpleType:uint
            label = "SPPE_BOOTLOADER_MEASUREMENT_HASH"
            traceEntry.append("[64]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xab26dbf:
            #simpleType:uint
            label = "ADC_CHANNEL_SENSOR_NUMBERS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xab4c632:
            #simpleType:uint
            label = "OCMB_FW_UPDATE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xab67f8c:
            #simpleType:uint
            label = "ODY_SENSOR_POLLING_PERIOD_MS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xab70ca8:
            #simpleType:uint
            label = "PEC_IS_BIFURCATABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xab82746:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRRD_S"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xab8959f:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xab9b916:
            #simpleType:uint
            label = "MIN_MEM_UTILIZATION_THROTTLING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xabb5e9c:
            #simpleType:uint
            label = "WOV_UNDERV_STEP_DECR_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xabe1d3b:
            #simpleType:uint
            label = "HB_INITIATED_PM_RESET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xac0b556:
            #simpleType:uint
            label = "MEMCTRL_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xac2958b:
            #simpleType:uint
            label = "CLOCK_MUX11_NEST_DPLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xacc8025:
            #simpleType:uint
            label = "ICACHE_ASSOC_SETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xacca48f:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_CEILING_MHZ_ORIGINAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xad171df:
            #simpleType:uint
            label = "CEN_MSS_VOLT_AVDD_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xad366df:
            #simpleType:uint
            label = "BACKUP_MEASUREMENT_SEEPROM_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad3e4fe:
            #simpleType:uint
            label = "NEST_PLL_FREQ_BUCKETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad63b90:
            #simpleType:uint
            label = "SAFE_MODE_VOLTAGE_MV"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xad706f2:
            #simpleType:uint
            label = "CHECK_ATTN_AFTER_ISTEP_FAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad742c1:
            #simpleType:uint
            label = "RUNN_CORE_SEED_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad8243a:
            #simpleType:uint
            label = "HB_EXISTING_IMAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad86cfa:
            #simpleType:uint
            label = "IOHS_PLL_BUCKET"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xad8dd9f:
            #simpleType:uint
            label = "RCW05_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xadb2ae7:
            #simpleType:uint
            label = "ODY_PHY_DFIMRL_MARGIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xadddfcd:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_WRITEBACK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xae13b85:
            #simpleType:uint
            label = "MEM_EXP_RCD_SLEW_RATE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xae3040d:
            #simpleType:uint
            label = "PROC_PCIE_PCS_RX_VGA_CONTRL_REGISTER3"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xae3bc8f:
            #nativeType:EntityPath
            label = "PEER_PATH"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0xae5b915:
            #simpleType:uint
            label = "CORE_INSIDE_SPECIAL_WAKEUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xae84e31:
            #simpleType:uint
            label = "PM_SPIPSS_IN_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xae90c41:
            #simpleType:uint
            label = "IO_XBUS_GRP0_PRE_BAD_LANE_DATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xaf0a215:
            #simpleType:uint
            label = "RCW0A_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf0dc82:
            #simpleType:uint
            label = "RUNN_DO_CONFIG_CHECKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf1aa7c:
            #simpleType:uint
            label = "ODY_DRAMINIT_INTERNAL_FW_REVISION1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xaf57fed:
            #simpleType:uint
            label = "MSS_OCMB_ODY_OMI_CFG_ENDIAN_CTRL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf6e256:
            #simpleType:uint
            label = "INITIATED_PM_HALT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf7ed15:
            #simpleType:uint
            label = "RCW09_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf91cc7:
            #simpleType:uint
            label = "EFF_DRAM_TFAW"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xaf98ef4:
            #simpleType:uint
            label = "MEM_SI_DIMM_RCD_IBT_CKE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xafb2cd2:
            #simpleType:uint
            label = "MEMCTRL_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xafd5e02:
            #simpleType:uint
            label = "FAPINAME_UNIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xafeb5ce:
            #simpleType:uint
            label = "MSS_MRW_OCMB_CURRENT_CURVE_WITH_LIMIT"
            traceEntry.append("[25]:")
            for x in range(25):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xafef4d7:
            #simpleType:uint
            label = "RNG_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xaff2273:
            #simpleType:uint
            label = "FIELD_CORE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb0328d5:
            #simpleType:uint
            label = "MEM_SI_DIMM_RCD_IBT_CA"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb03f256:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_ODIC"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb069fed:
            #simpleType:uint
            label = "PROC_LCO_TARGETS_VECTOR"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb07c927:
            #simpleType:uint
            label = "MEM_DEVICE15_MPSM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb089450:
            #simpleType:uint
            label = "ODY_PHY_DEBUG_TRAIN_OPTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb0c96e5:
            #simpleType:uint
            label = "DDR5_DRAM_CK_ODT"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb11a217:
            #simpleType:uint
            label = "MSS_VOLT_DDR4_VDDR_SLOPE_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb165eec:
            #simpleType:uint
            label = "MSS_VOLT_VPP_INTERCEPT_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb1987de:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb1c3653:
            #simpleType:uint
            label = "DISABLE_HBBL_VECTORS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb1d0a53:
            #simpleType:uint
            label = "MEM_DDR5_GLOBAL_DFE_TAP3"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb1fab71:
            pass #complexType - skipping
        elif attrEnum == 0xb20c6e2:
            #simpleType:uint
            label = "DDR5_DRAM_CK_ODT_PER_DRAM"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb22f067:
            #simpleType:uint
            label = "OCS_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb257082:
            #simpleType:uint
            label = "MFG_TRACE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb25cde0:
            #simpleType:uint
            label = "PROC_INT_NVC_BAR_SET_DIVISION_SELECTOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb266895:
            #simpleType:uint
            label = "SBE_HBRT_PSU_PHYS_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb28a4f5:
            #simpleType:uint
            label = "PROC_MIRROR_BASES_ACK"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb28a8fb:
            #simpleType:uint
            label = "MEM_EFF_PACKAGE_RANK_MAP"
            traceEntry.append("[2][20]:")
            for x in range(40):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb2b25f6:
            #simpleType:uint
            label = "HTMSC_FILT_ADDR_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb2bacb2:
            #simpleType:uint
            label = "SYSTEM_WOF_LAB_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb2c6bc3:
            pass #complexType - skipping
        elif attrEnum == 0xb2d229a:
            pass
        elif attrEnum == 0xb2ffe8c:
            #simpleType:uint
            label = "MSS_UTIL_N_PER_MBA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb312257:
            #simpleType:uint
            label = "PCIE_32BIT_MMIO_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb33ecf6:
            #simpleType:uint
            label = "MSS_EXP_INTR_MASK_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb36fcfa:
            #simpleType:uint
            label = "MSS_OCMB_EXP_OMI_CFG_ENDIAN_CTRL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb397e66:
            #simpleType:uint
            label = "PROC_PCIE_FW_VERSION_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb3adef2:
            #simpleType:uint
            label = "RISK_LEVEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb3b1e66:
            #simpleType:uint
            label = "RCW01_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb3d7076:
            #simpleType:uint
            label = "RCW0E_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb3e8ad9:
            #simpleType:uint
            label = "MSS_MRW_PWR_SLOPE"
            traceEntry.append("[100]:")
            for x in range(100):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb436d4f:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_PERIOD_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb43f2fe:
            #simpleType:uint
            label = "MC_PLL_BUCKET"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb4bc1d3:
            #simpleType:uint
            label = "IO_OMI_CHANNEL_LOSS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb4f1718:
            #simpleType:uint
            label = "MSS_VCS_PROGRAM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb50fc28:
            #simpleType:uint
            label = "EXP_TOTAL_PWR_INTERCEPT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb52fb82:
            #simpleType:uint
            label = "MEM_EXP_SPD_TAA_MIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb541170:
            #simpleType:uint
            label = "SPPE_TARGET_STATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb5623a6:
            #simpleType:uint
            label = "MEM_DIMM_POS_METADATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb57d3ee:
            #simpleType:uint
            label = "PMIC_HEALTH_CHECK_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb5913fd:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VCS_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb5ade27:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb5afcd7:
            #nativeType:EntityPath
            label = "AFFINITY_PATH"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0xb5c4f8b:
            #simpleType:uint
            label = "MSS_SAFEMODE_DRAM_DATABUS_UTIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb5f758a:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SEQUENCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb630402:
            #simpleType:uint
            label = "MINI_EC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb63387a:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SEQUENCE_CFG0_R40"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb63ad57:
            #simpleType:uint
            label = "DDS_LARGE_DROOP_DETECT_ADJUST"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb65b981:
            #simpleType:uint
            label = "PROC_NHTM_BAR_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb69562d:
            #simpleType:uint
            label = "PM_SPIPSS_FRAME_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb697f6d:
            #simpleType:uint
            label = "IO_GROUNDED_LINKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb6ad76f:
            #simpleType:uint
            label = "HW543822_WAR_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb6cd941:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb6d6b39:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC3_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb6d7403:
            #simpleType:uint
            label = "ODY_TMPL_1_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb6f0cd7:
            #simpleType:uint
            label = "PHB_BASE_ADDRS"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb728460:
            #simpleType:uint
            label = "MEM_EFF_DRAM_PPR"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb728b91:
            #simpleType:enum
            label = "CDM_DOMAIN"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("CDM_DOMAIN_NONE")
            elif attr == 0x00000001:
                 traceEntry.append("CDM_DOMAIN_CPU")
            elif attr == 0x00000002:
                 traceEntry.append("CDM_DOMAIN_DIMM")
            elif attr == 0x00000003:
                 traceEntry.append("CDM_DOMAIN_FABRIC")
            elif attr == 0x00000004:
                 traceEntry.append("CDM_DOMAIN_MEM")
            elif attr == 0x00000005:
                 traceEntry.append("CDM_DOMAIN_IO")
            elif attr == 0x00000006:
                 traceEntry.append("CDM_DOMAIN_NODE")
            elif attr == 0x00000007:
                 traceEntry.append("CDM_DOMAIN_CLOCK")
            elif attr == 0x00000008:
                 traceEntry.append("CDM_DOMAIN_PSI")
            elif attr == 0x00000009:
                 traceEntry.append("CDM_DOMAIN_FSP")
            elif attr == 0x0000000A:
                 traceEntry.append("CDM_DOMAIN_SECURITY")
            elif attr == 0x0000000B:
                 traceEntry.append("CDM_DOMAIN_ALL")
        elif attrEnum == 0xb78c1f9:
            #simpleType:uint
            label = "IO_XBUS_GRP1_PRE_BAD_LANE_DATA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb7b1ac5:
            #simpleType:uint
            label = "MEM_VCS_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xb7dddfb:
            #simpleType:uint
            label = "MRW_HW_MIRRORING_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb812834:
            #simpleType:uint
            label = "BACKUP_SEEPROM_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb84e7b5:
            #simpleType:uint
            label = "HTMSC_FILT_SCOPE_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb88d1cf:
            #simpleType:uint
            label = "MSS_OCMB_EXP_STRUCT_ENDIAN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb8cb525:
            #simpleType:uint
            label = "OCMB_IGNORE_SCOM_CHECK_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb8fa011:
            #simpleType:uint
            label = "TPM_ROLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb91f5de:
            #simpleType:uint
            label = "PROC_EFF_FABRIC_CHIP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9270af:
            #simpleType:uint
            label = "PROC_INT_NVPG_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb93929e:
            #simpleType:uint
            label = "SYSTEM_WOV_OVERV_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb96ce6b:
            #simpleType:uint
            label = "PROC_SOCKET_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xb973ab4:
            #simpleType:uint
            label = "I2C_INHIBIT_DIAGNOSTIC_RESET_ENGINE_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9adbfd:
            #simpleType:uint
            label = "MEM_DDR5_WR_CRC_AUTODISABLE_THRESHOLD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9afeb8:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_PHASE_COMB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9c0fc3:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9cc761:
            #simpleType:uint
            label = "NHTM_CTRL_MARK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9dc486:
            #simpleType:uint
            label = "MRW_L2_INCREASE_JITTER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xb9ee432:
            #simpleType:uint
            label = "PROC_MIRROR_BASES"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xb9ee451:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xba10231:
            #simpleType:uint
            label = "PROC_L3_HASH_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xba49a18:
            #simpleType:uint
            label = "ADC_CHANNEL_FUNC_IDS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xba4cb42:
            #simpleType:uint
            label = "PLCK_IPL_ATTR_OVERRIDES_EXIST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xba62227:
            #simpleType:uint
            label = "MEM_EXP_INIT_VREF_DQ"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xba6f1c6:
            pass #complexType - skipping
        elif attrEnum == 0xba8abbe:
            #simpleType:uint
            label = "SBE_IMAGE_MINIMUM_VALID_ECS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbaa5d46:
            #simpleType:uint
            label = "MSS_CENT_AVDD_SLOPE_INACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbac5402:
            #simpleType:uint
            label = "SERIAL_NUMBER"
            traceEntry.append("[18]:")
            for x in range(18):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbb0ac42:
            #simpleType:uint
            label = "MSS_CENT_AVDD_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbb36ec8:
            #simpleType:uint
            label = "USE_PIPE_FIFO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbb5d3e9:
            #simpleType:uint
            label = "PROC_EFF_FABRIC_GROUP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbb90f0a:
            #simpleType:uint
            label = "PGPE_HCODE_FUNCTION_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbbb7d6f:
            #simpleType:uint
            label = "PROC_INT_NVPG_BAR_SET_DIVISION_SELECTOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbbd2eef:
            #simpleType:uint
            label = "ODY_DRAMINIT_INTERNAL_FW_REVISION0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xbbf242e:
            #simpleType:uint
            label = "IO_X_MFG_MIN_EYE_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbc265b8:
            #simpleType:uint
            label = "OMI_TX_POST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbc51273:
            #simpleType:uint
            label = "MSS_MRW_OCMB_PWR_SLOPE"
            traceEntry.append("[50]:")
            for x in range(50):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xbc5137d:
            #simpleType:uint
            label = "THROTTLE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbc55176:
            #simpleType:uint
            label = "SUPPORTED_STOP_STATES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbc8d08b:
            pass #complexType - skipping
        elif attrEnum == 0xbc9b354:
            #simpleType:enum
            label = "SYS_CLOCK_DECONFIG_STATE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("SYS_CLOCK_DECONFIG_STATE_NO_DECONFIG")
            elif attr == 0x00000001:
                 traceEntry.append("SYS_CLOCK_DECONFIG_STATE_A_DECONFIG")
            elif attr == 0x00000002:
                 traceEntry.append("SYS_CLOCK_DECONFIG_STATE_B_DECONFIG")
            elif attr == 0x00000003:
                 traceEntry.append("SYS_CLOCK_DECONFIG_STATE_ALL_DECONFIG")
        elif attrEnum == 0xbca8078:
            #simpleType:uint
            label = "IO_GROUNDED_CONTROLLERS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xbcc0968:
            #simpleType:uint
            label = "EFF_DRAM_WIDTH"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbcf856d:
            #simpleType:uint
            label = "PROC_FSP_MMIO_MASK_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbd13798:
            #simpleType:uint
            label = "MSS_MRW_REFRESH_RATE_REQUEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbd313d5:
            #simpleType:uint
            label = "HTMSC_FILT_STOP_CYCLES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbd6da05:
            #simpleType:uint
            label = "FREQ_IO_REFCLOCK_KHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbd8bf3c:
            #simpleType:uint
            label = "MEM_EFF_VOLT_VPP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbdb2023:
            #simpleType:uint
            label = "OMI_SPREAD_SPECTRUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbdb835c:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC1_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbdbbd24:
            #simpleType:uint
            label = "OCMB_FORCE_IMAGE_SYNC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbdd1f8c:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC7X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbde3ab9:
            #simpleType:uint
            label = "USE_TCES_FOR_DMAS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbdf333e:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbe0602d:
            #simpleType:uint
            label = "MEM_EFF_DDR5_MEM_PORT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbe06c50:
            #simpleType:uint
            label = "MSS_MRW_THERMAL_MEMORY_POWER_LIMIT"
            traceEntry.append("[10]:")
            for x in range(10):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xbe4ab2c:
            #simpleType:uint
            label = "CALCULATED_MAX_SYS_POWER_EXCLUDING_GPUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xbe4e0de:
            #simpleType:uint
            label = "SIM_CHIPLET_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xbe90420:
            #simpleType:uint
            label = "CME_INSTRUCTION_TRACE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbe9c5f4:
            #simpleType:uint
            label = "DDR5_EN_TX_DM_PREAMBLE_PATTERN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbea907f:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC2X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbeb4dd6:
            #simpleType:uint
            label = "SBE_RUNTIME_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbec986e:
            #simpleType:uint
            label = "MEM_EFF_MDS_DDIMM"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbf0610c:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbf11ec0:
            #simpleType:uint
            label = "HB_RSV_MEM_SIZE_MB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xbf1b8d3:
            #simpleType:uint
            label = "IO_IOHS_CHANNEL_LOSS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbfa8f5f:
            #simpleType:uint
            label = "RCW0D_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbfae9a6:
            #simpleType:uint
            label = "WOF_ALTITUDE_TEMP_ADJUSTMENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xbfb0e7b:
            #simpleType:uint
            label = "SBE_HBRT_PSU_VIRT_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xbfcaf43:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbfccf0c:
            #simpleType:uint
            label = "RESOURCE_IS_CRITICAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xbfe70e7:
            #simpleType:enum
            label = "CHIP_VER"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000010:
                 traceEntry.append("CHIP_VER_DD10")
            elif attr == 0x00000011:
                 traceEntry.append("CHIP_VER_DD11")
            elif attr == 0x00000020:
                 traceEntry.append("CHIP_VER_DD20")
            elif attr == 0x00000021:
                 traceEntry.append("CHIP_VER_DD21")
        elif attrEnum == 0xc001363:
            #simpleType:uint
            label = "PROC_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc03336d:
            #simpleType:uint
            label = "ODY_SPECIAL_OFFSET_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc03d18e:
            #simpleType:uint
            label = "PROC_PCIE_BAR_ENABLE"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc070edb:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_3_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc08f9e2:
            #simpleType:uint
            label = "MEM_EFF_HYBRID_MEMORY_TYPE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc0b9ce3:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc0bb633:
            #simpleType:uint
            label = "PROC_FABRIC_A_LINK_DELAY"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc0f898a:
            #simpleType:uint
            label = "OPTICS_CONFIG_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc0f9335:
            #simpleType:uint
            label = "MSS_MRW_PWR_INTERCEPT"
            traceEntry.append("[100]:")
            for x in range(100):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc110745:
            #simpleType:uint
            label = "WOF_THROTTLE_CONTROL_KP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc11b0c7:
            #simpleType:uint
            label = "MEM_EFF_DRAM_MFG_ID"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc11d96f:
            #simpleType:uint
            label = "RCW40_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc122ecf:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SEQUENCE_CFG3_R43"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc13aa28:
            #simpleType:uint
            label = "CLOCK_PLL_MUX_TOD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc14452f:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc14fc3f:
            pass #not readable
        elif attrEnum == 0xc1598bd:
            #simpleType:uint
            label = "FREQ_CORE_NOMINAL_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc17a0dc:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc18acac:
            #simpleType:uint
            label = "MSS_EXP_RESP_CRC_ERROR_CLEAR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc18c43e:
            #simpleType:uint
            label = "DDR5_DRAM_VREFCA"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc18e8f1:
            #simpleType:enum
            label = "CLASS"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("CLASS_NA")
            elif attr == 0x00000001:
                 traceEntry.append("CLASS_CARD")
            elif attr == 0x00000002:
                 traceEntry.append("CLASS_ENC")
            elif attr == 0x00000003:
                 traceEntry.append("CLASS_CHIP")
            elif attr == 0x00000004:
                 traceEntry.append("CLASS_UNIT")
            elif attr == 0x00000005:
                 traceEntry.append("CLASS_DEV")
            elif attr == 0x00000006:
                 traceEntry.append("CLASS_SYS")
            elif attr == 0x00000007:
                 traceEntry.append("CLASS_LOGICAL_CARD")
            elif attr == 0x00000008:
                 traceEntry.append("CLASS_BATTERY")
            elif attr == 0x00000009:
                 traceEntry.append("CLASS_LED")
            elif attr == 0x0000000A:
                 traceEntry.append("CLASS_SP")
            elif attr == 0x0000000B:
                 traceEntry.append("CLASS_ASIC")
            elif attr == 0x0000000C:
                 traceEntry.append("CLASS_MAX")
        elif attrEnum == 0xc1dab35:
            pass
        elif attrEnum == 0xc20758d:
            #simpleType:uint
            label = "MEM_SI_DRAM_RTT_WR"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc2163fb:
            #simpleType:uint
            label = "RCW47_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc278ed9:
            #simpleType:uint
            label = "MEM_EFF_PRIM_DIE_COUNT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc2a8db1:
            #simpleType:uint
            label = "PBAF_LFIRMASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc2f06b5:
            #simpleType:uint
            label = "WOF_FREQUENCY_UPLIFT_SELECTED"
            traceEntry.append("[22][13]:")
            for x in range(286):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc2fdc31:
            #simpleType:uint
            label = "PROC_PCIE_PHB_REGISTER_BASE_ADDR_OFFSET"
            traceEntry.append("[6]:")
            for x in range(6):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc315c52:
            #simpleType:uint
            label = "PM_GLOBAL_FIR_TRACE_EN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc352d05:
            #simpleType:uint
            label = "HTMSC_CTRL_RUN_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc36edac:
            #simpleType:uint
            label = "DDR5_N_MAX_MEM_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc37b3da:
            #simpleType:uint
            label = "FREQ_IOHS_LINK_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc3b3e7b:
            #simpleType:uint
            label = "MEM_SI_MC_DRV_SLEW_RATE_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc3c0eb5:
            #simpleType:uint
            label = "DYNAMIC_INIT_FEATURE_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc3e64a1:
            #simpleType:uint
            label = "PROC_MEM_SIZES_ACK"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc3f35bf:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc406bf3:
            #simpleType:uint
            label = "MEM_EFF_VOLT_VDDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc412634:
            #simpleType:uint
            label = "ODY_DRAMINIT_FW_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc4230d1:
            #simpleType:uint
            label = "MEM_EXP_FIRMWARE_EMULATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc44c3e5:
            #simpleType:uint
            label = "LMB_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc462253:
            #simpleType:uint
            label = "SAVED_STATE_UINT8"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc46febc:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC05"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc470648:
            #simpleType:uint
            label = "MSS_CHECK_FOR_READY_TIMEOUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc476bf6:
            #simpleType:uint
            label = "ODY_ENABLE_US_TMPL_5"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc4848f0:
            #simpleType:uint
            label = "DDR5_MC_EXT_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc4941e4:
            #simpleType:uint
            label = "PROC_NHTM_BAR_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xc498800:
            #simpleType:uint
            label = "NEST_VCS_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc4be98e:
            #simpleType:uint
            label = "MSS_EXP_COMM_STATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc4ced6c:
            #simpleType:uint
            label = "EXTEND_TPM_MEAS_TO_OTHER_NODES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc4fcb9a:
            #simpleType:uint
            label = "PROC_PCIE_PCS_RX_PHASE_ROTATOR_CNTL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc538c17:
            #simpleType:enum
            label = "EEPROM_VPD_ACCESSIBILITY"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("EEPROM_VPD_ACCESSIBILITY_NONE_DISABLED")
            elif attr == 0x00000001:
                 traceEntry.append("EEPROM_VPD_ACCESSIBILITY_CACHE_DISABLED")
            elif attr == 0x00000002:
                 traceEntry.append("EEPROM_VPD_ACCESSIBILITY_PRIMARY_DISABLED")
            elif attr == 0x00000004:
                 traceEntry.append("EEPROM_VPD_ACCESSIBILITY_SECONDARY_DISABLED")
            elif attr == 0x00000008:
                 traceEntry.append("EEPROM_VPD_ACCESSIBILITY_LAST_DISABLED")
        elif attrEnum == 0xc593c05:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_SECOND_AVAIL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc5bf44b:
            #simpleType:uint
            label = "MEM_EFF_MODULE_MFG_ID"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc5d939e:
            pass
        elif attrEnum == 0xc60a499:
            #simpleType:uint
            label = "DDR5_DRAM_ODTLOFF_RD_NT"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc610fe3:
            #simpleType:uint
            label = "OBUS_SLOT_INDEX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc62f1ae:
            #simpleType:uint
            label = "MSS_MRW_VDD_OFFSET_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc635854:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc63ee6f:
            #simpleType:uint
            label = "ENLARGED_IO_SLOT_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc658f74:
            #simpleType:uint
            label = "PROC_INT_NVC_BAR_PAGE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc666c00:
            #simpleType:uint
            label = "MSS_MEM_MC_IN_GROUP"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc667245:
            #simpleType:uint
            label = "I2C_INHIBIT_DIAGNOSTIC_RESET_ENGINE_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc687d1e:
            #simpleType:uint
            label = "SYSTEM_MMA_POWEROFF_DELAY_POWEROF2_MS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc68f5ea:
            #simpleType:uint
            label = "MEM_SI_DRAM_DRV_IMP_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc6d3718:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWB_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc6d6b45:
            #simpleType:uint
            label = "DDR5_DRAM_ECS_IN_SELF_REFRESH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc6dfefe:
            #simpleType:uint
            label = "HDAT_HBRT_NUM_SECTIONS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc6e1174:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc7014d3:
            #simpleType:uint
            label = "HALT_ON_BMC_PLDM_RESET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc710685:
            #simpleType:uint
            label = "AVDD_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc73cd4e:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VDDR_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc76fe71:
            #simpleType:uint
            label = "MSS_VOLT_VCS_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc774921:
            #simpleType:uint
            label = "BOOT_FLAGS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc77c618:
            #simpleType:uint
            label = "MSS_EXP_RESP_READ_DBI"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc784cff:
            #simpleType:uint
            label = "MEM_EFF_ARDPTRINITVALOVR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc789762:
            #simpleType:uint
            label = "ADC_CHANNEL_OFFSETS"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc794239:
            #simpleType:uint
            label = "ASYNC_NEST_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc7a1d47:
            #simpleType:uint
            label = "LINK_SPEED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xc7b1e3f:
            #simpleType:uint
            label = "SBE_NUM_IMAGES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc7bc372:
            #simpleType:uint
            label = "SCRATCH_UINT8_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc7d9261:
            #simpleType:uint
            label = "FUSED_CORE_MODE_HB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc7deda5:
            #simpleType:uint
            label = "QME_BOOT_CONTROL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc84f972:
            #simpleType:uint
            label = "MC_EXT_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc87684a:
            #simpleType:uint
            label = "MSS_OCMB_DISABLE_THERM_INIT_READ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc88c82f:
            #simpleType:uint
            label = "IBSCOM_ENABLE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc8ab5a1:
            #simpleType:uint
            label = "EXTERNAL_VRM_TRANSITION_START_NS"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc8bd195:
            #simpleType:uint
            label = "INSIDE_SPECIAL_WAKEUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc8c49e7:
            pass
        elif attrEnum == 0xc8c5949:
            #simpleType:uint
            label = "SBE_NUM_CAPABILITIES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc95df70:
            #simpleType:uint
            label = "QME_STOP_PHANTOM_HALT_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc965d72:
            #simpleType:uint
            label = "OMI_BIST_DAC_TEST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc96a9e2:
            #simpleType:uint
            label = "DUMP_STOP_INFO_SUPPRESS_ERROR_TRACE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9759f9:
            #simpleType:uint
            label = "HDAT_I2C_ENGINE"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc976513:
            #simpleType:uint
            label = "CEN_MSS_VOLT_AVDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xc9b42ea:
            #simpleType:uint
            label = "MSS_EXP_CDR_BW_OVERRIDE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9b93c9:
            #simpleType:uint
            label = "EFF_DRAM_TRCD"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9c2d97:
            #simpleType:uint
            label = "MSS_EXP_RESP_MPR_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9cddc6:
            #simpleType:uint
            label = "DCADJ_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9dddb2:
            #simpleType:uint
            label = "MEM_EFF_DRAM_BANK_GROUP_BITS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xc9f6432:
            #simpleType:uint
            label = "PHYS_PRES_REQUEST_OPEN_WINDOW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xca00099:
            #simpleType:uint
            label = "WOF_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xca0e8ed:
            #simpleType:uint
            label = "FRU_NUMBER"
            traceEntry.append("[48]:")
            for x in range(48):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xca20b66:
            #simpleType:uint
            label = "RCW44_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xca2de0a:
            #simpleType:uint
            label = "ULTRA_TURBO_FREQ_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xca985e0:
            #simpleType:uint
            label = "QME_HCODE_BLOCK_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xca99702:
            #simpleType:uint
            label = "CURRENT_SBE_HRESET_STATUS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xcaa7f91:
            #simpleType:uint
            label = "MC_DRAM_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcab73ca:
            #simpleType:uint
            label = "FREQ_CP_REFCLOCK_KHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcac6a4c:
            #simpleType:uint
            label = "MSS_EXP_RESP_VREF_DQ_TRAIN_ENABLE"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcac816f:
            #simpleType:uint
            label = "HOMER_PHYS_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xcacfa03:
            #simpleType:uint
            label = "HB_TPM_INIT_ATTEMPTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcb12e02:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcb1fddb:
            #simpleType:uint
            label = "DEAD_CORE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcb72894:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_COUNT_THRESHOLD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xcb749b3:
            #simpleType:uint
            label = "TPM_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcb7b544:
            #simpleType:uint
            label = "EQ_INSIDE_SPECIAL_WAKEUP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcb914fe:
            #simpleType:uint
            label = "PDA_CAPTURED_THREAD_REG_ARRAY_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xcb9c4fa:
            #simpleType:uint
            label = "OMI_FFE_SETTINGS_COMMAND"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcba1600:
            pass #complexType - skipping
        elif attrEnum == 0xcbd7ed0:
            #simpleType:uint
            label = "MNFG_XBUS_MIN_EYE_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcbf0ce6:
            #simpleType:uint
            label = "MRW_DDR4_VDDR_MAX_LIMIT_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcbf1228:
            #simpleType:uint
            label = "MEM_EFF_ARDPTRINITVAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcbf6008:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_TEMP_THRESHOLD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcc07b62:
            #simpleType:uint
            label = "AVSBUS_FREQUENCY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcc1d4bc:
            #simpleType:uint
            label = "MSS_VOLT_DDR3_VDDR_INTERCEPT_EFF_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcc28df8:
            #simpleType:uint
            label = "MEM_VDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcc3d988:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_CEILING_MHZ_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcc8bf2b:
            #simpleType:uint
            label = "AVSBUS_RAIL"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcc9dffd:
            #simpleType:uint
            label = "PROC_PCIE_LANE_REVERSAL_BASE"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcca10d0:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SEQUENCE_CFG0_R40"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xccc15e8:
            #simpleType:uint
            label = "MNFG_DMI_MIN_EYE_HEIGHT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcced88f:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC01"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd0fc4e:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TWTR_S"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd1457b:
            #simpleType:uint
            label = "SBE_BOOT_SIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd35acb:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC6X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd4cd7a:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd7be76:
            #simpleType:uint
            label = "PROC_ENABLE_DL_TMPL_4"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcd97b51:
            #simpleType:uint
            label = "MASTER_CORE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcdbfb30:
            pass #complexType - skipping
        elif attrEnum == 0xcde0848:
            #simpleType:uint
            label = "HTMSC_TTYPEFILT_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce01813:
            #simpleType:uint
            label = "MGC_LOAD_SOURCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce0acef:
            #simpleType:uint
            label = "PRESERVE_MDC_PARTITION_VPD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce16d63:
            #simpleType:uint
            label = "QME_STATE_LOSS_CORES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xce3e5e5:
            #simpleType:uint
            label = "HTMSC_CRESPFILT_INVERT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce4b78c:
            #simpleType:uint
            label = "CP_PLLIOFLT_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce6f012:
            #simpleType:uint
            label = "DIMM_POWER_UTIL"
            traceEntry.append("[12]:")
            for x in range(12):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xce7d97c:
            #simpleType:uint
            label = "HTMSC_FILT_ADDR_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xce99337:
            #simpleType:uint
            label = "ODY_ENABLE_US_TMPL_B"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcea118a:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC7X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcf10968:
            #simpleType:uint
            label = "PM_COMPLEX_LOAD_REQ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcf18598:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcf1e319:
            #simpleType:uint
            label = "IO_TANK_PLL_BYPASS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcf3611f:
            #simpleType:uint
            label = "MEM_EFF_MEMALERTEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcf74a58:
            pass #not readable
        elif attrEnum == 0xcf85c28:
            #simpleType:uint
            label = "CHTM_MODE_CORE_WRAP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcfaaa85:
            #simpleType:uint
            label = "OVERSUB_MEM_POWER"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xcfadec6:
            pass #complexType - skipping
        elif attrEnum == 0xcfcfb46:
            #simpleType:uint
            label = "XSTOP_ON_SPATTN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcfd9488:
            #simpleType:uint
            label = "PROC_L2_HASH_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xcfe5811:
            #simpleType:uint
            label = "MEM_EFF_MODULE_THERMAL_SENSORS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd0167e2:
            #simpleType:uint
            label = "HDAT_HBRT_SECTION_SIZE"
            traceEntry.append("[9]:")
            for x in range(9):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xd05f482:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC2_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd07262c:
            #simpleType:uint
            label = "RCW09_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd099bb4:
            #simpleType:uint
            label = "SYSTEM_PDW_VALIDATION_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd09f4f3:
            #simpleType:uint
            label = "MEM_SI_VREF_DRAM_WR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd0b06da:
            #simpleType:uint
            label = "RCW45_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd0b5036:
            #simpleType:uint
            label = "IO_OBUS_TX_FFE_PRECURSOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd0c86c6:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd0ddacf:
            #simpleType:uint
            label = "QME_BROADSIDE_SCAN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd10ca53:
            #simpleType:uint
            label = "HTMGT_SAVED_POWER_LIMIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd12d8c8:
            #simpleType:uint
            label = "OCC_COMMON_AREA_PHYS_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xd1862ee:
            #simpleType:uint
            label = "CALCULATED_PROC_MEMORY_POWER_DROP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xd1e26f4:
            pass #complexType - skipping
        elif attrEnum == 0xd22cf5f:
            #simpleType:uint
            label = "ODY_PHY_ENABLED_DQ_CHB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd2401e6:
            pass
        elif attrEnum == 0xd2942c8:
            #simpleType:uint
            label = "DDS_BIAS_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd2bd910:
            pass #complexType - skipping
        elif attrEnum == 0xd2ee0c7:
            #simpleType:uint
            label = "VDM_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd301294:
            #simpleType:uint
            label = "CPU_ATTR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd304550:
            #simpleType:uint
            label = "RCW05_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd3087be:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWB_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd34bb04:
            #simpleType:uint
            label = "MSS_RTT_NOM_OVERRIDE_DISABLE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd3704fd:
            #simpleType:uint
            label = "MEM_EFF_SPD_REVISION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd3a4b37:
            #simpleType:uint
            label = "EXPLR_PASID_LEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd3dcb59:
            #simpleType:uint
            label = "MEM_EFF_ATXDLY_A"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd415c67:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F1RC4X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd43ef5c:
            #nativeType:EntityPath
            label = "POWER_PATH"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0xd463c27:
            #simpleType:uint
            label = "STOP_LEVELS_DISABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xd4805eb:
            #simpleType:uint
            label = "PCIE_NVME_CCIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xd484fd1:
            #simpleType:uint
            label = "HTMSC_FILT_STOP_ON_MATCH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd4a3c59:
            #simpleType:uint
            label = "MSS_OCMB_EXP_BOOT_CONFIG_TRANSPORT_LAYER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd4a475d:
            #simpleType:uint
            label = "MEM_VPP_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd4bbddc:
            #simpleType:uint
            label = "MSS_MRW_DIMM_POWER_CURVE_PERCENT_UPLIFT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd513657:
            #simpleType:uint
            label = "MSS_VOLT_VPP_INTERCEPT_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd53c70b:
            #simpleType:uint
            label = "WOF_TABLE_OVERRIDE_FF"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xd54b4ac:
            #simpleType:uint
            label = "IO_OBUS_TX_MARGIN_RATIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd55bf40:
            #simpleType:uint
            label = "CEN_MSS_VOLT_VDD_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd55e4f9:
            #simpleType:uint
            label = "SCAN0_SCAN_RATIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd56672f:
            #simpleType:uint
            label = "WOV_OVERV_WITH_DDS_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd5741a4:
            #simpleType:uint
            label = "DDS_DPLL_FMIN_FAST_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd5c924a:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F0RC0E"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd5d5632:
            #simpleType:uint
            label = "SYS_CLK_NE_TERMINATION_SITE_PREVENT_SYNC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd5dfc35:
            #simpleType:uint
            label = "SBE_RUNTIME_CODELEVEL"
            traceEntry.append("[64]:")
            for x in range(64):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd6007fa:
            #simpleType:uint
            label = "FREQ_PROC_IOHS_MHZ"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd6045da:
            #simpleType:uint
            label = "EFF_DRAM_TRRD_S"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd60cf0a:
            #simpleType:uint
            label = "PROC_FABRIC_X_LINK_DELAY"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd60cfd7:
            #simpleType:enum
            label = "EECACHE_VPD_STATE"
            attr, i=intConcat(data, i, i+4)
            if attr == 0x00000000:
                 traceEntry.append("EECACHE_VPD_STATE_VPD_GOOD")
            elif attr == 0x00000001:
                 traceEntry.append("EECACHE_VPD_STATE_VPD_NEEDS_REFRESH")
        elif attrEnum == 0xd66b345:
            #simpleType:uint
            label = "CORE_HASCLOCKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd6af0b6:
            #simpleType:uint
            label = "PROC_FABRIC_TOPOLOGY_ID_TABLE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd75007e:
            #simpleType:uint
            label = "DATA_CACHE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd754024:
            #simpleType:uint
            label = "HTMSC_FILT_PORT_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7735da:
            #simpleType:uint
            label = "SBE_HANDLES_SMP_TPM_EXTEND"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd77c5ad:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC0_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7a3f4c:
            #simpleType:uint
            label = "HTMSC_FILT_TTAG_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd7aa47b:
            #simpleType:uint
            label = "PROC_MC_PLL_BANDSEL_OVERRIDE"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7c305f:
            #simpleType:uint
            label = "WOF_PITCH_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7d9779:
            #simpleType:uint
            label = "VIO_SET_POINT_MV"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xd7e2c04:
            #simpleType:uint
            label = "SYSTEM_WOF_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7ed561:
            #simpleType:uint
            label = "RCW00_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd7f8bcd:
            #simpleType:uint
            label = "MSS_MRW_VDDR_OFFSET_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd820de6:
            #simpleType:uint
            label = "ODY_SHRT_BACKOFF_TIMER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd82c5bd:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC03"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd82d29a:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_RTT_PARK"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd837641:
            #simpleType:uint
            label = "PROC_PCIE_NUM_PEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd84795a:
            #simpleType:uint
            label = "PROC_FABRIC_CORE_FREQ_RATIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd84c572:
            pass #complexType - skipping
        elif attrEnum == 0xd86ab4c:
            #simpleType:uint
            label = "MSS_EXP_RESP_CA_PARITY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd881d9a:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd8add56:
            #simpleType:uint
            label = "SKIP_HW_VREF_CAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd8af594:
            #simpleType:uint
            label = "HOTPLUG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd8dde00:
            #simpleType:uint
            label = "FSP_BAR_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xd940b8a:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd94832a:
            #simpleType:uint
            label = "CLOCK_MUX0C_RCS_PLL_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd94ff32:
            #simpleType:uint
            label = "ODY_ENABLE_US_TMPL_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd969845:
            #simpleType:uint
            label = "MEM_SI_MC_RCV_EQ_DQ_DQS"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd990683:
            #simpleType:uint
            label = "CORE_LPAR_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd9976e1:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWB_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd9a9f4f:
            #simpleType:uint
            label = "ODY_RUNTIME_MEM_THROTTLED_N_COMMANDS_PER_SLOT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xd9b9ad9:
            #simpleType:uint
            label = "SPPE_I2C_DEV_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd9da851:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xd9db2d5:
            #simpleType:uint
            label = "IO_O_MFG_MIN_EYE_WIDTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xda1809c:
            #simpleType:uint
            label = "RCW0E_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xda1ed59:
            #simpleType:uint
            label = "LOCATION_PN_SN_CCIN_MAP"
            traceEntry.append("[146]:")
            for x in range(146):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xda376c3:
            #simpleType:uint
            label = "EXP_RUNTIME_MEM_THROTTLED_N_COMMANDS_PER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xda95638:
            #simpleType:uint
            label = "MEM_EFF_LOGICAL_RANKS_PER_DIMM"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdab5f58:
            #simpleType:uint
            label = "PROC_PCIE_LANE_EQUALIZATION_GEN4"
            traceEntry.append("[16]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xdadf803:
            #simpleType:uint
            label = "ODY_DRAMINIT_STEP_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdaf3379:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_2_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdafb56e:
            #simpleType:uint
            label = "FREQ_IOHS_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdb283e0:
            #simpleType:uint
            label = "NHTM_HTMSC_MODE_WRITETOIO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdb29f50:
            #simpleType:uint
            label = "N_PLUS_ONE_N_PER_SLOT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xdb3e968:
            #simpleType:uint
            label = "RCW0A_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdb4e40c:
            #simpleType:uint
            label = "FABRIC_GROUP_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdb65bdd:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdb89c57:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_RT_SOFT_CE_TH_ALGO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdba3bba:
            #simpleType:uint
            label = "PROC_SELECT_BOOT_SEEPROM_IMAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdbe5186:
            pass #complexType - skipping
        elif attrEnum == 0xdbfb744:
            #simpleType:uint
            label = "PROC_VRM_VOFFSET_UV"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdbffc50:
            #simpleType:uint
            label = "L3_CACHE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdc00d2a:
            #simpleType:uint
            label = "IS_MPIPL_HB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdc339a7:
            #simpleType:uint
            label = "MEM_EFF_DRAM_ROW_BITS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdc82830:
            #simpleType:uint
            label = "FREQ_SYSTEM_CORE_FLOOR_MHZ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdcbd688:
            #simpleType:uint
            label = "MSS_VOLT_VDD_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdcc378b:
            #simpleType:uint
            label = "ODY_UPPERNIBBLE_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdceaabb:
            #simpleType:uint
            label = "MEM_DDR5_DFE_SIGN_BIT"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdcf9224:
            #simpleType:uint
            label = "PM_HALT_FFDC_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdcfdaa2:
            #simpleType:uint
            label = "MEM_EFF_Z_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdd7fb4a:
            #simpleType:uint
            label = "DYNAMIC_IO_DRAWER_ATTACHMENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdd84994:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWA_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xddbc151:
            #simpleType:uint
            label = "ODY_THERMAL_SENSOR_1_PREVIOUS_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0xddd3f7e:
            #simpleType:uint
            label = "EXP_MEM_WATT_TARGET"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdde9311:
            #simpleType:uint
            label = "MRW_DDR3_VDDR_MAX_LIMIT_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdded48e:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_SECOND_I2C_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde00084:
            #simpleType:uint
            label = "RCW47_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde03ed3:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_SECOND_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde075fd:
            #simpleType:uint
            label = "MEM_EFF_DDR5_RXEN_ADJ"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde2c10c:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC0_SWD_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde419d0:
            #simpleType:uint
            label = "PROC_DPLL_DIVIDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xde60dc4:
            #simpleType:uint
            label = "EXPLR_TMPL_1_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde7bca9:
            #simpleType:uint
            label = "MEM_DDR5_GLOBAL_DFE_TAP2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xde81674:
            pass #not readable
        elif attrEnum == 0xde94642:
            #simpleType:uint
            label = "PROC_IO_DVFS_TEMP_DELTA_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xded6f91:
            #simpleType:uint
            label = "ODY_DQS_TRACKING_PERIOD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdeda910:
            pass
        elif attrEnum == 0xdee8fd0:
            #simpleType:uint
            label = "PROC_MEMORY_ENCRYPTION_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf06b22:
            #simpleType:uint
            label = "MEM_DDR5_WR_CRC_AUTODISABLE_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf0d4d9:
            #simpleType:uint
            label = "OP_TRACE_LITE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf28a49:
            #simpleType:uint
            label = "RCW08_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf2b36c:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TFAW"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf434f4:
            #simpleType:uint
            label = "INDEX_POWER_LIMIT_CONFIG"
            traceEntry.append("[24]:")
            for x in range(24):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdf5ac38:
            #simpleType:uint
            label = "RCW48_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf66855:
            #simpleType:uint
            label = "PROC_TMPL_4_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf6bde0:
            #simpleType:uint
            label = "HTMSC_CTRL_CHIP0_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdf90286:
            #simpleType:uint
            label = "ENABLED_THREADS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xdfb2703:
            #simpleType:uint
            label = "MSS_EXP_RESP_VREF_DQ_TRAIN_RANGE"
            traceEntry.append("[2][4][20]:")
            for x in range(160):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xdfbb097:
            #simpleType:uint
            label = "MSS_CENT_VCS_SLOPE_ACTIVE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xdfbd498:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe06e33e:
            #simpleType:uint
            label = "HTMSC_FILT_PORT_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe0f5735:
            #simpleType:uint
            label = "MC_EXT_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe153bec:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC0B"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe1b47d7:
            #simpleType:uint
            label = "WOF_TABLE_LID_NUMBER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe1c520c:
            #simpleType:uint
            label = "SPPE_I2C_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe1e81d1:
            #simpleType:uint
            label = "PROC_IO_ERROR_TEMP_DELTA_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe1ec481:
            #simpleType:uint
            label = "MISC_SYSTEM_COMPONENTS_MAX_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xe20c541:
            #simpleType:uint
            label = "SBE_VERSION_INFO"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe226c94:
            #simpleType:uint
            label = "PERF_24x7_INVOCATION_TIME_MS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe2328b9:
            #simpleType:uint
            label = "PROC_FABRIC_LINK_TOPOLOGY_ID_TABLE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe242d68:
            #simpleType:uint
            label = "PCIE_32BIT_DMA_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe2457f8:
            #simpleType:uint
            label = "OMI_INBAND_BAR_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe2556ce:
            #simpleType:uint
            label = "HTMSC_IMA_PDBAR_SCOPE"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe2ab0d2:
            #simpleType:uint
            label = "SOCKET_POWER_NOMINAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xe2bf285:
            #simpleType:uint
            label = "RNG_BAR_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xe2c64ec:
            #simpleType:uint
            label = "MSS_VOLT_VPP_SLOPE_POST_DRAM_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe2cfa5e:
            #simpleType:uint
            label = "PROC_PCIE_REFCLOCK_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe2df671:
            #simpleType:uint
            label = "ORDINAL_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe30fb00:
            #simpleType:uint
            label = "MEM_DDR5_GLOBAL_DFE_GAIN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe31e711:
            #simpleType:uint
            label = "MSS_EXP_FW_FAILED_AUTHENTICATION_A"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe326e79:
            #simpleType:uint
            label = "DIMM_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3352f1:
            #simpleType:uint
            label = "PROC_FSP_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xe356be6:
            #simpleType:uint
            label = "HTMSC_FILT_CRESP_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe35b4c7:
            #simpleType:uint
            label = "EFF_DIMM_TYPE"
            traceEntry.append("[2][2]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe390ea6:
            #simpleType:uint
            label = "MEM_VDDR_OFFSET_MILLIVOLTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe3947ec:
            #simpleType:uint
            label = "BMC_FRU_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe3950d2:
            #simpleType:uint
            label = "HTMSC_MODE_DIS_FORCE_GROUP_SCOPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3a87c3:
            #simpleType:uint
            label = "MEM_EXP_DFIMRL_CLK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3b1a88:
            #simpleType:uint
            label = "WOV_HEAVY_PERF_LOSS_THRESH_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3b2a94:
            #simpleType:uint
            label = "HTMSC_FILT_SOURCE_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3b5b79:
            #simpleType:uint
            label = "MEM_EFF_DIMM_TYPE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe3db688:
            #simpleType:uint
            label = "RCW41_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe444f3b:
            #simpleType:uint
            label = "PROC_LCO_MODE_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe4e2b19:
            #simpleType:uint
            label = "WOV_DIRTY_UNCURRENT_CONTROL"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe4fe802:
            #simpleType:uint
            label = "INDEX_BULK_POWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe54617c:
            #simpleType:uint
            label = "MSS_CENT_VDD_INTERCEPT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe54bcd6:
            #simpleType:uint
            label = "IS_STANDALONE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe595eec:
            #simpleType:uint
            label = "MAX_INTERLEAVE_GROUP_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xe5bb6b4:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_2_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe5c8589:
            #simpleType:uint
            label = "SBE_FFDC_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xe5e057a:
            #simpleType:uint
            label = "FIELD_TH_L3_LINE_DELETES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe5e91b7:
            #simpleType:uint
            label = "MSS_MRW_VMEM_REGULATOR_POWER_LIMIT_PER_DIMM_ADJ_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe62726f:
            #simpleType:uint
            label = "DDR5_DIMM_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe63aed7:
            #simpleType:uint
            label = "SBE_COMMIT_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe63c268:
            #simpleType:uint
            label = "N_MAX_MEM_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xe63e435:
            #simpleType:uint
            label = "RCW09_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe6a19c7:
            #simpleType:uint
            label = "PROC_INT_IC_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xe6dbaaf:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SEQUENCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe6e329c:
            pass #not readable
        elif attrEnum == 0xe6f5561:
            #simpleType:uint
            label = "EXPLR_AFU_ACTAG_LEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe72dc05:
            #simpleType:uint
            label = "FREQ_BIAS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe756f73:
            #simpleType:uint
            label = "MEM_IGNORE_PLUG_RULES_DIMM_HEIGHT_MIX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe77b99f:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_TM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe79bdaf:
            #simpleType:uint
            label = "RCW49_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe79c887:
            #simpleType:uint
            label = "TPM_REQUIRED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe7c647e:
            #simpleType:uint
            label = "DDR5_MEMCTRL_ERROR_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe7d3a90:
            pass #complexType - skipping
        elif attrEnum == 0xe7e15a5:
            #simpleType:uint
            label = "OCC_MASTER_CAPABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe7f65d8:
            #simpleType:uint
            label = "MEM_SI_DIMM_RCD_IBT_ODT"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe802bb9:
            #simpleType:uint
            label = "SCAN_CHIPLET_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe80bb76:
            #simpleType:uint
            label = "PROC_ENABLE_DL_TMPL_7"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe81aec2:
            #simpleType:uint
            label = "OMI_TX_LANES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe831572:
            #simpleType:uint
            label = "PROC_FABRIC_SYSTEM_MASTER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe831adc:
            #simpleType:uint
            label = "SPARE_CORES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe83d6b0:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe862fae:
            #simpleType:uint
            label = "OCMB_PLL_BUCKET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe8a4ed4:
            #simpleType:uint
            label = "DDS_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe8bc6dc:
            #simpleType:uint
            label = "MSS_EXP_OMI_SETUP_POLL_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe8e795c:
            #simpleType:uint
            label = "SYSTEM_CORECACHE_DCADJ_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe911abb:
            #simpleType:uint
            label = "MRW_CONVERT_DCBZ_TO_RWITM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe926ea8:
            #simpleType:uint
            label = "SBE_IS_STARTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe92b569:
            #simpleType:uint
            label = "PROC_IO_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe93419a:
            #simpleType:uint
            label = "SCRATCH_UINT8_2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe94e26a:
            #simpleType:uint
            label = "ODY_SENSOR_POLLING_PERIOD_MS_INIT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xe96da20:
            #simpleType:uint
            label = "OMI_REFCLOCK_SWIZZLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe977d9f:
            #simpleType:uint
            label = "L3_HASCLOCKS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe98cc14:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_VOLTAGE_RANGE_SELECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe992285:
            #simpleType:uint
            label = "RVRM_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe9af745:
            pass #complexType - skipping
        elif attrEnum == 0xe9c4920:
            #simpleType:uint
            label = "RCW41_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe9cec48:
            #simpleType:uint
            label = "CHTM_MODE_SINGLE_TIME_STAMP"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xe9d04d7:
            #simpleType:uint
            label = "MEM_EFF_DDR5_VREFCA_SWEEP_MAX"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xea4c21f:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWA_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xea5d545:
            #simpleType:uint
            label = "HTMSC_FILT_CRESP_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xea74580:
            #simpleType:uint
            label = "MEM_CA_PARITY_LATENCY"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xea75a30:
            #simpleType:uint
            label = "RCW48_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xea8022a:
            #simpleType:uint
            label = "HOTPLUG_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xeaa3fa0:
            #simpleType:uint
            label = "MNFG_ABUS_MIN_EYE_HEIGHT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeaacc79:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWD_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeada36c:
            #simpleType:uint
            label = "PROC_FABRIC_X_AGGREGATE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeae5133:
            #simpleType:uint
            label = "HYP_DISPATCH_WHEEL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeaece7d:
            pass #not readable
        elif attrEnum == 0xeb0420c:
            #simpleType:uint
            label = "TLB_RESERVE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xeb1a81f:
            #simpleType:uint
            label = "PROC_INT_NVPG_BAR_PAGE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb1d539:
            #simpleType:uint
            label = "MAX_MBA_PORTS_PER_MBA"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb223ec:
            #simpleType:uint
            label = "RUNN_CHIP_CYCLE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xeb26033:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWC_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb2b814:
            #simpleType:uint
            label = "FORCE_SRAM_MMIO_OVER_I2C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb40b74:
            #simpleType:uint
            label = "RCW49_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb5a690:
            #simpleType:uint
            label = "PROC_NX_RNG_FAILED_INT_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xeb604df:
            #simpleType:uint
            label = "PROC_PCIE_IOP_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeb660ee:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_PHASE_COMB"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xebb5b0c:
            #simpleType:uint
            label = "PROC_OMI_OC_MINOR_VER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xebbaf50:
            #simpleType:uint
            label = "PEC_PCIE_IOP_REVERSAL_NON_BIFURCATED"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xebc1836:
            #simpleType:uint
            label = "MSS_EXP_OMI_CDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xebd258e:
            #simpleType:uint
            label = "MEM_EFF_DIMM_SIZE"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xec20bac:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWC_VOLTAGE_COARSE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xec66ecd:
            #simpleType:uint
            label = "RCW0C_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xec67366:
            #simpleType:uint
            label = "HB_MIN_BACKING_CACHE_FC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xec7753d:
            #simpleType:uint
            label = "RCW01_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xec80f7c:
            #simpleType:uint
            label = "ODY_THERMAL_SENSOR_DIFF_PREVIOUS_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i+x, i+2)[0])
                i += 2
        elif attrEnum == 0xec8827a:
            #simpleType:uint
            label = "NEST_VIO_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xec99916:
            #simpleType:uint
            label = "MSS_EXP_RESP_DDR4_F1RC04"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xecc42ef:
            #simpleType:uint
            label = "HTMSC_CTRL_OTHER_DBG0_STOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed124b9:
            #simpleType:uint
            label = "WOV_LIGHT_PERF_LOSS_THRESH_10THPCT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed1a955:
            #simpleType:uint
            label = "PM_RESTART_PHASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed1d603:
            #simpleType:uint
            label = "INIT_TO_AVAILABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed4417b:
            #simpleType:uint
            label = "HOMER_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed4f5de:
            #simpleType:uint
            label = "DDR5_DRAM_DQS_RTT_PARK"
            traceEntry.append("[2][4][2]:")
            for x in range(16):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed6a4b4:
            #simpleType:uint
            label = "CLOCK_MUX14_OPT_156_SOURCE_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed71ad5:
            #simpleType:uint
            label = "VTPM_ENABLED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed8a03a:
            #simpleType:uint
            label = "RCW0A_CHB_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed9e25a:
            #simpleType:uint
            label = "MEM_EFF_REGISTER_REV"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xed9fafb:
            #simpleType:uint
            label = "RCW43_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeda0efc:
            #simpleType:uint
            label = "WOF_FMMR_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xeda695b:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_DIFF_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xedc754f:
            #simpleType:uint
            label = "MEM_DIMM_DDR4_F0RC1X"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xedd201c:
            #simpleType:uint
            label = "MEM_SI_DIMM_RCD_IBT_CS"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xedd294a:
            pass
        elif attrEnum == 0xee87648:
            #simpleType:uint
            label = "ODY_PHY_MSTRTRAIN_INTERVAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xeee9926:
            #simpleType:uint
            label = "SCRATCH_UINT64_1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xef60a38:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_0_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xef63d66:
            #simpleType:uint
            label = "UNSECURE_HOMER_ADDRESS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xef89eb6:
            #simpleType:uint
            label = "WOF_IO_BASE_POWER_0P01W"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xef8f184:
            pass #not readable
        elif attrEnum == 0xefa08f4:
            #simpleType:uint
            label = "DEFAULT_MIN_PROC_POWER_PER_CHIP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xefa25a2:
            #simpleType:uint
            label = "ODY_UPPERNIBBLE_TG"
            traceEntry.append("[4]:")
            for x in range(4):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xefb544c:
            #simpleType:uint
            label = "MSS_AVDD_PROGRAM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xefb989b:
            #simpleType:uint
            label = "NO_RECONFIG_ON_DECONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xefc5783:
            #simpleType:uint
            label = "HTMSC_TSIZEFILT_PAT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xefe1a41:
            #simpleType:uint
            label = "MSS_EXP_RESP_DRAM_BURST_LENGTH"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xefeedde:
            #simpleType:uint
            label = "PMIC_READ_TIMEOUT_SEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf033211:
            #simpleType:uint
            label = "PROC_FABRIC_X_ATTACHED_TOPOLOGY_ID"
            traceEntry.append("[8]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf036277:
            #simpleType:uint
            label = "PROC_SMF_BAR_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf06459b:
            #simpleType:uint
            label = "ENABLE_RECONFIG_DUE_TO_DECONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf07c71a:
            #simpleType:uint
            label = "IGNORE_OVERSUB_ERRORS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf091dbc:
            #simpleType:uint
            label = "SYSTEM_PGPE_CURRENT_READ_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf0961f9:
            #simpleType:uint
            label = "POS_ON_MEM_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf0baf47:
            #simpleType:uint
            label = "OMI_INBAND_BAR_BASE_ADDR_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf0ccd74:
            #simpleType:uint
            label = "IOHS_MFG_BAD_LANE_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf104f67:
            #simpleType:uint
            label = "PROC_EPS_WRITE_CYCLES_T2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf113798:
            #simpleType:uint
            label = "CHIP_FAN_CFM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf12ba3b:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SEQUENCE_CFG1_R41"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf13ce5f:
            #simpleType:uint
            label = "ALLOW_ATTR_OVERRIDES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf169a2b:
            #simpleType:uint
            label = "RCW08_CHA_D0"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf1d0ed1:
            #simpleType:uint
            label = "PG_SAVED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf1dc314:
            #simpleType:uint
            label = "CLOCK_MUX1_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf1df866:
            #simpleType:uint
            label = "DIMM_POWER"
            traceEntry.append("[12]:")
            for x in range(12):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf1e3ebe:
            #simpleType:uint
            label = "CLOCK_MUX23_PCI_INPUT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf2039e4:
            #simpleType:uint
            label = "PROC_PCIE_PCS_RX_SIGDET_CNTL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf21023b:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_USAGE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf21ca17:
            #simpleType:uint
            label = "MSS_EXP_FW_FAILED_AUTHENTICATION_B"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf24fe73:
            #simpleType:uint
            label = "PROC_FABRIC_TOPOLOGY_ID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf322cf5:
            #simpleType:uint
            label = "ALLOW_ATTR_OVERRIDES_IN_SECURE_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf337a7a:
            pass #complexType - skipping
        elif attrEnum == 0xf33f29f:
            #simpleType:uint
            label = "ODY_PASID_LEN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf349c89:
            #simpleType:uint
            label = "MEM_EFF_DDR5_TX_SLEW_FALL_AC"
            traceEntry.append("[2]:")
            for x in range(2):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf39d257:
            #simpleType:uint
            label = "REPORT_THROTTLE_BELOW_NOMINAL"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf3c3e44:
            #simpleType:uint
            label = "DLR_AVERAGE_HISTORY_DEPTH_OVERRIDE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf3d0e4c:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_1_LOCATION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf3db67c:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_SEQUENCE_DELAY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf41ef0a:
            #simpleType:uint
            label = "ODY_TX_IMPEDANCE_CTRL1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf42d558:
            #simpleType:uint
            label = "PROC_CHTM_BAR_BASE_ADDR"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf43c049:
            #simpleType:uint
            label = "ATTN_AREA_2_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf43e474:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWB_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf4637bc:
            #simpleType:uint
            label = "FSI_MASTER_PORT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf464b76:
            #simpleType:uint
            label = "SYS_CLOCK_INTEGRATED_SPARES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf466e86:
            #simpleType:uint
            label = "CHIP_CONTAINED_BACKING_CACHES_VEC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf46d0b9:
            #simpleType:uint
            label = "MEM_EFF_PMIC1_SWC_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf48e707:
            #simpleType:uint
            label = "REGULATOR_EFFICIENCY_FACTOR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf4e0097:
            #simpleType:uint
            label = "DATA_CACHE_LINE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf4e4164:
            #simpleType:uint
            label = "IOHS_SPREAD_SPECTRUM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf4f230f:
            #simpleType:uint
            label = "MEMORY_BAR_REGS"
            traceEntry.append("[4][10][2]:")
            for x in range(80):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf503383:
            #simpleType:uint
            label = "HDAT_I2C_BUS_FREQ"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf517753:
            #simpleType:uint
            label = "MEM_EFF_DRAM_TRRD_DLR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf5ac814:
            #simpleType:uint
            label = "CHTM_MODE_DIS_STALL"
            traceEntry.append("[32]:")
            for x in range(32):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf5b42fe:
            #simpleType:uint
            label = "OMI_RX_HORIZ_EDGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf5ddeb3:
            #simpleType:uint
            label = "MEM_EFF_PMIC2_SWA_VOLTAGE_SETTING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf64a675:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SEQUENCE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf64aeb7:
            #simpleType:uint
            label = "SBE_SYS_CONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf65896c:
            #simpleType:uint
            label = "PMIC_THROTTLE_TEMP_DEG_C"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf669530:
            #simpleType:uint
            label = "MEM_DDR5_SPD_CL_SUPPORTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf693e4d:
            #simpleType:uint
            label = "ODY_TX_IMPEDANCE_CTRL2"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf6aafcb:
            #simpleType:uint
            label = "MEM_EFF_PMIC3_SWC_CURRENT_WARNING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf70279f:
            #simpleType:uint
            label = "SUPPORTS_DYNAMIC_MEM_VOLT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf738734:
            #simpleType:uint
            label = "N_PLUS_ONE_MAX_MEM_POWER_WATTS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf76206a:
            pass #not readable
        elif attrEnum == 0xf77c444:
            #simpleType:uint
            label = "PROC_OMI_OC_MAJOR_VER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf796610:
            #simpleType:uint
            label = "SAFE_MODE_XSTOP"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf79b949:
            #simpleType:uint
            label = "DEALLOCATED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf7abb7c:
            #nativeType:EntityPath
            label = "PHYS_PATH"
            pathType = { 0x01: "Logical:",
                         0x02: "Physical:",
                         0x03: "Device:",
                         0x04: "Power:" }

            elementInstance = {
                              0x00: "/NA",
                              0x01: "/Sys",
                              0x02: "/Node",
                              0x03: "/DIMM",
                              0x04: "/Membuf",
                              0x05: "/Proc",
                              0x06: "/EX",
                              0x07: "/Core",
                              0x08: "/L2",
                              0x09: "/L3",
                              0x0A: "/L4",
                              0x0B: "/MCS",
                              0x0D: "/MBA",
                              0x0E: "/XBUS",
                              0x0F: "/ABUS",
                              0x10: "/PCI",
                              0x11: "/DPSS",
                              0x12: "/APSS",
                              0x13: "/OCC",
                              0x14: "/PSI",
                              0x15: "/FSP",
                              0x16: "/PNOR",
                              0x17: "/OSC",
                              0x18: "/TODCLK",
                              0x19: "/CONTROL_NODE",
                              0x1A: "/OSCREFCLK",
                              0x1B: "/OSCPCICLK",
                              0x1C: "/REFCLKENDPT",
                              0x1D: "/PCICLKENDPT",
                              0x1E: "/NX",
                              0x1F: "/PORE",
                              0x20: "/PCIESWITCH",
                              0x21: "/CAPP",
                              0x22: "/FSI",
                              0x23: "/EQ",
                              0x24: "/MCA",
                              0x25: "/MCBIST",
                              0x26: "/MI",
                              0x27: "/DMI",
                              0x28: "/OBUS",
                              0x2A: "/SBE",
                              0x2B: "/PPE",
                              0x2C: "/PERV",
                              0x2D: "/PEC",
                              0x2E: "/PHB",
                              0x2F: "/SYSREFCLKENDPT",
                              0x30: "/MFREFCLKENDPT",
                              0x31: "/TPM",
                              0x32: "/SP",
                              0x33: "/UART",
                              0x34: "/PS",
                              0x35: "/FAN",
                              0x36: "/VRM",
                              0x37: "/USB",
                              0x38: "/ETH",
                              0x39: "/PANEL",
                              0x3A: "/BMC",
                              0x3B: "/FLASH",
                              0x3C: "/SEEPROM",
                              0x3D: "/TMP",
                              0x3E: "/GPIO_EXPANDER",
                              0x3F: "/POWER_SEQUENCER",
                              0x40: "/RTC",
                              0x41: "/FANCTLR",
                              0x42: "/OBUS_BRICK",
                              0x43: "/NPU",
                              0x44: "/MC",
                              0x45: "/TEST_FAIL",
                              0x46: "/MFREFCLK",
                              0x47: "/SMPGROUP",
                              0x48: "/OMI",
                              0x49: "/MCC",
                              0x4A: "/OMIC",
                              0x4B: "/OCMB_CHIP",
                              0x4C: "/MEM_PORT",
                              0x4D: "/I2C_MUX",
                              0x4E: "/PMIC",
                              0x4F: "/NMMU",
                              0x50: "/PAU",
                              0x51: "/IOHS",
                              0x52: "/PAUC",
                              0x53: "/FC",
                              0x54: "/LPCREFCLKENDPT",
                              0x55: "/GENERIC_I2C_DEVICE",
                              0x56: "/MDS_CTLR",
                              0x57: "/DCM",
                              0x66: "/POWER_IC",
                              0x67: "/TEMP_SENSOR",
                              0x68: "/LAST_IN_RANGE",
                              }
            pType = data[i]
            i += 1
            start+=1
            pathString = pathType.get(pType, "Unknown:")
            pathSize = data[i]
            i += 1
            for x in range(0, pathSize, 2):
                pathString += elementInstance.get(data[start], "/UNKNOWN")
                pathString += str(data[start+1])
                start+=2

            return pathString, start+1
        elif attrEnum == 0xf7bb641:
            #simpleType:uint
            label = "MSS_EXP_CDR_BW_OVERRIDE_VALUE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf7e4fbb:
            #simpleType:uint
            label = "PHYS_PRES_ASSERTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf811b59:
            #simpleType:uint
            label = "SYSTEM_FMAX_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf844545:
            #simpleType:uint
            label = "MSS_MRW_VPP_OFFSET_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf84a889:
            #simpleType:uint
            label = "RCW46_CHB_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf873da7:
            #simpleType:uint
            label = "BLOCK_SPEC_DECONFIG"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf883c12:
            pass #complexType - skipping
        elif attrEnum == 0xf888d7a:
            #simpleType:uint
            label = "HOMER_HCODE_LOADED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf88f412:
            #simpleType:uint
            label = "PROC_LCO_TARGETS_COUNT"
            traceEntry.append("[3]:")
            for x in range(3):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf8dd85b:
            #simpleType:uint
            label = "PROC_FSP_BAR_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xf907441:
            #simpleType:uint
            label = "MNFG_TH_MEMORY_RT_RCE_PER_RANK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf908b6e:
            #simpleType:uint
            label = "MEM_SI_PHY_EQUALIZATION"
            traceEntry.append("[2][4]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf91795a:
            #simpleType:uint
            label = "HTMSC_TTYPEFILT_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf93274e:
            #simpleType:uint
            label = "PG_MVPD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xf949e3a:
            #simpleType:uint
            label = "SYSTEM_RVRM_DISABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf991bc4:
            #simpleType:uint
            label = "SBE_CUST_FORCE_MVPD_ONLY"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf995f8c:
            #simpleType:uint
            label = "WOF_IO_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xf9a81a2:
            #simpleType:uint
            label = "IOHS_DRAWER_INTERCONNECT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf9ab3cb:
            #simpleType:uint
            label = "PROC_TMPL_A_PACING"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf9e5235:
            #simpleType:uint
            label = "RCW45_CHA_D1"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf9eeb51:
            #simpleType:uint
            label = "SECURE_VERSION_SEEPROM"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf9f4fcc:
            #simpleType:uint
            label = "RUNN_USE_QME_TIMEBASE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xf9fde6a:
            #simpleType:uint
            label = "HUID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfa1c9e6:
            #simpleType:uint
            label = "MAX_CHIPLETS_PER_PROC"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfaa68ab:
            #simpleType:uint
            label = "TOD_CPU_DATA"
            traceEntry.append("[44]:")
            for x in range(44):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfacac31:
            #simpleType:uint
            label = "ODY_METADATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfaf66cf:
            #simpleType:uint
            label = "MEM_EFF_EFD_PMIC2_SWB_VOLTAGE_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfb5ce79:
            #simpleType:uint
            label = "TLB_DATA_ENTRIES"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfb84286:
            #simpleType:uint
            label = "ODY_PLL_BYPASS_EN"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfbc25fd:
            pass
        elif attrEnum == 0xfbef093:
            #simpleType:uint
            label = "ODY_DMEM_FIRST_LOAD"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfc1f6d8:
            #simpleType:uint
            label = "OMI_RX_VERT_OFFSET"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfc574bf:
            #simpleType:uint
            label = "L3_CACHE_LINE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfc7152f:
            #simpleType:uint
            label = "IPS_ENTER_UTILIZATION_PERCENT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfc7c1e8:
            #simpleType:uint
            label = "L2_CACHE_LINE_SIZE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfc9bdd9:
            #simpleType:uint
            label = "MSS_MRW_AVDD_OFFSET_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfca1112:
            #simpleType:uint
            label = "OS_IPL_MODE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfca622c:
            #simpleType:uint
            label = "TLB_DATA_ASSOC_SETS"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfcb8929:
            #simpleType:uint
            label = "MEM_EFF_PMIC0_SWD_SEQUENCE_ORDER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfcea8b7:
            #simpleType:uint
            label = "ODY_DFIPHYUPDCNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfceb067:
            #simpleType:uint
            label = "SYS_VRT_STATIC_DATA_ENABLE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfcfe1a6:
            #simpleType:uint
            label = "FSP_BASE_ADDR"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xfd41e04:
            #simpleType:uint
            label = "STOP_LEVELS_SUPPORTED"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+2)[0])
                i += 2
        elif attrEnum == 0xfdbc8b2:
            #simpleType:uint
            label = "HTMSC_MEM_SCOPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfdd950c:
            #simpleType:uint
            label = "ATTN_POLL_PLID"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfeeb8d6:
            #simpleType:uint
            label = "MAX_DIMM_POWER"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        elif attrEnum == 0xfefe6c5:
            #simpleType:uint
            label = "MEM_EFF_THERM_SENSOR_3_TYPE"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xff18a73:
            #simpleType:uint
            label = "NPU_MMIO_BAR_BASE_ADDR"
            traceEntry.append("[4][2]:")
            for x in range(8):
                traceEntry.append(hexConcat(data, i, i+8)[0])
                i += 8
        elif attrEnum == 0xff198ec:
            pass
        elif attrEnum == 0xff6c8c6:
            #simpleType:uint
            label = "SBE_MINIMUM_SECURE_VERSION"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xff9735d:
            #simpleType:uint
            label = "HDAT_I2C_MASTER_PORT"
            traceEntry.append("[192]:")
            for x in range(192):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xffba6d7:
            #simpleType:uint
            label = "MSS_EXP_RESP_DATA_MASK"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfff38c9:
            #simpleType:uint
            label = "RUN_ODY_HWP_FROM_HOST"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+1)[0])
                i += 1
        elif attrEnum == 0xfffca9d:
            #simpleType:uint
            label = "MPIPL_HB_MDRT_COUNT"
            for x in range(1):
                traceEntry.append(hexConcat(data, i, i+4)[0])
                i += 4
        else:
            label="Unknown"
            traceEntry.append(hex(attrEnum))

        if label:
            subd[label]=traceEntry

    d['Target Attributes']=subd
    jsonStr = json.dumps(d)
    return jsonStr
