# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/isteps/mss/makefile $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2016,2024
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG
ROOTPATH = ../../../..

IMPORT_PATH              = ${ROOTPATH}/src/import
PROCEDURES_PATH          = ${IMPORT_PATH}/chips/p10/procedures
EXPLORER_PROCEDURES_PATH = ${IMPORT_PATH}/chips/ocmb/explorer/procedures
PMIC_PROCEDURES_PATH     = ${IMPORT_PATH}/chips/ocmb/common/procedures
ODYSSEY_PROCEDURES_PATH  = ${IMPORT_PATH}/chips/ocmb/odyssey/procedures

#Add all the extra include paths
EXTRAINCDIR += ${ROOTPATH}/src/import/hwpf/fapi2/include/plat
EXTRAINCDIR += ${ROOTPATH}/src/import/hwpf/fapi2/include
EXTRAINCDIR += ${ROOTPATH}/src/include/usr/fapi2/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/p10/utils/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/p10/utils/imageProcs/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/common/utils/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/common/utils/imageProcs/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/p10/common/include/
EXTRAINCDIR += ${IMPORT_PATH}/chips/ocmb/explorer/common/include/
EXTRAINCDIR += ${IMPORT_PATH}/chips/ocmb/odyssey/common/include/
EXTRAINCDIR += ${EXPLORER_PROCEDURES_PATH}
EXTRAINCDIR += ${ODYSSEY_PROCEDURES_PATH}
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/ocmb/explorer/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/ocmb/odyssey/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/generic/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/p10/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/p10/procedures/hwp/memory/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/ocmb/common/procedures/hwp/pmic/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/ocmb/explorer/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/chips/ocmb/odyssey/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/memory/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/sppe/
EXTRAINCDIR += ${ROOTPATH}/src/build/tools/extern/ekb/chips/ocmb/odyssey/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/common/utils/scomt/
EXTRAINCDIR += ${PMIC_PROCEDURES_PATH}/hwp/pmic/
EXTRAINCDIR += ${PMIC_PROCEDURES_PATH}/hwp/pmic/lib/
EXTRAINCDIR += ${ROOTPATH}/src/import/generic/memory/lib/
EXTRAINCDIR += ${ODYSSEY_PROCEDURES_PATH}/hwp/perv/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/utils/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/memory/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/memory/lib/
EXTRAINCDIR += ${ROOTPATH}/src/import/chips/ocmb/procedures/hwp/initfiles/
EXTRAINCDIR += ${ROOTPATH}/src/import/hwpf/sbe_utils/include
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/attr
EXTRAINCDIR += ${ROOTPATH}/src/import/hwpf/sbe_utils/include/
EXTRAINCDIR += ${ROOTPATH}/src/usr/
EXTRAINCDIR += ${ROOTPATH}/obj/genfiles/attr/


MSS_LIB += ${PROCEDURES_PATH}/hwp/memory
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/plug_rules/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/ccs/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/dimm/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/dimm/ddr4/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/ecc/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/eff_config/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/omi/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/fir/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/freq/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/plug_rules/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/mc/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/mcbist/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/phy/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/power_thermal/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/spd/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/utils/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/workarounds/
MSS_LIB += ${PROCEDURES_PATH}/hwp/memory/lib/rosetta_map/
MSS_LIB += ${ROOTPATH}/src/import/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/lrdimm/ddr4/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/rdimm/ddr4/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/common/ddr4/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/ddimm/ddr4/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/ddimm/ddr5/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/spd/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/ccs/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/data_engine/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/ecc/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/utils/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/utils/shared/
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/utils/freq
MSS_LIB += ${ROOTPATH}/src/import/generic/memory/lib/utils/mcbist/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/dimm/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/dimm/ddr4/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/shared
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/ccs/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/mc/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/eff_config/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/utils/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/freq/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/power_thermal/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/omi/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/i2c/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/fir/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/mcbist/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/plug_rules/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/phy/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/ecc/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/inband/
MSS_LIB += ${EXPLORER_PROCEDURES_PATH}/hwp/memory/lib/workarounds/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/ccs/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/dimm/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/ecc/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/eff_config/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/mc/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/phy/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/utils/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/workarounds/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/mcbist/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/fir/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/power_thermal/
MSS_LIB += ${ODYSSEY_PROCEDURES_PATH}/hwp/memory/lib/inband/

EXTRAINCDIR += ${MSS_LIB}

include ${ROOTPATH}/src/build/mkrules/script.rules.mk
include ${ROOTPATH}/src/build/mkrules/verbose.rules.mk

# Generate generic_system_accessors header file
GENERATED = generic_system_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/generic/memory/lib/
$(GENERATED)_FILE_PREFIX = mss_generic_system

SOURCES += $(IMPORT_PATH)/hwpf/fapi2/xml/attribute_info/system_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_mrw_attributes.xml
SOURCES += $(IMPORT_PATH)/chips/p10/procedures/xml/attribute_info/p10_freq_attributes.xml
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_generic_system_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.generic_system_accessors.built

define generic_system_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef

$(call BUILD_GENERATED)
##


# Generate generic_memory_accessors header file
GENERATED = generic_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/generic/memory/lib
$(GENERATED)_FILE_PREFIX = mss_generic

SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_dq_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_eff_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_si_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_ddr5_eff_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_ddr5_mr_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/generic_memory_thermal_sensor_attributes.xml
SOURCES += $(IMPORT_PATH)/generic/procedures/xml/attribute_info/ocmb_power_thermal.xml

CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_generic_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_generic_attribute_setters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.generic_accessors.built

define generic_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef

$(call BUILD_GENERATED)
##


# Generate explorer_memory_accessors header file
GENERATED = gen_exp_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/chips/ocmb/explorer/procedures/hwp/memory/lib/
$(GENERATED)_FILE_PREFIX = mss_explorer

SOURCES += $(shell find $(IMPORT_PATH)/chips/ocmb/explorer/procedures/xml/attribute_info/ -type f)

CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_explorer_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_explorer_attribute_setters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.gen_exp_accessors.built

define gen_exp_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef
$(call BUILD_GENERATED)
##


# Generate odyssey_memory_accessors header file
GENERATED = gen_ody_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/chips/ocmb/odyssey/procedures/hwp/memory/lib/
$(GENERATED)_FILE_PREFIX = mss_odyssey

SOURCES += $(shell find $(IMPORT_PATH)/chips/ocmb/odyssey/procedures/xml/attribute_info/ -type f)

CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_odyssey_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_odyssey_attribute_setters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.gen_ody_accessors.built

define gen_ody_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef
$(call BUILD_GENERATED)
##


## Generate mss_p10 header file
GENERATED = gen_p10_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/chips/p10/procedures/hwp/memory/lib/
$(GENERATED)_FILE_PREFIX = mss_p10

SOURCES += $(IMPORT_PATH)/chips/p10/procedures/xml/attribute_info/p10_io_attributes.xml
SOURCES += $(IMPORT_PATH)/chips/p10/procedures/xml/attribute_info/p10_omi_setup_bars.xml
SOURCES += $(IMPORT_PATH)/chips/p10/procedures/xml/attribute_info/p10_omi_init.xml

CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_p10_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_p10_attribute_setters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.gen_p10_accessors.built

define gen_p10_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef
$(call BUILD_GENERATED)
##


## Generate pmic_accessors header file
GENERATED = gen_pmic_accessors
COMMAND = gen_accessors.pl
$(GENERATED)_COMMAND_PATH = $(IMPORT_PATH)/generic/memory/tools/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/chips/ocmb/common/procedures/hwp/pmic/lib/
$(GENERATED)_FILE_PREFIX = mss_pmic

SOURCES += $(IMPORT_PATH)/chips/ocmb/common/procedures/xml/attribute_info/pmic_eff_attributes.xml
SOURCES += $(IMPORT_PATH)/chips/ocmb/common/procedures/xml/attribute_info/pmic_attributes.xml

CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_pmic_attribute_getters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/mss_pmic_attribute_setters.H
CLEAN_TARGETS += ${$(GENERATED)_PATH}/.gen_pmic_accessors.built

define gen_pmic_accessors_RUN
		$(C1) mkdir $$($(GENERATED)_PATH) -p
		$(C1) perl -I$(IMPORT_PATH)/generic/memory/tools/ $$< --system=P10 --output-dir=$$($(GENERATED)_PATH) --output-file-prefix=$$($(GENERATED)_FILE_PREFIX) $$(filter-out $$<,$$^)
endef
$(call BUILD_GENERATED)
##

## generate code for Odyssey Attribute exchange
GENERATED=ody_sbe_attribute_generated
COMMAND=attrtool
$(GENERATED)_COMMAND_PATH=$(ROOTPATH)/src/import/hwpf/sbe_utils/gentool/attrtool/

$(GENERATED)_PATH = ${ROOTPATH}/obj/genfiles/attr

ATTRFAPI_DIR=$(ROOTPATH)/src/import/hwpf/fapi2/xml/attribute_info/
P10_ATTR_DIR=$(ROOTPATH)/src/import/chips/p10/procedures/xml/attribute_info/

ATTRFILES := $(ATTRFAPI_DIR)/common_attributes.xml
ATTRFILES += $(ATTRFAPI_DIR)/system_attributes.xml
ATTRFILES += $(ATTRFAPI_DIR)/unit_attributes.xml
ATTRFILES += $(ATTRFAPI_DIR)/chip_attributes.xml

P10_ATTR_FILES := $(shell find $(ROOTPATH)/src/import/chips/p10/procedures/xml/attribute_info -name 'p10*attr*.xml' | sort)
ATTRFILES += $(P10_ATTR_FILES)

GENERIC_MEM_ATTRFILES := $(shell find $(ROOTPATH)/src/import/generic/procedures/xml/attribute_info -name '*.xml' | sort)
ATTRFILES += $(GENERIC_MEM_ATTRFILES)

ODY_ATTRFILES := $(shell find $(ROOTPATH)/src/import/chips/ocmb/odyssey/procedures/xml/attribute_info/ -name '*.xml' | sort)
ATTRFILES += $(ODY_ATTRFILES)

TARGET_LIST := $(ROOTPATH)/src/import/hwpf/sbe_utils/gentool/attrtool/targetlist.json

$(GENERATED)_RUN=$(call ODY_GENERATED_RUN)

# ODY_GENERATED_RUN
#  *This function executes as a single shell command. It makes use of
#   command line chaining operators to ensure the steps are done in order.
#
#  Steps:
#   Set TMPDIR for python to avoid any cross-device file copy errors
#   install python venv
#   if python venv install is successful, attempt to upgrade pip
#     if upgrade fails, use ensurepip to verify the pip is installed
#       if ensurepip fails, attempt the jinja install anyway
#   install jinja
#   if jinja install is successful, generate the files
#
#  There are three success scenarios
#  1. all tasks succeed
#  2. upgrade pip fails, ensurepip success, install jinja success
#  3. upgrade pip fails, ensurepip fails, install jinja success
#    *Any other error scenario fails the make
#
define ODY_GENERATED_RUN
        export TMPDIR="$$($(GENERATED)_PATH)/tmp" \
        && python3 -m venv $$($(GENERATED)_PATH) \
        && . $$($(GENERATED)_PATH)/bin/activate \
        && python -m pip install --upgrade pip \
           || python -m ensurepip --default-pip \
           || python -m pip install --upgrade --no-cache-dir jinja2 \
        && python -m pip install --upgrade --no-cache-dir jinja2 \
        && $$< genhwp ody $(TARGET_LIST) $(ATTRFILES) --outdir=$$($(GENERATED)_PATH) \
        && echo "${GENERATED} success"
endef
$(call BUILD_GENERATED)
##


# Add targets from 'BUILD_GENERATED' into the Hostboot 'GEN_PASS'.
GEN_PASS_BODY += $(GEN_TARGETS)
CLEAN_TARGETS += $(GEN_TARGETS)

# Add common and generated parts to object list.

MSS_PATH := $(PROCEDURES_PATH)/hwp/memory/lib
MSS_SOURCE := $(shell find $(MSS_PATH) -name '*.C' -exec basename {} \;)
MSS_MODULE_OBJS += $(patsubst %.C,%.o,$(MSS_SOURCE))

MSS_PATH_GENERIC_MEMORY := ${ROOTPATH}/src/import/generic/memory/lib
MSS_GENERIC_MEMORY_SOURCE := $(shell find $(MSS_PATH_GENERIC_MEMORY) -name '*.C' -exec basename {} \;)
MSS_MODULE_OBJS += $(patsubst %.C,%.o,$(MSS_GENERIC_MEMORY_SOURCE))

MSS_PATH_EXPLORER := $(EXPLORER_PROCEDURES_PATH)/hwp/memory/lib
MSS_EXPLORER_SOURCE := $(shell find $(MSS_PATH_EXPLORER) -name '*.C' -exec basename {} \;)
MSS_MODULE_OBJS += $(patsubst %.C,%.o,$(MSS_EXPLORER_SOURCE))

MSS_PATH_ODYSSEY := $(ODYSSEY_PROCEDURES_PATH)/hwp/memory/lib/workarounds
MSS_ODYSSEY_SOURCE := $(shell find $(MSS_PATH_ODYSSEY) -name '*.C' -exec basename {} \;)
MSS_MODULE_OBJS += $(patsubst %.C,%.o,$(MSS_ODYSSEY_SOURCE))

MSS_MODULE_OBJS += ody_blame_firs.o
MSS_MODULE_OBJS += ody_fir.o
MSS_MODULE_OBJS += ody_draminit_utils.o
MSS_MODULE_OBJS += ody_proc_specific_fir.o

MODULE = isteps_mss

VPATH += ${ROOTPATH}/src/import/generic/memory/lib/utils/
VPATH += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/utils/
VPATH += ${ROOTPATH}/src/import/chips/ocmb/odyssey/procedures/hwp/memory/
VPATH += ${ROOTPATH}/src/import/hwpf/sbe_utils/src/
VPATH += ${ROOTPATH}/obj/genfiles/attr/

OBJS += $(MSS_MODULE_OBJS)
OBJS := $(filter-out c_str.o, $(OBJS))
$(call BUILD_MODULE)

VPATH += ${MSS_LIB}

SUBDIRS += runtime

#HWP build tool
include ${ROOTPATH}/procedure.rules.mk
include ${ROOTPATH}/config.mk
